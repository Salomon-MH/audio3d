{"version":3,"sources":["3d/SceneCanvas.tsx","3d/KeyboardListener.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["MouseButton","ObjectDragDirection","KeyboardListener","_this","this","target","arguments","length","undefined","document","Object","classCallCheck","keysPressed","Set","reset","clear","onKeyDown","e","preventDefault","add","key","onKeyUp","delete","onClick","button","shiftKey","addEventListener","removeEventListener","has","directions","up","Vector3","down","left","right","forwards","backwards","SceneCanvas","options","rafHandle","previousTimestamp","activeMesh","scene","Scene","controlsScene","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","grid","GridHelper","smallCube","Mesh","outlineMesh","arrows","Group","keys","isDraggingCamera","objectDragDirection","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setSize","animate","t","window","requestAnimationFrame","dt","rotation","x","y","isPressed","translateOnAxis","position","rotateOnWorldAxis","rotateOnAxis","render","copy","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","raycaster","Raycaster","setFromCamera","checkControlsClick","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","movementY","q","Quaternion","getWorldQuaternion","d","applyQuaternion","divideScalar","AxisX","z","AxisY","AxisZ","PlaneYZ","PlaneXZ","PlaneXY","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","domElement","stopPropagation","axisGeometry","BoxGeometry","axisX","MeshBasicMaterial","color","set","Math","PI","userData","direction","axisY","axisZ","planeGeometry","PlaneGeometry","planeYZ","side","DoubleSide","planeXZ","planeXY","geometry","material","MeshNormalMaterial","cube","translateX","lookAt","outlineMaterial","BackSide","scale","multiplyScalar","console","log","toJSON","listen","appendChild","cancelAnimationFrame","stop","removeChild","intersections","intersectObjects","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","o","value","object","hasOwnProperty","err","return","remove","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","isMesh","onSelect","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Editor","state","selectedObject","mainRef","React","createRef","sceneCanvas","setState","attach","current","detach","react_default","a","createElement","uuid","ref","Component","Boolean","location","hostname","match","ReactDOM","Editor_Editor","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a6b05b6.chunk.js","sourcesContent":["import {\n  ArrowHelper,\n  BackSide,\n  BoxGeometry,\n  Color,\n  DoubleSide,\n  GridHelper,\n  Group,\n  Line3,\n  LineBasicMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  PerspectiveCamera,\n  Plane,\n  PlaneGeometry,\n  Quaternion,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport KeyboardListener from \"./KeyboardListener\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nenum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\ninterface Options {\n  onSelect(object: Mesh | null): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  activeMesh: Mesh | null = null;\n\n  scene = new Scene();\n  controlsScene = new Scene();\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  grid = new GridHelper(10, 10);\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  arrows = new Group();\n\n  keys = new KeyboardListener();\n  isDraggingCamera = false;\n  objectDragDirection: ObjectDragDirection | null = null;\n\n  constructor(private options: Options) {\n    this.renderer.autoClear = false;\n    this.canvas = this.renderer.domElement;\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup controls for active mesh\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n    const axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0xff0000 })\n    );\n    axisX.position.set(0.25, 0.0, 0.0);\n    axisX.rotation.y = Math.PI / 2;\n    axisX.userData.direction = ObjectDragDirection.AxisX;\n    const axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0x00ff00 })\n    );\n    axisY.position.set(0.0, 0.25, 0.0);\n    axisY.rotation.x = Math.PI / 2;\n    axisY.userData.direction = ObjectDragDirection.AxisY;\n    const axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0x0000ff })\n    );\n    axisZ.position.set(0.0, 0.0, 0.25);\n    axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n    const planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0x00ffff, side: DoubleSide })\n    );\n    planeYZ.position.set(0.0, 0.25, 0.25);\n    planeYZ.rotation.y = Math.PI / 2;\n    planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n    const planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xff00ff, side: DoubleSide })\n    );\n    planeXZ.position.set(0.25, 0.0, 0.25);\n    planeXZ.rotation.x = Math.PI / 2;\n    planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n    const planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xffff00, side: DoubleSide })\n    );\n    planeXY.position.set(0.25, 0.25, 0.0);\n    planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.controlsScene.add(axisX);\n    this.controlsScene.add(axisY);\n    this.controlsScene.add(axisZ);\n\n    this.controlsScene.add(planeYZ);\n    this.controlsScene.add(planeXZ);\n    this.controlsScene.add(planeXY);\n\n    // Setup scene\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    const material = new MeshNormalMaterial();\n    const cube = new Mesh(geometry, material);\n    cube.position.y += 0.5;\n\n    this.smallCube.geometry = new BoxGeometry(0.25, 0.25, 0.25);\n    this.smallCube.material = material;\n    this.smallCube.translateX(2);\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(cube.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    this.keys.stop();\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    // this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n\n    this.smallCube.rotation.x += 0.01;\n    this.smallCube.rotation.y += 0.01;\n    // this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.activeMesh) {\n      this.controlsScene.position.copy(this.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controlsScene, this.camera);\n    }\n  };\n\n  checkControlsClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.controlsScene.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        console.log(\"Drag object:\", o.userData.direction);\n        this.objectDragDirection = o.userData.direction;\n        this.canvas.requestPointerLock();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    if (this.activeMesh) {\n      this.activeMesh.remove(this.outlineMesh);\n      this.activeMesh = null;\n    }\n\n    const intersections = raycaster.intersectObjects(this.scene.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.activeMesh = o;\n        this.outlineMesh.geometry = this.activeMesh.geometry;\n        this.activeMesh.add(this.outlineMesh);\n\n        this.options.onSelect(o);\n        return true;\n      }\n    }\n\n    this.options.onSelect(null);\n    return false;\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    const size = this.renderer.getSize(new Vector2());\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // console.log(size, x, y);\n\n    const raycaster = new Raycaster();\n    raycaster.setFromCamera({ x, y }, this.camera);\n    if (!this.checkControlsClick(raycaster)) {\n      this.checkSceneClick(raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n    }\n    if (e.button === MouseButton.Primary && this.objectDragDirection !== null) {\n      this.objectDragDirection = null;\n    }\n    if (!this.isDraggingCamera && this.objectDragDirection === null) {\n      document.exitPointerLock();\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    }\n    if (this.objectDragDirection !== null && this.activeMesh) {\n      const q = new Quaternion();\n      this.camera.getWorldQuaternion(q);\n\n      const d = new Vector3(e.movementX, -e.movementY, 0);\n      d.applyQuaternion(q);\n      d.divideScalar(100);\n\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          d.y = d.z = 0;\n          break;\n        case ObjectDragDirection.AxisY:\n          d.x = d.z = 0;\n          break;\n        case ObjectDragDirection.AxisZ:\n          d.x = d.y = 0;\n          break;\n        case ObjectDragDirection.PlaneYZ:\n          d.x = 0;\n          break;\n        case ObjectDragDirection.PlaneXZ:\n          d.y = 0;\n          break;\n        case ObjectDragDirection.PlaneXY:\n          d.z = 0;\n          break;\n      }\n\n      this.activeMesh.position.add(d);\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta);\n  };\n}\n","export default class KeyboardListener {\n  keysPressed = new Set<string>();\n\n  constructor(private target: Document = document) {}\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    this.target.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    this.target.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.add(e.key);\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Mesh } from \"three\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\ninterface State {\n  selectedObject: Mesh | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  state: State = { selectedObject: null };\n  mainRef = React.createRef<HTMLElement>();\n  sceneCanvas = new SceneCanvas({\n    onSelect: selectedObject => {\n      this.setState({ selectedObject });\n    }\n  });\n\n  componentDidMount(): void {\n    this.sceneCanvas.attach(this.mainRef.current!);\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          {o && <p>Selected object: {o.uuid}</p>}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}