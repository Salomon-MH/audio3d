{"version":3,"sources":["audio/AudioImplementation.ts","data/export.ts","data/db.ts","audio/DistanceModel.ts","audio/defaultAudioContext.ts","utils/iter.ts","project/GameObject.ts","project/AudioLibrary.ts","project/CodeBlock.ts","utils/math.ts","audio/binaural/BinauralSource.ts","audio/binaural/BinauralScene.ts","audio/Audio3D.ts","audio/Listener3D.ts","audio/binaural/hrtf.ts","audio/AudioScene.ts","project/SpawnMarker.ts","project/Room.ts","project/Project.ts","utils/files.ts","data/import.ts","input/GamepadListener.ts","input/KeyboardListener.ts","runtime/Runtime.ts","runtime/styled.ts","runtime/RuntimeContainer.tsx","editor/Modal.tsx","editor/AudioFileModal.tsx","editor/AudioLibraryModal.tsx","editor/MenuBar.tsx","utils/react.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","editor/EditorCanvas.ts","editor/RoomEditor.tsx","editor/ProjectInfoModal.tsx","editor/ProjectManagerModal.tsx","editor/SettingsModal.tsx","editor/Editor.tsx","editor/SpawnEditor.tsx","editor/ProjectSaveModal.tsx","editor/ProjectLoadedModal.tsx","serviceWorker.ts","index.tsx"],"names":["AudioImplementation","createZip","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","project","metadata","zip","audioLibrary","audioFolder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_value2","_value3","key","value","wrap","_context","prev","next","toData","Zip","file","JSON","stringify","folder","asyncIterator","entries","sent","done","slicedToArray","push","id","name","type","toString","data","t0","return","finish","abrupt","generateAsync","stop","this","_x","apply","arguments","saveAsZip","_ref2","_callee2","_context2","saveAs","concat","_x2","dbPromise","openDB","upgrade","db","oldVersion","deleteObjectStore","createObjectStore","keyPath","autoIncrement","createIndex","saveProject","put","_x3","deleteProject","_ref3","_callee3","tx","projects","audios","cursor","_context3","transaction","objectStore","delete","index","openKeyCursor","primaryKey","continue","_x4","getAllProjects","_ref4","_callee4","_context4","getAllFromIndex","loadAudio","_ref5","_callee5","projectId","audioId","_context5","get","_x5","_x6","saveAudio","_ref6","_callee6","audio","_context6","_x7","saveAudioMap","_ref7","_callee7","audioMap","_ref10","_ref9","entry","_context7","undefined","Symbol","iterator","store","objectSpread","_x8","_x9","deleteAudio","_ref11","_callee8","_context8","_x10","_x11","_callee9","_context9","awaitAsyncGenerator","openCursor","DistanceModel","defaultAudioContext","AudioContext","element","InteractionType","AudioLibrary","Map","nextId","set","clear","_iterateProjectAudios","iterateProjectAudios","_wrapIteratorAsync","wrapIteratorAsync","CodeBlock","source","length","classCallCheck","func","object","roomState","Function","call","playerState","ex","console","error","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","audioScene","_this","possibleConstructorReturn","getPrototypeOf","audioFile","interactionType","None","interactionAudioId","codeBlock","teleportTarget","createAudio3D","add","execute","activeRoom","Teleport","_this$teleportTarget","roomId","spawnId","teleportPlayer","playAudio","PlaySound","loop","decodeAudioData","slice","buffer","setBuffer","setLoop","play","log","uuid","position","toArray","scale","rotation","codeBlockSource","Mesh","radToDeg","rad","Math","PI","degToRad","deg","roundToPrecision","precision","round","BinauralSource","scene","Vector3","orientation","binauralFIR","BinauralFIR","audioContext","HRTFDataset","hrtfDataset","connect","destination","input","distance","listenerPosition","azimuth","atan2","x","z","listenerAzimuth","listenerOrientation","elevation","y","sqrt","setPosition","dummyHRTFDataset","createBuffer","sampleRate","BinauralScene","sources","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","update","Audio3D","webAudioContext","binauralAudioContext","resonanceAudioContext","webAudioPannerNode","binauralSource","resonanceSource","webAudioBufferSource","binauralBufferSource","resonanceBufferSource","hasStarted","isPlaying","onAudioEnded","createBufferSource","onended","distanceModel","force","esm_get","prototype","quaternion","Quaternion","matrixWorld","decompose","applyQuaternion","setOrientation","copy","setFromMatrix","start","disconnect","Object3D","Listener3D","webAudioListener","binauralScene","resonanceScene","up","setListenerFromMatrix","firCoefficientsToAudioBuffer","firCoeffsLeft","firCoeffsRight","copyToChannel","Float32Array","loadHRTFDataset","resp","dataset","fetch","json","map","hrtf","fir_coeffs_left","fir_coeffs_right","AudioScene","options","audioImplementation","WebAudio","ResonanceAudio","binauralHRTFDataset","isLoadingBinauralHRTFDataset","listener3D","listener","setRoomProperties","dimensions","Utils","DEFAULT_ROOM_DIMENSIONS","materials","DEFAULT_ROOM_MATERIALS","output","suspend","createPanner","createSource","close","resume","Binaural","loadBinauralHRTFDataset","setHRTFDataset","roomDimensions","roomMaterials","spawnGeometry","spawnMaterial","color","directionGeometry","SpawnMarker","directionMarker","wallGeometry","wallMaterial","Room","width","depth","height","grid","wallNorth","wallEast","wallSouth","wallWest","camera","PerspectiveCamera","collisionAudio","footstepAudio","interactAvailAudio","spawns","ambientLight","AmbientLight","light","PointLight","lookAt","gridSize","max","GridHelper","updateWalls","remove","marker","setDistanceModel","setRolloff","rollofModel","panningModel","_this$roomDimensions","s","objects","children","filter","c","go","_this2","fromData","toConsumableArray","addSpawn","gameObjects","o","Scene","noop","defaultEvents","onSelectSpawn","onSelectObject","onScale","onTranslate","Project","events","Inverse","ambisonicsOrder","DEFAULT_AMBISONIC_ORDER","DEFAULT_ATTENUATION_ROLLOFF","rooms","audioType","playerHeight","collisionAudioId","footstepAudioId","interactAvailAudioId","collisionAudioFile","footstepAudioFile","interactAvailAudioFile","collisionAudioBuffer","footstepAudioBuffer","interactAvailAudioBuffer","activeAudioImplementation","activeSpawn","activeObject","outlineMesh","firstRoom","addObject","material","MeshBasicMaterial","side","BackSide","multiplyScalar","room","setAmbisonicOrder","selectRoom","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","obj","order","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","model","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","selectAudioImplementation","aspect","updateProjectionMatrix","unselect","geometry","find","r","spawn","_iterator9","_iteratorNormalCompletion9","_step9","_iterator10","_iteratorNormalCompletion10","_step10","_iterator11","_iteratorNormalCompletion11","_step11","saveToProject","savedAt","Date","nextAudioId","i","setCollisionAudio","setFootstepAudio","setInteractAvailAudio","openFileDialog","Promise","resolve","document","createElement","accept","onchange","files","click","readFileAsArrayBuffer","reader","FileReader","onload","result","onerror","readAsArrayBuffer","loadZip","blob","loadAsync","async","t1","parse","t2","t3","t4","openZip","GamepadListener","onGamepadConnected","e","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","pressed","normalizeKey","toLocaleLowerCase","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","onKeyDown","preventDefault","timeStamp","onKeyUp","onClick","button","shiftKey","has","Runtime","rafHandle","previousTimestamp","lastCollisionSound","lastKnownButtonStatus","shouldRender","renderer","WebGLRenderer","canvas","raycaster","Raycaster","dummyCamera","keys","domElement","resize","_this$target","offsetWidth","offsetHeight","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","render","updateMatrixWorld","tabIndex","listen","appendChild","cancelAnimationFrame","removeChild","focus","check","from","to","min","toInteractWith","triggerInteraction","moveX","moveZ","rotateY","isPressed","newZ","newX","newY","gamepadAxes","getAxis","rotateOnWorldAxis","translateOnAxis","collided","bbox","Box3","setFromObject","bboxposition","getCenter","bboxscale","getSize","boundX1","boundX2","boundY1","boundY2","boundZ1","boundZ2","isBetween","now","nearestDist","Infinity","nearestObj","setFromCamera","intersections","intersectObjects","intersection","selectObject","getButtonStatus","invokeInteraction","FocusedLabel","styled","div","_templateObject","RunningLabel","_templateObject2","RunningHeadline","p","_templateObject3","RunningButtonContainer","_templateObject4","RunningButton","_templateObject5","props","selected","css","_templateObject6","_templateObject7","ControlsTable","table","_templateObject8","Main","main","_templateObject9","RuntimeContainer","targetRef","React","createRef","runtime","activeButtonRef","state","onExit","detach","onVisualToggle","toggleRendering","onChangeAudio","event","setState","current","attach","react_default","ref","Component","Backdrop","Modal_templateObject","Container","Modal_templateObject2","TitleBar","Modal_templateObject3","Content","Modal_templateObject4","ActionGroup","Modal_templateObject5","Action","Modal_templateObject6","Modal","onBackdropClick","currentTarget","onDismiss","title","AudioFileModal","audioEntry","Modal_Modal","ceil","byteLength","onDelete","onExport","onCancel","AudioList","AudioLibraryModal_templateObject","AudioItem","AudioLibraryModal_templateObject2","AudioLibraryModal","previewAudio","Audio","selectedEntry","openAudioFileDialog","stopPreview","pause","URL","revokeObjectURL","src","dismiss","unselectEntry","exportAudio","Blob","createObjectURL","onSelect","sort","b","updateEntries","prevProps","_this$state","AudioFileModal_AudioFileModal","selectEntry","onMouseEnter","previewEntry","onMouseLeave","MenuType","MenuBar_templateObject","MenubarItem","MenuBar_templateObject2","isActive","MenuBar_templateObject3","alignRight","MenuBar_templateObject4","MenubarItemLabel","label","MenuBar_templateObject5","Menu","MenuBar_templateObject6","MenuItem","MenuBar_templateObject7","MenuDivider","MenuBar_templateObject8","MenuBar","activeMenu","menuType","_this$props","onAudioChange","MenuBar_Container","onBlur","closeMenu","FileMenu","toggleMenu","hidden","onNewProject","onLoadProject","onImportProject","onSaveProject","onExportProject","onShowSettings","EditMenu","onAddObject","onDeleteObject","onAddSpawn","onDeleteSpawn","onAddRoom","onDeleteRoom","ViewMenu","onShowAudioLibrary","onShowProjectManager","HelpMenu","open","onRunProject","AudioMenu","selectOnFocus","select","ControlMode","ObjectDragDirection","styled_templateObject","InnerContainer","styled_templateObject2","styled_templateObject3","styled_templateObject4","Sidebar","aside","styled_templateObject5","Group","styled_templateObject6","BoldLabel","styled_templateObject7","Hint","styled_templateObject8","Input","styled_templateObject9","Select","withComponent","_templateObject10","CustomInput","_templateObject11","CodeEditor","_templateObject12","InputGroup","_templateObject13","RoomList","ol","_templateObject14","RoomListItem","li","_templateObject15","active","_templateObject16","ObjectEditor","codeCheckTimeout","checkCode","codeError","updateCodeBlockSource","onUpdateCodeBlockSource","clearTimeout","setTimeout","updateTeleportTargetRoomId","onUpdateTeleportTarget","updateTeleportTargetSpawnId","_this$props2","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","onUpdateInteractionType","onShowAudioSelection","onShowInteractionAudioSelection","teleportTargetRoom","readOnly","onFocus","placeholder","onChange","step","toFixed","valueAsNumber","Fragment","values","interactionAudio","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","DoubleSide","axisGeometry","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","controlMode","RestrictedXZ","visible","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","altPlane","distanceToPoint","origin","intersectPlane","EditorCanvas","controls","isDraggingCamera","setMode","Normal","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","stopPropagation","selectSpawn","size","Vector2","pageX","offsetLeft","pageY","offsetTop","ROOM_MATERIAL_COEFFICIENTS","RoomEditor","propertyName","onUpdateMaterials","defineProperty","onUpdateDimensions","materialOptions","ce","left","selectMaterialHandler","right","front","back","down","ProjectInfoModal","toLocaleString","TableContainer","ProjectManagerModal_templateObject","Table","ProjectManagerModal_templateObject2","TableHead","thead","ProjectManagerModal_templateObject3","TableRow","tr","ProjectManagerModal_templateObject4","ColumnHead","th","ProjectManagerModal_templateObject5","ColumnData","td","ProjectManagerModal_templateObject6","ProjectManagerModal","selectedProject","unselectProject","exportProject","onSelectProject","reverse","ProjectInfoModal_ProjectInfoModal","selectProject","AudioSelectionTarget","SettingsModal_templateObject","ModalType","SettingsModal","Linear","onProjectNameChanged","projectName","hideAudioSelection","audioSelectionTarget","selectAudio","Footstep","Collision","InteractAvail","selectAmbisonicsOrder","selectedOrder","parseInt","selectDistanceModel","selectRollofModel","selectPanningModel","onProjectChanged","AudioLibraryModal_AudioLibraryModal","SettingsModal_InnerContainer","Exponential","SpawnEditor","ProjectSaveModal","onNameChange","submit","onSave","onSubmit","autoFocus","required","disabled","ProjectLoadedModal","onConfirm","Editor","projectCanvas","selectedRoomId","selectedSpawn","selectedObject","modal","runningProject","ObjectAudio","mainRef","newProject","onTranslateObject","onScaleObject","changeProject","showProjectSelection","ProjectSelection","ProjectSaver","save","importProject","_project","alert","ProjectLoaded","deleteObject","deleteSpawn","splice","indexOf","addRoom","deleteRoom","showAudioLibrary","showProjectManager","ProjectManager","runProject","showSettings","Settings","updateRoomName","updateRoomDimensions","updateRoomMaterials","updateSpawnName","updateSpawnPosition","_ref8","updateSpawnRotation","updateObjectName","updateObjectScale","updateObjectPosition","_ref12","updateObjectRotation","_ref13","Euler","updateObjectInteractionType","defaultTarget","_ref14","updateObjectCodeBlockSource","_ref15","updateObjectTeleportTarget","_ref16","showAudioSelection","AudioSelection","showInteractionAudioSelection","InteractionAudio","dismissModal","_ref17","_ref18","loadProject","saveNewProject","_ref19","resumeProject","_ref20","_ref21","_ref22","exitRuntime","attachCanvas","_this$state2","RuntimeContainer_RuntimeContainer","styled_Container","ProjectManagerModal_ProjectManagerModal","ProjectSaveModal_ProjectSaveModal","ProjectLoadedModal_ProjectLoadedModal","SettingsModal_SettingsModal","MenuBar_MenuBar","RoomEditor_RoomEditor","SpawnEditor_SpawnEditor","ObjectEditor_ObjectEditor","styled_Main","styled_FocusedLabel","Boolean","location","hostname","match","webkitAudioContext","nw","w","Window","maximize","on","frame","url","policy","ignore","Shell","openExternal","confirm","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2823cd82.chunk.js","sourcesContent":["enum AudioImplementation {\n  WebAudio = \"Web Audio API\",\n  Binaural = \"BinauralFIR\",\n  ResonanceAudio = \"Resonance Audio\"\n}\n\nexport default AudioImplementation;\n","/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = async (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioLibrary: Array<{ id: number; name: string; type: string }> = [];\n  const audioFolder = zip.folder(\"audio\");\n  for await (const [key, value] of project.audioLibrary.entries()) {\n    audioLibrary.push({ id: key, name: value.name, type: value.type });\n    audioFolder.file(key.toString(), value.data);\n  }\n  zip.file(\"audioLibrary.json\", JSON.stringify(audioLibrary));\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project): Promise<void> => {\n  const data = await createZip(project);\n  saveAs(data, `${project.name}.audio3d.zip`);\n};\n","/**\n * @author Niklas Korz\n * Module for loading and saving projects and audio files from/to IndexedDB.\n */\nimport { openDB } from \"idb\";\nimport Project from \"../project/Project\";\nimport { Schema, AudioWithIds, AudioFile, ProjectData } from \"./schema\";\n\nconst dbPromise = openDB<Schema>(\"audio3d\", 2, {\n  upgrade(db, oldVersion) {\n    if (oldVersion === 1) {\n      // Version 1 didn't store the unique ids of rooms and objects.\n      // As we can't retrieve them, we'll delete any old versions of the\n      // database here.\n      db.deleteObjectStore(\"projects\");\n      db.deleteObjectStore(\"audios\");\n    }\n\n    const projectStore = db.createObjectStore(\"projects\", {\n      keyPath: \"id\",\n      autoIncrement: true\n    });\n    projectStore.createIndex(\"savedAt\", \"savedAt\");\n    const audioStore = db.createObjectStore(\"audios\", {\n      keyPath: [\"projectId\", \"audioId\"]\n    });\n    audioStore.createIndex(\"project\", \"projectId\");\n  }\n});\n\nexport const loadProject = async (id: number): Promise<Project | undefined> => {\n  const db = await dbPromise;\n  const data = await db.get(\"projects\", id);\n  return data && new Project().fromData(data);\n};\n\nexport const saveProject = async (project: Project): Promise<number> => {\n  const db = await dbPromise;\n  const data = project.toData();\n  if (project.id) {\n    data.id = project.id;\n  }\n  return await db.put(\"projects\", data);\n};\n\nexport const deleteProject = async (id: number): Promise<void> => {\n  const db = await dbPromise;\n  // Database transaction\n  const tx = db.transaction([\"audios\", \"projects\"], \"readwrite\");\n  // Object stores\n  const projects = tx.objectStore(\"projects\");\n  const audios = tx.objectStore(\"audios\");\n\n  // Delete project\n  await projects.delete(id);\n\n  // Delete all related audio files\n  let cursor = await audios.index(\"project\").openKeyCursor(id);\n  while (cursor) {\n    await audios.delete(cursor.primaryKey);\n    cursor = await cursor.continue();\n  }\n\n  await tx.done;\n};\n\nexport const getAllProjects = async (): Promise<ProjectData[]> => {\n  const db = await dbPromise;\n  return await db.getAllFromIndex(\"projects\", \"savedAt\");\n};\n\nexport const loadAudio = async (\n  projectId: number,\n  audioId: number\n): Promise<AudioWithIds | undefined> => {\n  const db = await dbPromise;\n  const data = await db.get(\"audios\", [projectId, audioId]);\n  return data;\n};\n\nexport const saveAudio = async (audio: AudioWithIds): Promise<void> => {\n  const db = await dbPromise;\n  await db.put(\"audios\", audio);\n};\n\nexport const saveAudioMap = async (\n  projectId: number,\n  audioMap: Map<number, AudioFile>\n): Promise<void> => {\n  const db = await dbPromise;\n  const tx = db.transaction(\"audios\", \"readwrite\");\n  for (const [audioId, entry] of audioMap.entries()) {\n    tx.store.put({ ...entry, projectId, audioId });\n  }\n  await tx.done;\n};\n\nexport const deleteAudio = async (\n  projectId: number,\n  audioId: number\n): Promise<void> => {\n  const db = await dbPromise;\n  await db.delete(\"audios\", [projectId, audioId]);\n};\n\nexport async function* iterateProjectAudios(\n  projectId: number\n): AsyncIterableIterator<[number, AudioFile]> {\n  const db = await dbPromise;\n  const tx = db.transaction(\"audios\");\n  let cursor = await tx.store.index(\"project\").openCursor(projectId);\n  while (cursor) {\n    yield [cursor.value.audioId, cursor.value];\n    cursor = await cursor.continue();\n  }\n  await tx.done;\n}\n","enum DistanceModel {\n  Linear = \"linear\",\n  Inverse = \"inverse\",\n  Exponential = \"exponential\"\n}\n\nexport default DistanceModel;\n","const defaultAudioContext = new AudioContext();\n\nexport default defaultAudioContext;\n","/**\n * @author Niklas Korz\n * This modules defines utility functions for working with iterators\n */\n\n/**\n * Wraps an IterableIterator in an AsyncIterableIterator\n * @param iterator The iterator to be wrapped\n */\nexport async function* wrapIteratorAsync<T>(\n  iterator: IterableIterator<T>\n): AsyncIterableIterator<T> {\n  for (const element of iterator) {\n    yield element;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { ObjectData, AudioFile } from \"../data/schema\";\nimport AudioScene from \"../audio/AudioScene\";\nimport Audio3D from \"../audio/Audio3D\";\nimport defaultAudioContext from \"../audio/defaultAudioContext\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport CodeBlock from \"./CodeBlock\";\nimport Project from \"./Project\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport enum InteractionType {\n  None = \"No interaction\",\n  PlaySound = \"Play sound\",\n  Teleport = \"Teleport\",\n  CodeBlock = \"Code block\"\n}\n\nexport interface TeleportTarget {\n  roomId: string;\n  spawnId: string;\n}\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioLibrary: AudioLibrary;\n  audioId?: number;\n  audioFile?: AudioFile;\n\n  audio: Audio3D;\n\n  // Interaction specific\n  interactionType = InteractionType.None;\n  interactionAudioId?: number;\n  codeBlock?: CodeBlock;\n  teleportTarget?: TeleportTarget;\n\n  constructor(audioLibrary: AudioLibrary, audioScene: AudioScene) {\n    super(cubeGeometry, cubeMaterial);\n    this.audioLibrary = audioLibrary;\n\n    this.audio = audioScene.createAudio3D();\n    this.add(this.audio);\n  }\n\n  triggerInteraction(project: Project): void {\n    switch (this.interactionType) {\n      case InteractionType.CodeBlock:\n        if (this.codeBlock) {\n          this.codeBlock.execute(this, project, project.activeRoom.roomState);\n        }\n        break;\n      case InteractionType.Teleport:\n        if (this.teleportTarget) {\n          const { roomId, spawnId } = this.teleportTarget;\n          project.teleportPlayer(roomId, spawnId);\n        }\n        if (this.interactionAudioId != null) {\n          this.playAudio(this.interactionAudioId);\n        }\n        break;\n      case InteractionType.PlaySound:\n        if (this.interactionAudioId != null) {\n          this.playAudio(this.interactionAudioId);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async playAudio(id: number, loop: boolean = false): Promise<void> {\n    this.audioId = id;\n    this.audioFile = await this.audioLibrary.get(id);\n    if (this.audioFile) {\n      const buffer = await defaultAudioContext.decodeAudioData(\n        this.audioFile.data.slice(0)\n      );\n      this.audio.setBuffer(buffer);\n      this.audio.setLoop(loop);\n      this.audio.play();\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  toData(): ObjectData {\n    return {\n      uuid: this.uuid,\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray().slice(0, 3),\n      audioId: this.audioId,\n      interactionType: this.interactionType,\n      interactionAudioId: this.interactionAudioId,\n      codeBlockSource: this.codeBlock && this.codeBlock.source,\n      teleportTarget: this.teleportTarget\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.uuid = data.uuid != null ? data.uuid : this.uuid;\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n\n    if (data.audioId != null) {\n      this.playAudio(data.audioId, true);\n    }\n\n    this.interactionType = data.interactionType || InteractionType.None;\n    this.interactionAudioId = data.interactionAudioId;\n    if (data.codeBlockSource) {\n      this.codeBlock = new CodeBlock(data.codeBlockSource);\n    }\n    this.teleportTarget = data.teleportTarget;\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { AudioFile } from \"../data/schema\";\nimport {\n  saveAudio,\n  loadAudio,\n  deleteAudio,\n  saveAudioMap,\n  iterateProjectAudios\n} from \"../data/db\";\nimport { wrapIteratorAsync } from \"../utils/iter\";\n\nexport default class AudioLibrary {\n  projectId?: number;\n  audioMap = new Map<number, AudioFile>();\n  nextId = 0;\n\n  async add(entry: AudioFile): Promise<number> {\n    if (this.projectId != null) {\n      await saveAudio({\n        ...entry,\n        projectId: this.projectId,\n        audioId: this.nextId\n      });\n    } else {\n      this.audioMap.set(this.nextId, entry);\n    }\n    return this.nextId++;\n  }\n\n  async get(id: number): Promise<AudioFile | undefined> {\n    if (this.projectId != null) {\n      return await loadAudio(this.projectId, id);\n    }\n    return this.audioMap.get(id);\n  }\n\n  async set(id: number, entry: AudioFile): Promise<void> {\n    if (this.projectId != null) {\n      await loadAudio(this.projectId, id);\n    } else {\n      this.audioMap.set(id, entry);\n    }\n  }\n\n  async delete(id: number): Promise<void> {\n    if (this.projectId != null) {\n      await deleteAudio(this.projectId, id);\n    } else {\n      this.audioMap.delete(id);\n    }\n  }\n\n  async saveToProject(projectId: number): Promise<void> {\n    this.projectId = projectId;\n    await saveAudioMap(projectId, this.audioMap);\n    this.audioMap.clear();\n  }\n\n  entries(): AsyncIterableIterator<[number, AudioFile]> {\n    if (this.projectId != null) {\n      return iterateProjectAudios(this.projectId);\n    }\n    return wrapIteratorAsync(this.audioMap.entries());\n  }\n}\n","import GameObject from \"./GameObject\";\nimport Project from \"./Project\";\n\n/**\n * @author Niklas Korz\n */\nexport default class CodeBlock {\n  source: string;\n  func?: Function;\n\n  constructor(source: string = \"\") {\n    this.source = source;\n  }\n\n  update(source: string): void {\n    this.source = source;\n    this.func = undefined;\n  }\n\n  execute(\n    object: GameObject,\n    project: Project,\n    roomState: Map<string, any>\n  ): void {\n    try {\n      if (!this.func) {\n        this.func = new Function(\n          \"game\",\n          \"playerState\",\n          \"roomState\",\n          this.source\n        );\n      }\n      // The first parameter is the \"this\" object\n      this.func.call(object, project, project.playerState, roomState);\n    } catch (ex) {\n      console.error(\n        \"Execution of code block failed with error:\",\n        ex,\n        \"object:\",\n        object,\n        \"project:\",\n        project,\n        \"roomState:\",\n        roomState\n      );\n    }\n  }\n}\n","/**\n * Useful utility functions related to mathematics\n * @author Niklas Korz\n */\n\n// Converts radiant angles to degrees\nexport const radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nexport const degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\nexport const roundToPrecision = (value: number, precision: number): number =>\n  Math.round(value / precision) * precision;\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { Vector3 } from \"three\";\nimport BinauralFIR from \"binauralfir\";\nimport { radToDeg } from \"../../utils/math\";\nimport BinauralScene from \"./BinauralScene\";\n\nexport default class BinauralSource {\n  position = new Vector3();\n  orientation = new Vector3();\n  scene: BinauralScene;\n  binauralFIR: BinauralFIR;\n\n  get input(): AudioNode {\n    return this.binauralFIR.input;\n  }\n\n  constructor(scene: BinauralScene) {\n    this.scene = scene;\n    this.binauralFIR = new BinauralFIR({ audioContext: scene.audioContext });\n    this.binauralFIR.HRTFDataset = scene.hrtfDataset;\n    this.binauralFIR.connect(scene.audioContext.destination);\n  }\n\n  update(): void {\n    // The distance calculation is straightforward as BinauralFIR already provides\n    // a utility function.\n    const distance = this.binauralFIR.distance(\n      this.position,\n      this.scene.listenerPosition\n    );\n\n    // The azimuth is the horizontal angle between the listener and the audio source.\n    // It ranges from -180 to +180, where +-180 is directly behind, 0 directly in front,\n    // -90 on the left and +90 on the right.\n    const azimuth = Math.atan2(\n      this.position.x - this.scene.listenerPosition.x,\n      // The three.js z-axis is negative on the front and positive on the back of the listener,\n      // so we have to invert it to match the mathematical unit circle.\n      -(this.position.z - this.scene.listenerPosition.z)\n    );\n\n    // We also have to take the listener's rotation into consideration.\n    // I.e., we take the listener orientation to calculate the total rotation instead\n    // of the Euler angles.\n    // The result is the inverted angle as the z-axis is inverted.\n    const listenerAzimuth = Math.atan2(\n      this.scene.listenerOrientation.x,\n      this.scene.listenerOrientation.z\n    );\n\n    // The elevation is the vertical angle between the listener and the audio source.\n    // It ranges from -90 to +90, where -90 is directly below and +90 directly above.\n    // An angle of zero means both the listener and the audio source are on the same\n    // horizontal plane.\n    // For a better mental model, we imagine the vector between the two points to be\n    // two dimensional. I.e., we use the y axis for the second component and create\n    // an artificial axis for the first component out of the x- and z- coordinates.\n    // This first component equals the length of the two-dimensional vector on the\n    // axes x and z and can therefore be simply calculated with the Pythagoras theorem.\n    // Then, we can use atan2 as in the previous two cases for calculating the vertical angle.\n    const elevation = Math.atan2(\n      this.position.y - this.scene.listenerPosition.y,\n      Math.sqrt(\n        this.position.x -\n          this.scene.listenerPosition.x +\n          -(this.position.z - this.scene.listenerPosition.z)\n      )\n    );\n\n    this.binauralFIR.setPosition(\n      // BinauralFIR expects degrees instead of radians\n      radToDeg(azimuth + listenerAzimuth),\n      radToDeg(elevation),\n      distance\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\n\nimport { Vector3 } from \"three\";\nimport { HRTF } from \"binauralfir\";\nimport defaultAudioContext from \"../defaultAudioContext\";\nimport BinauralSource from \"./BinauralSource\";\n\nconst dummyHRTFDataset: HRTF[] = [\n  {\n    azimuth: 1,\n    elevation: 1,\n    distance: 1,\n    buffer: defaultAudioContext.createBuffer(\n      2,\n      512,\n      defaultAudioContext.sampleRate\n    )\n  }\n];\n\nexport default class BinauralScene {\n  listenerPosition = new Vector3(0, 0, 0);\n  listenerOrientation = new Vector3(0, 0, 0);\n  sources: BinauralSource[] = [];\n  audioContext: AudioContext;\n  hrtfDataset: HRTF[];\n\n  constructor(\n    audioContext: AudioContext,\n    hrtfDataset: HRTF[] = dummyHRTFDataset\n  ) {\n    this.audioContext = audioContext;\n    this.hrtfDataset = hrtfDataset;\n  }\n\n  createSource(): BinauralSource {\n    const source = new BinauralSource(this);\n    this.sources.push(source);\n    return source;\n  }\n\n  setHRTFDataset(hrtfDataset: HRTF[]): void {\n    this.hrtfDataset = hrtfDataset;\n    for (const source of this.sources) {\n      source.binauralFIR.HRTFDataset = hrtfDataset;\n    }\n  }\n\n  update(): void {\n    for (const source of this.sources) {\n      source.update();\n    }\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { Object3D, Vector3, Quaternion } from \"three\";\nimport { ResonanceAudio } from \"resonance-audio\";\nimport BinauralSource from \"./binaural/BinauralSource\";\nimport DistanceModel from \"./DistanceModel\";\n\n/**\n * Class extends Object3D in order to work with the three.js scene graph.\n * The idea is to override the updateWorldMatrix method and change the audio nodes\n * accordingly.\n */\nexport default class Audio3D extends Object3D {\n  webAudioContext: AudioContext;\n  binauralAudioContext: AudioContext;\n  resonanceAudioContext: AudioContext;\n\n  webAudioPannerNode: PannerNode;\n  binauralSource: BinauralSource;\n  resonanceSource: ResonanceAudio.Source;\n\n  webAudioBufferSource: AudioBufferSourceNode;\n  binauralBufferSource: AudioBufferSourceNode;\n  resonanceBufferSource: AudioBufferSourceNode;\n\n  hasStarted = false;\n  isPlaying = false;\n\n  constructor(\n    webAudioContext: AudioContext,\n    binauralAudioContext: AudioContext,\n    resonanceAudioContext: AudioContext,\n    webAudioPannerNode: PannerNode,\n    binauralSource: BinauralSource,\n    resonanceSource: ResonanceAudio.Source\n  ) {\n    super();\n\n    this.webAudioContext = webAudioContext;\n    this.binauralAudioContext = binauralAudioContext;\n    this.resonanceAudioContext = resonanceAudioContext;\n\n    this.webAudioPannerNode = webAudioPannerNode;\n    this.binauralSource = binauralSource;\n    this.resonanceSource = resonanceSource;\n\n    this.webAudioBufferSource = webAudioContext.createBufferSource();\n    this.binauralBufferSource = binauralAudioContext.createBufferSource();\n    this.resonanceBufferSource = resonanceAudioContext.createBufferSource();\n\n    this.webAudioBufferSource.connect(webAudioPannerNode);\n    this.binauralBufferSource.connect(binauralSource.input);\n    this.resonanceBufferSource.connect(resonanceSource.input);\n\n    this.webAudioPannerNode.connect(webAudioContext.destination);\n\n    this.webAudioBufferSource.onended = this.onAudioEnded;\n    this.binauralBufferSource.onended = this.onAudioEnded;\n    this.resonanceBufferSource.onended = this.onAudioEnded;\n  }\n\n  setDistanceModel(distanceModel: DistanceModel): void {\n    this.webAudioPannerNode.distanceModel = distanceModel;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    this.matrixWorld.decompose(position, quaternion, scale);\n    const orientation = new Vector3(0, 0, 1).applyQuaternion(quaternion);\n\n    this.webAudioPannerNode.setPosition(position.x, position.y, position.z);\n    this.webAudioPannerNode.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z\n    );\n\n    this.binauralSource.position.copy(position);\n    this.binauralSource.orientation.copy(orientation);\n    this.binauralSource.update();\n\n    // Resonance Audio already works with matrices similar to three.js internally.\n    this.resonanceSource.setFromMatrix(this.matrixWorld);\n  }\n\n  onAudioEnded = () => {\n    this.isPlaying = false;\n    this.stop();\n  };\n\n  setBuffer(buffer: AudioBuffer): void {\n    if (this.webAudioBufferSource.buffer) {\n      // Chrome does not allow \"resetting\" the buffer and throws an error\n      // with this message: Cannot set buffer to non-null after it has been already been set to a non-null buffer\n      // To circumvent this, we have to create a new buffer source\n\n      this.stop();\n\n      this.webAudioBufferSource = this.webAudioContext.createBufferSource();\n      this.binauralBufferSource = this.binauralAudioContext.createBufferSource();\n      this.resonanceBufferSource = this.resonanceAudioContext.createBufferSource();\n\n      this.webAudioBufferSource.connect(this.webAudioPannerNode);\n      this.binauralBufferSource.connect(this.binauralSource.input);\n      this.resonanceBufferSource.connect(this.resonanceSource.input);\n\n      this.webAudioBufferSource.onended = this.onAudioEnded;\n      this.binauralBufferSource.onended = this.onAudioEnded;\n      this.resonanceBufferSource.onended = this.onAudioEnded;\n    }\n\n    this.webAudioBufferSource.buffer = buffer;\n    this.binauralBufferSource.buffer = buffer;\n    this.resonanceBufferSource.buffer = buffer;\n\n    this.hasStarted = false;\n    this.isPlaying = false;\n  }\n\n  setLoop(loop: boolean): void {\n    this.webAudioBufferSource.loop = loop;\n    this.binauralBufferSource.loop = loop;\n    this.resonanceBufferSource.loop = loop;\n  }\n\n  play(): void {\n    if (this.webAudioBufferSource.buffer) {\n      if (this.hasStarted) {\n        // A buffer source node can only be played once, unfortunately.\n        // We have to \"reset\" the node by creating a new one and reusing the buffer.\n        this.setBuffer(this.webAudioBufferSource.buffer);\n      }\n\n      this.webAudioBufferSource.start();\n      this.binauralBufferSource.start();\n      this.resonanceBufferSource.start();\n\n      this.hasStarted = true;\n      this.isPlaying = true;\n    }\n  }\n\n  stop(): void {\n    if (this.hasStarted) {\n      this.webAudioBufferSource.stop();\n      this.binauralBufferSource.stop();\n      this.resonanceBufferSource.stop();\n\n      this.webAudioBufferSource.disconnect();\n      this.binauralBufferSource.disconnect();\n      this.resonanceBufferSource.disconnect();\n    }\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { Object3D, Vector3, Quaternion } from \"three\";\nimport { ResonanceAudio } from \"resonance-audio\";\nimport BinauralScene from \"./binaural/BinauralScene\";\n\nexport default class Listener3D extends Object3D {\n  webAudioListener: AudioListener;\n  binauralScene: BinauralScene;\n  resonanceScene: ResonanceAudio;\n\n  constructor(\n    webAudioListener: AudioListener,\n    binauralScene: BinauralScene,\n    resonanceScene: ResonanceAudio\n  ) {\n    super();\n    this.webAudioListener = webAudioListener;\n    this.binauralScene = binauralScene;\n    this.resonanceScene = resonanceScene;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    this.matrixWorld.decompose(position, quaternion, scale);\n    const orientation = new Vector3(0, 0, 1).applyQuaternion(quaternion);\n\n    this.webAudioListener.setPosition(position.x, position.y, position.z);\n    this.webAudioListener.setOrientation(\n      -orientation.x,\n      orientation.y,\n      -orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n\n    this.binauralScene.listenerPosition.copy(position);\n    this.binauralScene.listenerOrientation.copy(orientation);\n    this.binauralScene.update();\n\n    // Resonance Audio already works with matrices similar to three.js internally.\n    this.resonanceScene.setListenerFromMatrix(this.matrixWorld);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { HRTF } from \"binauralfir\";\nimport defaultAudioContext from \"../defaultAudioContext\";\n\n/**\n * Takes two arrays of floats and turns them into a stereo audio buffer.\n * @param firCoeffsLeft The data to be used for the left audio channel\n * @param firCoeffsRight The data to be used for the right audio channel\n */\nconst firCoefficientsToAudioBuffer = (\n  firCoeffsLeft: number[],\n  firCoeffsRight: number[]\n): AudioBuffer => {\n  const buffer = defaultAudioContext.createBuffer(\n    2, // Stereo\n    512, // Samples\n    defaultAudioContext.sampleRate // Sample rate - unfortunately, we _have_ to use the system's sample rate here as Chrome does not allow any other values\n  );\n  buffer.copyToChannel(new Float32Array(firCoeffsLeft), 0);\n  buffer.copyToChannel(new Float32Array(firCoeffsRight), 1);\n  return buffer;\n};\n\n/**\n * Asynchronously loads and returns a BinauralFIR compatible HRTF dataset\n */\nexport const loadHRTFDataset = async (): Promise<HRTF[]> => {\n  const resp = await fetch(\"data/ircam-hrtf.json\");\n  const dataset = await resp.json();\n\n  return dataset.map((hrtf: any) => ({\n    azimuth: hrtf.azimuth,\n    elevation: hrtf.elevation,\n    distance: hrtf.distance,\n    buffer: firCoefficientsToAudioBuffer(\n      hrtf.fir_coeffs_left,\n      hrtf.fir_coeffs_right\n    )\n  }));\n};\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { ResonanceAudio, RoomMaterials, RoomDimensions } from \"resonance-audio\";\nimport { HRTF } from \"binauralfir\";\nimport BinauralScene from \"./binaural/BinauralScene\";\nimport Audio3D from \"./Audio3D\";\nimport AudioImplementation from \"./AudioImplementation\";\nimport Listener3D from \"./Listener3D\";\nimport { loadHRTFDataset } from \"./binaural/hrtf\";\n\ninterface Options {\n  materials?: RoomMaterials;\n  dimensions?: RoomDimensions;\n}\n\nexport default class AudioScene {\n  audioImplementation: AudioImplementation = AudioImplementation.WebAudio;\n\n  webAudioContext = new AudioContext();\n  binauralAudioContext = new AudioContext();\n  resonanceAudioContext = new AudioContext();\n\n  binauralScene = new BinauralScene(this.binauralAudioContext);\n  resonanceScene = new ResonanceAudio(this.resonanceAudioContext);\n\n  binauralHRTFDataset: HRTF[] | null = null;\n  isLoadingBinauralHRTFDataset = false;\n\n  listener3D = new Listener3D(\n    this.webAudioContext.listener,\n    this.binauralScene,\n    this.resonanceScene\n  );\n\n  constructor(options: Options) {\n    this.resonanceScene.setRoomProperties(\n      options.dimensions || ResonanceAudio.Utils.DEFAULT_ROOM_DIMENSIONS,\n      options.materials || ResonanceAudio.Utils.DEFAULT_ROOM_MATERIALS\n    );\n    this.resonanceScene.output.connect(this.resonanceAudioContext.destination);\n    this.suspend();\n  }\n\n  createAudio3D(): Audio3D {\n    const audio = new Audio3D(\n      this.webAudioContext,\n      this.binauralAudioContext,\n      this.resonanceAudioContext,\n      this.webAudioContext.createPanner(),\n      this.binauralScene.createSource(),\n      this.resonanceScene.createSource()\n    );\n\n    return audio;\n  }\n\n  close(): void {\n    this.webAudioContext.close();\n    this.binauralAudioContext.close();\n    this.resonanceAudioContext.close();\n  }\n\n  suspend(): void {\n    this.webAudioContext.suspend();\n    this.binauralAudioContext.suspend();\n    this.resonanceAudioContext.suspend();\n  }\n\n  resume(): void {\n    switch (this.audioImplementation) {\n      case AudioImplementation.WebAudio:\n        this.webAudioContext.resume();\n        break;\n      case AudioImplementation.Binaural:\n        this.binauralAudioContext.resume();\n        break;\n      case AudioImplementation.ResonanceAudio:\n        this.resonanceAudioContext.resume();\n        break;\n    }\n  }\n\n  selectAudioImplementation(audioImplementation: AudioImplementation): void {\n    if (\n      audioImplementation === AudioImplementation.Binaural &&\n      !this.binauralHRTFDataset &&\n      !this.isLoadingBinauralHRTFDataset\n    ) {\n      this.loadBinauralHRTFDataset();\n    }\n\n    this.suspend();\n    this.audioImplementation = audioImplementation;\n    this.resume();\n  }\n\n  async loadBinauralHRTFDataset(): Promise<void> {\n    this.isLoadingBinauralHRTFDataset = true;\n    try {\n      this.binauralHRTFDataset = await loadHRTFDataset();\n      this.binauralScene.setHRTFDataset(this.binauralHRTFDataset);\n    } catch (ex) {\n      console.error(\"Failed loading BinauralFIR HRTF dataset:\", ex);\n    }\n    this.isLoadingBinauralHRTFDataset = false;\n  }\n\n  setRoomProperties(\n    roomDimensions: RoomDimensions,\n    roomMaterials: RoomMaterials\n  ): void {\n    this.resonanceScene.setRoomProperties(roomDimensions, roomMaterials);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { SpawnData } from \"../data/schema\";\n\nconst spawnGeometry = new BoxGeometry(1, 0.1, 1);\nconst spawnMaterial = new MeshLambertMaterial({\n  color: 0x00ff00\n});\n\nconst directionGeometry = new BoxGeometry(0.1, 0.1, 0.5);\n\nexport default class SpawnMarker extends Mesh implements Serializable {\n  constructor() {\n    super(spawnGeometry, spawnMaterial);\n    this.position.set(0, 0.05, 2);\n\n    const directionMarker = new Mesh(directionGeometry, spawnMaterial);\n    directionMarker.position.z = -0.5;\n    this.add(directionMarker);\n  }\n\n  toData(): SpawnData {\n    return {\n      uuid: this.uuid,\n      name: this.name,\n      position: [this.position.x, this.position.z],\n      rotation: this.rotation.y\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.uuid = data.uuid;\n    this.name = data.name;\n    this.position.set(data.position[0], 0.05, data.position[1]);\n    this.rotation.set(0, data.rotation, 0);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Daniel Salomon\n */\nimport { RoomDimensions, ResonanceAudio, RoomMaterials } from \"resonance-audio\";\nimport {\n  AmbientLight,\n  BoxGeometry,\n  GridHelper,\n  Mesh,\n  MeshLambertMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PointLight,\n  Scene,\n  Vector3\n} from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { RoomData } from \"../data/schema\";\nimport AudioScene from \"../audio/AudioScene\";\nimport Audio3D from \"../audio/Audio3D\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport SpawnMarker from \"./SpawnMarker\";\nimport Project from \"./Project\";\n\nconst wallGeometry = new BoxGeometry(1, 1, 1);\nconst wallMaterial = new MeshLambertMaterial();\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  audioLibrary: AudioLibrary;\n  roomDimensions: RoomDimensions;\n  roomMaterials: RoomMaterials;\n  project: Project;\n  grid: GridHelper;\n  wallNorth = new Mesh(wallGeometry, wallMaterial);\n  wallEast = new Mesh(wallGeometry, wallMaterial);\n  wallSouth = new Mesh(wallGeometry, wallMaterial);\n  wallWest = new Mesh(wallGeometry, wallMaterial);\n  camera = new PerspectiveCamera(60, 1, 0.1, 1000);\n\n  collisionAudio: Audio3D; // Audio3D Objects for playing collision/footstep/interaction sounds, needed per room.\n  footstepAudio: Audio3D;\n  interactAvailAudio: Audio3D;\n\n  roomState = new Map<string, any>(); // Needed by runtime\n\n  audioScene: AudioScene;\n  spawns: SpawnMarker[] = [];\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.audioScene.setRoomProperties(dimensions, this.roomMaterials);\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.updateWalls();\n  }\n\n  get materials(): RoomMaterials {\n    return this.roomMaterials;\n  }\n\n  set materials(materials: RoomMaterials) {\n    this.roomMaterials = materials;\n    this.audioScene.setRoomProperties(this.roomDimensions, materials);\n  }\n\n  constructor(\n    project: Project,\n    audioLibrary: AudioLibrary,\n    name: string = \"\",\n    dimensions: RoomDimensions = { width: 15, depth: 15, height: 3 },\n    materials: RoomMaterials = ResonanceAudio.Utils.DEFAULT_ROOM_MATERIALS\n  ) {\n    super();\n\n    this.audioLibrary = audioLibrary;\n    this.name = name;\n    this.roomDimensions = dimensions;\n    this.roomMaterials = materials;\n    this.project = project;\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n    this.add(this.grid);\n\n    this.updateWalls();\n    this.add(this.wallNorth);\n    this.add(this.wallEast);\n    this.add(this.wallSouth);\n    this.add(this.wallWest);\n\n    this.camera.position.z = 4;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 1, 0));\n\n    // Audio setup\n    this.audioScene = new AudioScene({\n      dimensions: dimensions,\n      materials: materials\n    });\n\n    this.camera.add(this.audioScene.listener3D);\n\n    //Init audio objects for collision/footstep/... sounds\n    this.collisionAudio = this.audioScene.createAudio3D();\n    this.footstepAudio = this.audioScene.createAudio3D();\n    this.interactAvailAudio = this.audioScene.createAudio3D();\n\n    //Add audio objects for collision/footstep/... sounds to their parents\n    this.camera.add(this.footstepAudio);\n    this.add(this.collisionAudio);\n    this.add(this.interactAvailAudio);\n  }\n\n  addSpawn(): SpawnMarker {\n    const marker = new SpawnMarker();\n    marker.name = \"New spawn\";\n    this.spawns.push(marker);\n    this.add(marker);\n    return marker;\n  }\n\n  addObject(): GameObject {\n    const object = new GameObject(this.audioLibrary, this.audioScene);\n    object.position.y += 0.5;\n    object.name = \"New object\";\n\n    //options\n    object.audio.setDistanceModel(this.project.distanceModel);\n    object.audio.resonanceSource.setRolloff(this.project.rollofModel);\n    object.audio.webAudioPannerNode.panningModel = this.project.panningModel;\n    this.add(object);\n    return object;\n  }\n\n  updateWalls(): void {\n    const { width, depth, height } = this.roomDimensions;\n\n    this.wallNorth.scale.set(width, height, 0.25);\n    this.wallEast.scale.set(0.25, height, depth);\n    this.wallSouth.scale.set(width, height, 0.25);\n    this.wallWest.scale.set(0.25, height, depth);\n\n    this.wallNorth.position.set(0, height / 2, depth / 2);\n    this.wallEast.position.set(width / 2, height / 2, 0);\n    this.wallSouth.position.set(0, height / 2, -depth / 2);\n    this.wallWest.position.set(-width / 2, height / 2, 0);\n  }\n\n  toData(): RoomData {\n    return {\n      uuid: this.uuid,\n      name: this.name,\n      dimensions: this.dimensions,\n      materials: this.materials,\n      spawns: this.spawns.map(s => s.toData()),\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.uuid = data.uuid != null ? data.uuid : this.uuid;\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n    if (data.materials) {\n      this.materials = data.materials;\n    }\n\n    if (data.spawns) {\n      this.spawns = data.spawns.map((s: SerializedData) =>\n        new SpawnMarker().fromData(s)\n      );\n      this.add(...this.spawns);\n    } else {\n      this.addSpawn();\n    }\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary, this.audioScene).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n * @author Daniel Salomon\n */\nimport {\n  BackSide,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  Vector3\n} from \"three\";\nimport { ResonanceAudio } from \"resonance-audio\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { ProjectData, AudioFile } from \"../data/schema\";\nimport { saveProject } from \"../data/db\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\nimport DistanceModel from \"../audio/DistanceModel\";\nimport defaultAudioContext from \"../audio/defaultAudioContext\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\nimport SpawnMarker from \"./SpawnMarker\";\n\nexport interface ProjectEvents {\n  onSelectSpawn(spawnMarker: SpawnMarker | null): void;\n  onSelectObject(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = (): void => {\n  /* no operation */\n};\n\nconst defaultEvents: ProjectEvents = {\n  onSelectSpawn: noop,\n  onSelectObject: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  events: ProjectEvents;\n  audioLibrary = new AudioLibrary();\n\n  id?: number;\n  name = \"New project\";\n  distanceModel = DistanceModel.Inverse;\n  ambisonicsOrder = ResonanceAudio.Utils.DEFAULT_AMBISONIC_ORDER;\n  rollofModel = ResonanceAudio.Utils.DEFAULT_ATTENUATION_ROLLOFF;\n  panningModel = \"equalpower\" as PanningModelType;\n  rooms: Room[] = [];\n  audioType: number = 1;\n\n  playerHeight = 1.8; // 1.80m player height, eyes are ~10cm lower\n  playerState = new Map<string, any>(); // Needed by runtime\n\n  collisionAudioId?: number; // Audio IDs, Files and buffer for collision/footstep/interaction sounds\n  footstepAudioId?: number;\n  interactAvailAudioId?: number;\n  collisionAudioFile?: AudioFile;\n  footstepAudioFile?: AudioFile;\n  interactAvailAudioFile?: AudioFile;\n  collisionAudioBuffer?: AudioBuffer;\n  footstepAudioBuffer?: AudioBuffer;\n  interactAvailAudioBuffer?: AudioBuffer;\n\n  activeAudioImplementation = AudioImplementation.WebAudio;\n  activeRoom: Room;\n  activeSpawn: SpawnMarker | null = null;\n  activeObject: GameObject | null = null;\n\n  outlineMesh = new Mesh();\n\n  get camera(): PerspectiveCamera {\n    return this.activeRoom.camera;\n  }\n\n  constructor(events: ProjectEvents = defaultEvents) {\n    this.events = events;\n\n    const firstRoom = new Room(this, this.audioLibrary, \"First room\");\n    firstRoom.addSpawn();\n    firstRoom.addObject();\n    this.rooms.push(firstRoom);\n    this.activeRoom = firstRoom;\n\n    this.outlineMesh.material = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.scale.multiplyScalar(1.05);\n  }\n\n  close(): void {\n    for (const room of this.rooms) {\n      room.audioScene.close();\n    }\n  }\n\n  suspend(): void {\n    this.activeRoom.audioScene.suspend();\n  }\n\n  resume(): void {\n    this.activeRoom.audioScene.resume();\n  }\n\n  addRoom(): Room {\n    const room = new Room(this, this.audioLibrary, \"New room\");\n    room.addSpawn();\n    room.addObject();\n    //options\n    room.audioScene.resonanceScene.setAmbisonicOrder(this.ambisonicsOrder);\n\n    if (this.collisionAudioBuffer)\n      room.collisionAudio.setBuffer(this.collisionAudioBuffer);\n    if (this.footstepAudioBuffer)\n      room.footstepAudio.setBuffer(this.footstepAudioBuffer);\n    if (this.interactAvailAudioBuffer)\n      room.interactAvailAudio.setBuffer(this.interactAvailAudioBuffer);\n    this.rooms.push(room);\n    this.selectRoom(room);\n    return room;\n  }\n\n  selectDistanceModel(distanceModel: DistanceModel): void {\n    for (const room of this.rooms) {\n      for (const obj of room.children) {\n        if (obj instanceof GameObject) {\n          obj.audio.setDistanceModel(distanceModel);\n        }\n      }\n    }\n    this.distanceModel = distanceModel;\n  }\n\n  selectAmbisonicsOrder(order: number): void {\n    for (const room of this.rooms) {\n      room.audioScene.resonanceScene.setAmbisonicOrder(order);\n    }\n    this.ambisonicsOrder = order;\n  }\n\n  selectRollofModel(model: string): void {\n    for (const room of this.rooms) {\n      for (const obj of room.children) {\n        if (obj instanceof GameObject) {\n          obj.audio.resonanceSource.setRolloff(model);\n        }\n      }\n    }\n    this.rollofModel = model;\n  }\n\n  selectPanningModel(model: PanningModelType): void {\n    for (const room of this.rooms) {\n      for (const obj of room.children) {\n        if (obj instanceof GameObject) {\n          obj.audio.webAudioPannerNode.panningModel = model;\n        }\n      }\n    }\n    this.panningModel = model;\n  }\n\n  selectAudioImplementation(audioImplementation: AudioImplementation): void {\n    this.activeAudioImplementation = audioImplementation;\n    this.activeRoom.audioScene.selectAudioImplementation(audioImplementation);\n  }\n\n  selectRoom(room: Room): void {\n    this.activeRoom.audioScene.suspend();\n    room.audioScene.selectAudioImplementation(this.activeAudioImplementation);\n    room.camera.aspect = this.activeRoom.camera.aspect;\n    room.camera.updateProjectionMatrix();\n    this.activeRoom = room;\n    this.unselect();\n  }\n\n  unselect(): void {\n    if (this.activeSpawn) {\n      this.activeSpawn.remove(this.outlineMesh);\n      this.activeSpawn = null;\n      this.events.onSelectSpawn(null);\n    }\n    if (this.activeObject) {\n      this.activeObject.remove(this.outlineMesh);\n      this.activeObject = null;\n      this.events.onSelectObject(null);\n    }\n  }\n\n  selectSpawn(s: SpawnMarker): void {\n    this.unselect();\n\n    this.outlineMesh.geometry = s.geometry;\n    s.add(this.outlineMesh);\n\n    this.activeSpawn = s;\n    this.events.onSelectSpawn(s);\n  }\n\n  selectObject(o: GameObject): void {\n    this.unselect();\n\n    this.outlineMesh.geometry = o.geometry;\n    o.add(this.outlineMesh);\n\n    this.activeObject = o;\n    this.events.onSelectObject(o);\n  }\n\n  teleportPlayer(roomId: string, spawnId?: string): void {\n    const room = this.rooms.find(r => r.uuid === roomId);\n    if (room) {\n      this.selectRoom(room);\n      const spawn =\n        (spawnId && room.spawns.find(s => s.uuid === spawnId)) ||\n        room.spawns[0];\n      room.camera.position.set(\n        spawn.position.x,\n        this.playerHeight - 0.1,\n        spawn.position.z\n      );\n      room.camera.rotation.set(0, spawn.rotation.y, 0);\n    } else {\n      console.log(\"Target room not found, not teleporting\");\n    }\n  }\n\n  async setCollisionAudio(id: number): Promise<void> {\n    this.collisionAudioId = id;\n    this.collisionAudioFile = await this.audioLibrary.get(id);\n    if (this.collisionAudioFile) {\n      this.collisionAudioBuffer = await defaultAudioContext.decodeAudioData(\n        this.collisionAudioFile.data.slice(0)\n      );\n      for (const room of this.rooms) {\n        room.collisionAudio.setBuffer(this.collisionAudioBuffer);\n        room.collisionAudio.setLoop(false);\n      }\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  async setFootstepAudio(id: number): Promise<void> {\n    this.footstepAudioId = id;\n    this.footstepAudioFile = await this.audioLibrary.get(id);\n    if (this.footstepAudioFile) {\n      this.footstepAudioBuffer = await defaultAudioContext.decodeAudioData(\n        this.footstepAudioFile.data.slice(0)\n      );\n      for (const room of this.rooms) {\n        room.footstepAudio.setBuffer(this.footstepAudioBuffer);\n        room.footstepAudio.setLoop(false);\n      }\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  async setInteractAvailAudio(id: number): Promise<void> {\n    this.interactAvailAudioId = id;\n    this.interactAvailAudioFile = await this.audioLibrary.get(id);\n    if (this.interactAvailAudioFile) {\n      this.interactAvailAudioBuffer = await defaultAudioContext.decodeAudioData(\n        this.interactAvailAudioFile.data.slice(0)\n      );\n      for (const room of this.rooms) {\n        room.interactAvailAudio.setBuffer(this.interactAvailAudioBuffer);\n        room.interactAvailAudio.setLoop(false);\n      }\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  async save(): Promise<void> {\n    const id = await saveProject(this);\n    if (this.id == null) {\n      this.id = id;\n      await this.audioLibrary.saveToProject(id);\n    }\n  }\n\n  // Serialize instance to a plain JavaScript object\n  toData(): ProjectData {\n    return {\n      savedAt: new Date(),\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData()),\n      nextAudioId: this.audioLibrary.nextId,\n      collisionAudioId: this.collisionAudioId,\n      footstepAudioId: this.footstepAudioId,\n      interactAvailAudioId: this.interactAvailAudioId\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(\n    data: SerializedData,\n    projectId?: number,\n    audioLibrary?: AudioLibrary\n  ): this {\n    this.id = projectId;\n    if (audioLibrary) {\n      this.audioLibrary = audioLibrary;\n    } else {\n      this.audioLibrary.projectId = projectId;\n      this.audioLibrary.nextId = data.nextAudioId || 0;\n    }\n\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this, this.audioLibrary).fromData(r)\n    );\n    this.activeRoom = this.rooms[0];\n\n    // Disable audio in all inactive rooms\n    for (let i = 1; i < this.rooms.length; i++) {\n      this.rooms[i].audioScene.suspend();\n    }\n\n    // Set sounds for collision, footstep and interaction available\n    if (data.collisionAudioId != null) {\n      this.setCollisionAudio(data.collisionAudioId);\n    }\n    if (data.footstepAudioId != null) {\n      this.setFootstepAudio(data.footstepAudioId);\n    }\n    if (data.interactAvailAudioId != null) {\n      this.setInteractAvailAudio(data.interactAvailAudioId);\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\n// Options for configuring the file modal\nexport interface OpenFileDialogOptions {\n  accept?: string;\n}\n\n/**\n * Opens a file dialog and lets the user select a file\n * @returns The selected file\n */\nexport const openFileDialog = (\n  options: OpenFileDialogOptions = {}\n): Promise<File> =>\n  new Promise(resolve => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    if (options.accept) {\n      input.accept = options.accept;\n    }\n    input.onchange = () => {\n      if (input.files) {\n        resolve(input.files[0]);\n      }\n    };\n    input.click();\n  });\n\nexport const readFileAsArrayBuffer = (file: File): Promise<ArrayBuffer> =>\n  new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.result) {\n        resolve(reader.result as ArrayBuffer);\n      }\n    };\n    reader.onerror = () => {\n      console.error(\"Error:\", reader.error);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n","/**\n * @author Niklas Korz\n * This module defines functions for loading and importing projects from the local filesystem.\n */\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\nimport { openFileDialog } from \"../utils/files\";\n\n/**\n * Decompresses the given zip file, loads the included JSON metadata and reads all\n * included audio files as binary array buffers.\n * @param blob The blob to read from, usually a file returned by a FileReader instance.\n * @returns The project recreated from the data found in the zip\n */\nexport const loadZip = async (blob: Blob): Promise<Project> => {\n  const zip = await Zip.loadAsync(blob);\n  const metadata = JSON.parse(await zip.file(\"metadata.json\").async(\"text\"));\n\n  const audioLibrary = JSON.parse(\n    await zip.file(\"audioLibrary.json\").async(\"text\")\n  );\n  const audioFolder = zip.folder(\"audio\");\n  const project = new Project();\n  for (const { id, name, type } of audioLibrary) {\n    const data = await audioFolder.file(id.toString()).async(\"arraybuffer\");\n    project.audioLibrary.set(id, { name, type, data });\n\n    if (id >= project.audioLibrary.nextId) {\n      project.audioLibrary.nextId = id + 1;\n    }\n  }\n\n  project.fromData(metadata);\n  return project;\n};\n\n/**\n * Opens a file dialog and lets the user select a zip file that will be parsed\n * and loaded as a project.\n * @returns The project found in the zip\n */\nexport const openZip = async (): Promise<Project> => {\n  const file = await openFileDialog({ accept: \"application/zip\" });\n  return await loadZip(file);\n};\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.15; //Inaccuracy of gamepads (tested XBOX One S gamepad up to 0.11 - Daniel)\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n\n  getButtonStatus(index: number): boolean {\n    const gamepads = navigator.getGamepads();\n\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (gamepad.buttons[index].pressed) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\n// Make sure character keys are lowercased, as KeyboardEvent.key might report an uppercase\n// character if the Shift-key is pressed.\nconst normalizeKey = (key: string): string =>\n  key.length > 1 ? key : key.toLocaleLowerCase();\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    const key = normalizeKey(e.key);\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(key) || 0)) >= 100) {\n      this.keysPressed.add(key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    const key = normalizeKey(e.key);\n    this.keysPressed.delete(key);\n    this.lastKeyUp.set(key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Daniel Salomon\n */\nimport { Raycaster, Vector3, WebGLRenderer, Object3D, Mesh, Box3 } from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport Project from \"../project/Project\";\nimport GameObject, { InteractionType } from \"../project/GameObject\";\nimport SpawnMarker from \"../project/SpawnMarker\";\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class Runtime {\n  target: HTMLElement | null = null;\n  project: Project;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n  lastCollisionSound = 0; //Timestamp, when the last sound for collision was played\n  lastKnownButtonStatus = false; //Variable to check whether or not the button[0] was pressed in the last update() or not (to prevent multiple clicks)\n\n  shouldRender = true; //Should the visuals be rendered or should it be audio-only?\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n\n  raycaster = new Raycaster();\n\n  dummyCamera = new Object3D();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n\n  constructor(project: Project) {\n    this.project = project;\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n\n    const room = this.project.rooms[0];\n    this.project.selectRoom(room);\n    const spawn = room.spawns[0];\n    this.project.camera.position.set(\n      spawn.position.x,\n      this.project.playerHeight - 0.1,\n      spawn.position.z\n    );\n    this.project.camera.rotation.set(0, spawn.rotation.y, 0);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.project.camera.aspect = offsetWidth / offsetHeight;\n    this.project.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    if (this.shouldRender) {\n      this.renderer.render(this.project.activeRoom, this.project.camera);\n    } else {\n      // When we are not actively rendering, position updates are not passed down\n      // to children in the scene graph automatically.\n      // To enforce this update, we have to update the scene graphs root manually\n      // (i.e., the scene itself), which will in turn update all nodes contained in the\n      // scene graph.\n      // As the camera is not a part of the scene graph, it has to be updated\n      // manually as well.\n      this.project.activeRoom.updateMatrixWorld();\n      this.project.activeRoom.camera.updateMatrixWorld(false);\n    }\n  };\n\n  toggleRendering(): void {\n    this.shouldRender = this.shouldRender ? false : true;\n    this.renderer.clear();\n  }\n\n  // Helper method to check if a number (check) is between or equal to two boundaries (from, to). E.g.: isBetween(2, 1, 5)==true, isBetween(6, 1, 5)==false\n  isBetween(check: number, from: number, to: number): boolean {\n    const min = Math.min.apply(Math, [from, to]),\n      max = Math.max.apply(Math, [from, to]);\n    return check >= min && check <= max;\n  }\n\n  invokeInteraction(): boolean {\n    const toInteractWith = this.project.activeObject;\n    if (toInteractWith != null) {\n      toInteractWith.triggerInteraction(this.project);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  update(dt: number): void {\n    const { camera } = this.project;\n    this.dummyCamera.position.copy(camera.position); //Copy values of the real camera object to the dummy camera, to be used later on for collision detection\n    this.dummyCamera.rotation.copy(camera.rotation);\n\n    let moveX = 0;\n    let moveZ = 0;\n    let rotateY = 0;\n\n    //Sidenote on movement: We really wanted to implement the possibility to look up and down, but it turned out to be way too complex for us to implement in this project.\n    //All tries resulted in either a buggy camera or a buggy movement through the environment, which we were not fine with.\n\n    //Keyboard actions (W/A/S/D to move, Left&Right arrows to rotate)\n    if (this.keys.isPressed(\"w\")) {\n      const newZ = -2 * dt;\n      moveZ = Math.abs(moveZ) < Math.abs(newZ) ? newZ : moveZ;\n    }\n    if (this.keys.isPressed(\"s\")) {\n      const newZ = 2 * dt;\n      moveZ = Math.abs(moveZ) < Math.abs(newZ) ? newZ : moveZ;\n    }\n    if (this.keys.isPressed(\"a\")) {\n      const newX = -2 * dt;\n      moveX = Math.abs(moveX) < Math.abs(newX) ? newX : moveX;\n    }\n    if (this.keys.isPressed(\"d\")) {\n      const newX = 2 * dt;\n      moveX = Math.abs(moveX) < Math.abs(newX) ? newX : moveX;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      const newY = dt;\n      rotateY = Math.abs(rotateY) < Math.abs(newY) ? newY : rotateY;\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      const newY = -dt;\n      rotateY = Math.abs(rotateY) < Math.abs(newY) ? newY : rotateY;\n    }\n\n    //Collect necessary information from the gamepad API, supports analog sticks (slower and faster movement)\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2)\n    };\n    if (gamepadAxes.x) {\n      const newX = 2 * dt * gamepadAxes.x;\n      moveX = Math.abs(moveX) < Math.abs(newX) ? newX : moveX;\n    }\n    if (gamepadAxes.y) {\n      const newZ = 2 * dt * gamepadAxes.y;\n      moveZ = Math.abs(moveZ) < Math.abs(newZ) ? newZ : moveZ;\n    }\n    if (gamepadAxes.rX) {\n      const newY = -dt * gamepadAxes.rX;\n      rotateY = Math.abs(rotateY) < Math.abs(newY) ? newY : rotateY;\n    }\n\n    // Executing the rotation/movement after all keys are evaluated prevents the issue of double movement speed when both, keyboard and gamepad, is used at the same time.\n    camera.rotateOnWorldAxis(axes.y, rotateY); // Rotate left & right\n    //Apply movement to dummy object first to check if a collision is happening. If not, apply to actual camera.\n    this.dummyCamera.translateOnAxis(axes.z, moveZ); // Move forwards & backwards\n    this.dummyCamera.translateOnAxis(axes.x, moveX); // Move left & right\n\n    //Values to check for collision\n    const newX = this.dummyCamera.position.x;\n    const newZ = this.dummyCamera.position.z;\n\n    //Check for collision\n    let collided = false;\n    for (const i of this.project.activeRoom.children) {\n      if (!(i instanceof Mesh) || i instanceof SpawnMarker) {\n        continue;\n      }\n      const thresholdMovement = 0.25; //Minimum allowed distance to an object\n      const thresholdHeight = 0.05; //Minimum allowed distance to an object below or above the player (player height is 1,80[m])\n\n      var bbox = new Box3().setFromObject(i); //Bounding box to take rotation of the object into account.\n      const bboxposition = bbox.getCenter(new Vector3());\n      const bboxscale = bbox.getSize(new Vector3());\n\n      //Estimate boundaries of all (visible) objects in the current room\n      const boundX1 = bboxposition.x + bboxscale.x / 2 + thresholdMovement;\n      const boundX2 = bboxposition.x - bboxscale.x / 2 - thresholdMovement;\n      const boundY1 = bboxposition.y + bboxscale.y / 2 + thresholdHeight;\n      const boundY2 = bboxposition.y - bboxscale.y / 2 - thresholdHeight;\n      const boundZ1 = bboxposition.z + bboxscale.z / 2 + thresholdMovement;\n      const boundZ2 = bboxposition.z - bboxscale.z / 2 - thresholdMovement;\n\n      //Check if the next position of the camera collides with the bondaries or the object (and effectively if a collision is about to happen)\n      if (\n        this.isBetween(newX, boundX2, boundX1) &&\n        this.isBetween(newZ, boundZ2, boundZ1) &&\n        (this.isBetween(boundY1, 0, this.project.playerHeight) ||\n          this.isBetween(boundY2, 0, this.project.playerHeight) ||\n          (this.isBetween(this.project.playerHeight, boundY2, boundY1) &&\n            this.isBetween(0, boundY2, boundY1)))\n      ) {\n        collided = true;\n      }\n    }\n\n    // Move to new position if no collision occured, otherwise play a collision sound\n    if (!collided) {\n      camera.position.copy(this.dummyCamera.position);\n    } else if (this.lastCollisionSound + 1000 < Date.now()) {\n      //TODO - Play sound\n      this.lastCollisionSound = Date.now();\n    }\n\n    //Check for an object to interact with. If found, mark it as active (mostly for debugging and visual help for possible spectators)\n    //The raycaster helps to check for objects in sight. To ensure that objects on the bottom and top of sight are interactable too, the raycasting is called multiple times\n    //That way, objects from the middle top of the sight to the middle bottom of the screen are scanned and checked for their distance.\n    let nearestDist = Infinity;\n    let nearestObj: GameObject | null = null;\n\n    for (let i = 1; i >= -1; i -= 0.1) {\n      //From top (1) to middle(0) to bottom (-1)\n      this.raycaster.setFromCamera({ x: 0, y: i }, camera);\n      const intersections = this.raycaster.intersectObjects(\n        //perform raycasting with the given settings, originating from the main camera\n        this.project.activeRoom.children\n      );\n\n      for (const intersection of intersections) {\n        //Check, if the intersecting objects are actual GameObjects and if they are closer than the current closest intersecting GameObject\n        const o = intersection.object;\n        if (o instanceof GameObject && intersection.distance < nearestDist) {\n          nearestDist = intersection.distance;\n          nearestObj = o;\n        }\n      }\n    }\n\n    if (\n      nearestDist <= 1.5 &&\n      nearestObj != null &&\n      nearestObj.interactionType !== InteractionType.None\n    ) {\n      //If the clostest GameObject is closer or equal than 1.5m (and not null for safety), select it\n      this.project.selectObject(nearestObj);\n    } else {\n      //Otherwise, unselect all\n      this.project.unselect();\n    }\n\n    //Interact with nearest (selected) object\n    if (\n      // Is the button or key clicked\n      (this.gamepads.getButtonStatus(0) || this.keys.isPressed(\"e\")) &&\n      //Prevent multiple actions on button hold\n      !this.lastKnownButtonStatus\n    ) {\n      this.lastKnownButtonStatus = true;\n      this.invokeInteraction();\n    } else if (!this.gamepads.getButtonStatus(0) && !this.keys.isPressed(\"e\")) {\n      this.lastKnownButtonStatus = false; //Last known button status was unpressed, so clear the value\n    }\n\n    //TODO - sounds for footsteps\n  }\n}\n","/**\n * @author Daniel Salomon\n */\nimport styled, { css } from \"styled-components\";\n\nexport const FocusedLabel = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  pointer-events: none;\n`;\n\nexport const RunningLabel = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  font-size: 25px;\n`;\n\nexport const RunningHeadline = styled.p`\n  color: #fff;\n  font-size: 15px;\n  margin: 12px 10px 5px 10px;\n  font-weight: bold;\n`;\n\nexport const RunningButtonContainer = styled.div`\n  display: flex;\n  justify-content: left;\n`;\n\ninterface RunningButtonProps {\n  selected?: boolean;\n}\n\nexport const RunningButton = styled.div<RunningButtonProps>`\n  padding: 10px 15px;\n  margin: 5px;\n  color: #fff;\n  font-size: 15px;\n  border-radius: 3px;\n  background: hsla(0, 0%, 100%, 0.2);\n  ${props =>\n    props.selected &&\n    css`\n      box-shadow: 0px 0px 10px #00ff00;\n      background: #19611c;\n    `}\n\n  border: 1px solid hsl(210, 15%, 40%);\n  text-align: center;\n  cursor: pointer;\n\n  :hover {\n    ${props =>\n      !props.selected &&\n      css`\n        background: hsla(0, 0%, 100%, 0.4);\n      `}\n  }\n`;\n\nexport const ControlsTable = styled.table`\n  border: 0px solid transparent;\n  border-collapse: collapse;\n  font-size: 15px;\n  width: 100%;\n`;\n\nexport const Main = styled.main`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-color: black;\n\n  :focus-within > ${FocusedLabel} {\n    display: block;\n  }\n`;\n","/**\n * @author Daniel Salomon\n */\nimport React from \"react\";\nimport Project from \"../project/Project\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\nimport Runtime from \"./Runtime\";\nimport {\n  Main,\n  FocusedLabel,\n  RunningLabel,\n  RunningHeadline,\n  RunningButton,\n  RunningButtonContainer,\n  ControlsTable\n} from \"./styled\";\n\ninterface Props {\n  project: Project;\n  onExit(): void;\n}\ninterface State {\n  audioImplementation: AudioImplementation;\n}\n\nexport default class RuntimeContainer extends React.Component<Props> {\n  targetRef = React.createRef<HTMLDivElement>();\n  runtime = new Runtime(this.props.project);\n  activeButtonRef: HTMLElement | null = null;\n\n  state: State = { audioImplementation: AudioImplementation.WebAudio };\n\n  constructor(props: Props) {\n    super(props);\n    this.state.audioImplementation = this.props.project.activeAudioImplementation;\n  }\n\n  componentDidMount(): void {\n    if (this.targetRef.current) {\n      this.runtime.attach(this.targetRef.current);\n      this.runtime.focus();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.runtime.detach();\n  }\n\n  onExit = () => {\n    this.runtime.detach();\n    this.props.onExit();\n  };\n\n  onVisualToggle = () => {\n    this.runtime.toggleRendering();\n  };\n\n  onChangeAudio = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    audio: AudioImplementation\n  ) => {\n    this.props.project.selectAudioImplementation(audio);\n    this.setState({ audioImplementation: audio });\n  };\n\n  render(): React.ReactNode {\n    const { audioImplementation } = this.state;\n\n    return (\n      <Main ref={this.targetRef}>\n        <RunningLabel>\n          Audio3D\n          <RunningHeadline>Menu</RunningHeadline>\n          <RunningButtonContainer>\n            <RunningButton onClick={this.onExit}>Exit</RunningButton>\n            <RunningButton onClick={this.onVisualToggle}>\n              Toggle visuals\n            </RunningButton>\n          </RunningButtonContainer>\n          <RunningHeadline>Audio implementation</RunningHeadline>\n          <RunningButtonContainer>\n            <RunningButton\n              onClick={e => this.onChangeAudio(e, AudioImplementation.WebAudio)}\n              selected={audioImplementation === AudioImplementation.WebAudio}\n            >\n              Web Audio API\n            </RunningButton>\n            <RunningButton\n              selected={audioImplementation === AudioImplementation.Binaural}\n              onClick={e => this.onChangeAudio(e, AudioImplementation.Binaural)}\n            >\n              BinauralFIR\n            </RunningButton>\n            <RunningButton\n              selected={\n                audioImplementation === AudioImplementation.ResonanceAudio\n              }\n              onClick={e =>\n                this.onChangeAudio(e, AudioImplementation.ResonanceAudio)\n              }\n            >\n              Resonance Audio\n            </RunningButton>\n          </RunningButtonContainer>\n          <RunningHeadline>Controls</RunningHeadline>\n          <ControlsTable>\n            <tbody>\n              <tr>\n                <td>Move</td>\n                <td>W/A/S/D or left stick</td>\n              </tr>\n              <tr>\n                <td>View</td>\n                <td>Arrow keys or right stick</td>\n              </tr>\n              <tr>\n                <td>Interact</td>\n                <td>E or A (XBOX)</td>\n              </tr>\n            </tbody>\n          </ControlsTable>\n        </RunningLabel>\n        <FocusedLabel>Focused</FocusedLabel>\n      </Main>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  max-width: 600px;\n  color: #fff;\n  background: hsl(210, 29%, 29%);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n`;\n\nconst TitleBar = styled.div`\n  padding: 10px 15px;\n  background: hsl(210, 29%, 15%);\n`;\n\nconst Content = styled.div`\n  padding: 10px 15px;\n`;\n\nexport const ActionGroup = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Action = styled.button`\n  display: block;\n  appearance: none;\n  border: none;\n  background: hsl(210, 29%, 20%);\n  color: #fff;\n  cursor: pointer;\n  border-radius: 3px;\n  padding: 8px 12px;\n  margin-left: 10px;\n  font-size: 0.9em;\n\n  transition: 0.2s background-color, 0.2s box-shadow;\n\n  :hover,\n  :active {\n    background: hsl(210, 29%, 35%);\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.2);\n  }\n\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n\n  :disabled {\n    background: hsl(210, 19%, 20%);\n    color: hsl(210, 20%, 80%);\n    cursor: not-allowed;\n    box-shadow: none;\n  }\n`;\n\ninterface Props {\n  title: string;\n  onDismiss?(): void;\n}\n\nexport default class Modal extends React.Component<Props> {\n  onBackdropClick: React.MouseEventHandler = e => {\n    if (e.currentTarget === e.target && this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <Backdrop onClick={this.onBackdropClick}>\n        <Container>\n          <TitleBar>{this.props.title}</TitleBar>\n          <Content>{this.props.children}</Content>\n        </Container>\n      </Backdrop>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\nimport { AudioEntry } from \"./types\";\n\ninterface Props {\n  audioEntry: AudioEntry;\n  onDelete(audioEntry: AudioEntry): void;\n  onExport(audioEntry: AudioEntry): void;\n  onDismiss(): void;\n  onCancel(): void;\n}\n\nexport default class AudioFileModal extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { audioEntry } = this.props;\n    return (\n      <Modal title=\"Audio File\" onDismiss={this.props.onDismiss}>\n        <p>\n          <b>ID:</b> {audioEntry.id}\n        </p>\n        <p>\n          <b>Name:</b> {audioEntry.name}\n        </p>\n        <p>\n          <b>Type:</b> {audioEntry.type}\n        </p>\n        <p>\n          <b>Size:</b> {Math.ceil(audioEntry.data.byteLength / 1024)} KiB\n        </p>\n        <ActionGroup>\n          <Action onClick={() => this.props.onDelete(audioEntry)}>\n            Delete\n          </Action>\n          <Action onClick={() => this.props.onExport(audioEntry)}>\n            Export\n          </Action>\n          <Action onClick={this.props.onCancel}>Back</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { saveAs } from \"file-saver\";\nimport styled from \"styled-components\";\nimport AudioLibrary from \"../project/AudioLibrary\";\nimport { openFileDialog, readFileAsArrayBuffer } from \"../utils/files\";\nimport AudioFileModal from \"./AudioFileModal\";\nimport Modal, { Action, ActionGroup } from \"./Modal\";\nimport { AudioEntry } from \"./types\";\n\nconst AudioList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 0 -5px;\n`;\n\nconst AudioItem = styled.div`\n  flex: 1 1 150px;\n  margin: 5px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  cursor: pointer;\n  background: hsl(210, 29%, 20%);\n  transition: 0.2s background-color, 0.2s box-shadow;\n\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  :hover,\n  :active {\n    background: hsl(210, 29%, 35%);\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.2);\n  }\n`;\n\ninterface Props {\n  audioLibrary: AudioLibrary;\n  onDismiss(): void;\n  onSelect?(entry: AudioEntry): void;\n}\n\ninterface State {\n  entries: AudioEntry[];\n  selectedEntry: AudioEntry | null;\n}\n\nexport default class AudioLibraryModal extends React.Component<Props, State> {\n  previewAudio = new Audio();\n  state: State = { entries: [], selectedEntry: null };\n\n  openAudioFileDialog = async () => {\n    const file = await openFileDialog({ accept: \"audio/*\" });\n    const data = await readFileAsArrayBuffer(file);\n    const audioFile = { name: file.name, type: file.type, data };\n    const id = await this.props.audioLibrary.add(audioFile);\n    this.setState(({ entries }) => ({\n      entries: [\n        ...entries,\n        {\n          id,\n          ...audioFile\n        }\n      ]\n    }));\n  };\n\n  previewEntry(entry: AudioEntry): void {\n    this.previewAudio.src = URL.createObjectURL(new Blob([entry.data]));\n    this.previewAudio.loop = true;\n    this.previewAudio.play();\n  }\n\n  stopPreview = () => {\n    this.previewAudio.pause();\n    URL.revokeObjectURL(this.previewAudio.src);\n  };\n\n  dismiss = () => {\n    this.setState({ selectedEntry: null });\n    this.props.onDismiss();\n    this.stopPreview();\n  };\n\n  selectEntry(audioEntry: AudioEntry): void {\n    if (this.props.onSelect) {\n      this.props.onSelect(audioEntry);\n    } else {\n      this.setState({ selectedEntry: audioEntry });\n    }\n  }\n\n  unselectEntry = () => {\n    this.setState({ selectedEntry: null });\n    this.stopPreview();\n  };\n\n  deleteAudio = ({ id }: AudioEntry) => {\n    this.props.audioLibrary.delete(id);\n    this.setState(({ entries }) => ({\n      entries: entries.filter(e => e.id !== id),\n      selectedEntry: null\n    }));\n  };\n\n  exportAudio = ({ name, type, data }: AudioEntry) => {\n    saveAs(new Blob([data], { type }), name);\n  };\n\n  async updateEntries(): Promise<void> {\n    const entries: AudioEntry[] = [];\n    for await (const [id, audioFile] of this.props.audioLibrary.entries()) {\n      entries.push({ ...audioFile, id });\n    }\n    this.setState({\n      entries: entries.sort((a, b) => a.id - b.id)\n    });\n  }\n\n  async componentDidMount(): Promise<void> {\n    await this.updateEntries();\n  }\n\n  async componentDidUpdate(prevProps: Props): Promise<void> {\n    if (prevProps.audioLibrary !== this.props.audioLibrary) {\n      // The project and therefore the audio library to be rendered has changed\n      await this.updateEntries();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.previewAudio.pause();\n    URL.revokeObjectURL(this.previewAudio.src);\n  }\n\n  render(): React.ReactNode {\n    const { entries, selectedEntry } = this.state;\n\n    if (selectedEntry) {\n      return (\n        <AudioFileModal\n          audioEntry={selectedEntry}\n          onDelete={this.deleteAudio}\n          onExport={this.exportAudio}\n          onCancel={this.unselectEntry}\n          onDismiss={this.dismiss}\n        />\n      );\n    }\n\n    return (\n      <Modal\n        title={this.props.onSelect ? \"Select Audio\" : \"Audio Library\"}\n        onDismiss={this.dismiss}\n      >\n        <AudioList>\n          {entries.length > 0 &&\n            entries.map(e => (\n              <AudioItem\n                key={e.id}\n                title={e.name}\n                onClick={() => this.selectEntry(e)}\n                onMouseEnter={() => this.previewEntry(e)}\n                onMouseLeave={this.stopPreview}\n              >\n                {e.name} <br />\n                {e.type} <br />\n                {Math.ceil(e.data.byteLength / 1024)} KiB\n              </AudioItem>\n            ))}\n        </AudioList>\n        {!entries.length && <div>You haven't added any audio files yet</div>}\n        <ActionGroup>\n          <Action onClick={this.openAudioFileDialog}>Add audio file</Action>\n          <Action onClick={this.dismiss}>Cancel</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\n\nconst Container = styled.div`\n  flex: 0 0 auto;\n  background: hsl(210, 29%, 15%);\n  color: #fff;\n  font-size: 0.9em;\n  padding: 0 10px;\n  user-select: none;\n\n  :focus {\n    outline: none;\n  }\n`;\n\ninterface MenubarItemProps {\n  isActive?: boolean;\n  alignRight?: boolean;\n}\n\nconst MenubarItem = styled.div<MenubarItemProps>`\n  position: relative;\n  display: inline-block;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 25%, 20%);\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      background: hsl(210, 25%, 20%);\n    `}\n\n  ${props =>\n    props.alignRight &&\n    css`\n      float: right;\n    `}\n`;\n\nconst MenubarItemLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst Menu = styled.div`\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  top: 100%;\n  background: hsl(210, 25%, 20%);\n  padding: 5px 0;\n  min-width: 200px;\n  font-size: 0.95em;\n  box-shadow: 5px 5px 8px rgba(0, 0, 0, 0.5);\n\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  cursor: default;\n`;\n\nconst MenuItem = styled.div`\n  white-space: nowrap;\n  padding: 8px 20px;\n  margin: 2px 0;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 15%);\n  }\n`;\n\nconst MenuDivider = styled.div`\n  height: 0;\n  margin: 5px;\n  border-bottom: 1px solid hsl(210, 15%, 35%);\n`;\n\ninterface Props {\n  audioImplementation: AudioImplementation;\n\n  onNewProject(): void;\n  onLoadProject(): void;\n  onSaveProject(): void;\n  onImportProject(): void;\n  onExportProject(): void;\n  onShowSettings(): void;\n\n  onAddObject(): void;\n  onDeleteObject(): void;\n  onAddSpawn(): void;\n  onDeleteSpawn(): void;\n  onAddRoom(): void;\n  onDeleteRoom(): void;\n\n  onShowAudioLibrary(): void;\n  onShowProjectManager(): void;\n\n  onAudioChange(audioImplementation: AudioImplementation): void;\n  onRunProject(): void;\n}\n\nenum MenuType {\n  FileMenu,\n  EditMenu,\n  AudioMenu,\n  ViewMenu,\n  HelpMenu\n}\n\ninterface State {\n  activeMenu: MenuType | null;\n}\n\nexport default class MenuBar extends React.Component<Props, State> {\n  state: State = {\n    activeMenu: null\n  };\n\n  toggleMenu(menuType: MenuType): void {\n    this.setState(state => ({\n      activeMenu: state.activeMenu === menuType ? null : menuType\n    }));\n  }\n\n  closeMenu(): void {\n    this.setState({ activeMenu: null });\n  }\n\n  render(): React.ReactNode {\n    const { audioImplementation, onAudioChange } = this.props;\n    const { activeMenu } = this.state;\n\n    return (\n      <Container tabIndex={-1} onBlur={() => this.closeMenu()}>\n        <MenubarItem\n          isActive={activeMenu === MenuType.FileMenu}\n          onClick={() => this.toggleMenu(MenuType.FileMenu)}\n        >\n          <MenubarItemLabel>File</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.FileMenu}>\n            <MenuItem onClick={this.props.onNewProject}>New project</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onLoadProject}>Load project</MenuItem>\n            <MenuItem onClick={this.props.onImportProject}>\n              Import project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onSaveProject}>Save project</MenuItem>\n            <MenuItem onClick={this.props.onExportProject}>\n              Export project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onShowSettings}>Settings</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.EditMenu}\n          onClick={() => this.toggleMenu(MenuType.EditMenu)}\n        >\n          <MenubarItemLabel>Edit</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.EditMenu}>\n            <MenuItem onClick={this.props.onAddObject}>Add object</MenuItem>\n            <MenuItem onClick={this.props.onDeleteObject}>\n              Delete object\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddSpawn}>Add spawn</MenuItem>\n            <MenuItem onClick={this.props.onDeleteSpawn}>Delete spawn</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddRoom}>Add room</MenuItem>\n            <MenuItem onClick={this.props.onDeleteRoom}>Delete room</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.ViewMenu}\n          onClick={() => this.toggleMenu(MenuType.ViewMenu)}\n        >\n          <MenubarItemLabel>View</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.ViewMenu}>\n            <MenuItem onClick={this.props.onShowAudioLibrary}>\n              Audio Library\n            </MenuItem>\n            <MenuItem onClick={this.props.onShowProjectManager}>\n              Project Manager\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.HelpMenu}\n          onClick={() => this.toggleMenu(MenuType.HelpMenu)}\n        >\n          <MenubarItemLabel>Help</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.HelpMenu}>\n            <MenuItem\n              onClick={() =>\n                window.open(\n                  \"https://github.com/niklaskorz/audio3d/wiki/Code-Blocks\",\n                  \"_blank\"\n                )\n              }\n            >\n              How to use Code Blocks\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem\n              onClick={() =>\n                window.open(\n                  \"https://github.com/niklaskorz/audio3d/issues\",\n                  \"_blank\"\n                )\n              }\n            >\n              Issues\n            </MenuItem>\n            <MenuItem\n              onClick={() =>\n                window.open(\"https://github.com/niklaskorz/audio3d\", \"_blank\")\n              }\n            >\n              Source Code\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem\n              onClick={() =>\n                window.open(\n                  \"https://github.com/niklaskorz/audio3d/blob/master/README.md\",\n                  \"_blank\"\n                )\n              }\n            >\n              About\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem alignRight onClick={this.props.onRunProject}>\n          <MenubarItemLabel>Run</MenubarItemLabel>\n        </MenubarItem>\n        <MenubarItem\n          alignRight\n          isActive={activeMenu === MenuType.AudioMenu}\n          onClick={() => this.toggleMenu(MenuType.AudioMenu)}\n        >\n          <MenubarItemLabel>Audio: {audioImplementation}</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.AudioMenu}>\n            <MenuItem\n              onClick={() => onAudioChange(AudioImplementation.WebAudio)}\n            >\n              {AudioImplementation.WebAudio}\n            </MenuItem>\n            <MenuItem\n              onClick={() => onAudioChange(AudioImplementation.Binaural)}\n            >\n              {AudioImplementation.Binaural}\n            </MenuItem>\n\n            <MenuItem\n              onClick={() => onAudioChange(AudioImplementation.ResonanceAudio)}\n            >\n              {AudioImplementation.ResonanceAudio}\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n      </Container>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport const selectOnFocus = (e: React.FocusEvent<HTMLInputElement>): void => {\n  e.currentTarget.select();\n};\n","/**\n * @author Niklas Korz\n */\nimport styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InnerContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const FocusedLabel = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  pointer-events: none;\n`;\n\nexport const Main = styled.main`\n  position: relative;\n  flex: 1;\n  height: 100%;\n\n  :focus-within > ${FocusedLabel} {\n    display: block;\n  }\n`;\n\nexport const Sidebar = styled.aside`\n  font-size: 0.9em;\n  flex: 0 0 300px;\n  height: 100%;\n  background: hsl(210, 29%, 29%);\n  color: #fff;\n  padding: 0 15px;\n  padding-top: 1.4em;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Group = styled.div`\n  margin: 0;\n  margin-bottom: 1.4em;\n\n  & > & {\n    margin-top: 1.4em;\n    font-size: 0.9em;\n  }\n`;\n\nexport const BoldLabel = styled.label`\n  font-weight: bold;\n`;\n\nexport const Hint = styled.p`\n  font-size: 0.9em;\n  color: hsl(210, 20%, 90%);\n`;\n\nexport const Input = styled.input`\n  display: block;\n  background: hsl(210, 29%, 24%);\n  border-radius: 0.2em;\n  border: 0.15em solid hsl(210, 29%, 24%);\n  color: #fff;\n  width: 100%;\n  padding: 0.7em 0.85em;\n  margin: 0.35em 0;\n\n  [type^=\"range\"] {\n    appearance: none;\n  }\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nexport const Select = styled(Input.withComponent(\"select\"))`\n  cursor: pointer;\n`;\n\nexport const CustomInput = styled(Input.withComponent(\"div\"))`\n  cursor: pointer;\n`;\n\nexport const CodeEditor = styled(Input.withComponent(\"textarea\"))`\n  min-height: 200px;\n  font-family: \"Fira Code Retina\", \"Fira Code\", Consolas, Menlo, Monaco,\n    monospace;\n  white-space: pre;\n  line-height: 1.5;\n\n  /* Disable user resizing of width */\n  min-width: 100%;\n  max-width: 100%;\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  > ${Input} {\n    flex: 1;\n    width: auto;\n    min-width: 0;\n\n    margin-right: 5px;\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const RoomList = styled.ol`\n  list-style: none;\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 3px;\n  background: hsl(210, 29%, 24%);\n`;\n\ninterface RoomListItemProps {\n  active?: boolean;\n}\n\nexport const RoomListItem = styled.li<RoomListItemProps>`\n  cursor: pointer;\n  padding: 7px 10px;\n  border-radius: 2px;\n  ${props =>\n    props.active &&\n    css`\n      background: hsl(210, 29%, 20%);\n      border-left: 2px solid #3498db;\n    `};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The control mode is used to determine which planes and axes to enable.\n// While a game object may be moved and scaled arbitrarily, a spawn marker\n// shouldn't be scaleable and only be moveable on the X- and Y-axis.\nexport enum ControlMode {\n  Normal,\n  RestrictedXZ\n}\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nenum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  project: Project;\n\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(project: Project) {\n    super();\n\n    this.project = project;\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  setMode(controlMode: ControlMode): void {\n    if (controlMode === ControlMode.RestrictedXZ) {\n      this.axisY.visible = false;\n      this.planeXY.visible = false;\n      this.planeYZ.visible = false;\n      this.scaleX.visible = false;\n      this.scaleY.visible = false;\n      this.scaleZ.visible = false;\n    } else {\n      this.axisY.visible = true;\n      this.planeXY.visible = true;\n      this.planeYZ.visible = true;\n      this.scaleX.visible = true;\n      this.scaleY.visible = true;\n      this.scaleZ.visible = true;\n    }\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    const target = this.project.activeObject || this.project.activeSpawn;\n    if (!target) {\n      return null;\n    }\n\n    this.position.copy(target.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset.copy(intersection.point).sub(target.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    const target = this.project.activeObject || this.project.activeSpawn;\n    if (this.objectDragDirection === null || !target) {\n      return;\n    }\n\n    const c = target.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // The second parameter of the Plane constructor is called the \"constant\" and\n    // is used for defining the plane in Hessian normal form. It defines\n    // the negative distance from the origin to the plane.\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          target.scale.x = Math.min(\n            Math.max(target.scale.x + (point.x - this.lastPoint.x), 0.1),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          target.scale.y = Math.min(\n            Math.max(target.scale.y + (point.y - this.lastPoint.y), 0.1),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          target.scale.z = Math.min(\n            Math.max(target.scale.z + (point.z - this.lastPoint.z), 0.1),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(target.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          target.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          target.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          target.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          target.position.copy(point);\n      }\n\n      this.project.events.onTranslate(target.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { InteractionType, TeleportTarget } from \"../project/GameObject\";\nimport Room from \"../project/Room\";\nimport { selectOnFocus } from \"../utils/react\";\nimport {\n  Group,\n  Input,\n  InputGroup,\n  CustomInput,\n  Select,\n  CodeEditor,\n  Hint\n} from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  rooms: Room[];\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateInteractionType(interactionType: InteractionType): void;\n  onUpdateCodeBlockSource(source: string): void;\n  onUpdateTeleportTarget(teleportTarget: TeleportTarget): void;\n  onShowAudioSelection(): void;\n  onShowInteractionAudioSelection(): void;\n}\n\ninterface State {\n  codeError?: string;\n}\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props, State> {\n  codeCheckTimeout: number | null = null;\n  state: State = {};\n\n  checkCode = () => {\n    const { codeBlockSource } = this.props.object;\n    if (codeBlockSource == null) {\n      return;\n    }\n\n    try {\n      // Try to parse the code block source\n      new Function(\"playerState\", \"roomState\", codeBlockSource);\n      this.setState({ codeError: undefined });\n    } catch (ex) {\n      this.setState({ codeError: ex.toString() });\n    }\n  };\n\n  updateCodeBlockSource: React.ChangeEventHandler<HTMLTextAreaElement> = e => {\n    this.props.onUpdateCodeBlockSource(e.currentTarget.value);\n    if (this.codeCheckTimeout != null) {\n      window.clearTimeout(this.codeCheckTimeout);\n    }\n    this.codeCheckTimeout = window.setTimeout(this.checkCode, 2000);\n  };\n\n  updateTeleportTargetRoomId: React.ChangeEventHandler<\n    HTMLSelectElement\n  > = e => {\n    const roomId = e.currentTarget.value;\n    this.props.onUpdateTeleportTarget({ roomId, spawnId: \"\" });\n  };\n\n  updateTeleportTargetSpawnId: React.ChangeEventHandler<\n    HTMLSelectElement\n  > = e => {\n    const { object: o, onUpdateTeleportTarget } = this.props;\n    if (o.teleportTarget) {\n      const spawnId = e.currentTarget.value;\n      onUpdateTeleportTarget({ ...o.teleportTarget, spawnId });\n    }\n  };\n\n  componentDidMount(): void {\n    this.checkCode();\n  }\n\n  componentWillUnmount(): void {\n    if (this.codeCheckTimeout != null) {\n      window.clearTimeout(this.codeCheckTimeout);\n      this.codeCheckTimeout = null;\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      rooms,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale,\n      onUpdateInteractionType,\n      onShowAudioSelection,\n      onShowInteractionAudioSelection\n    } = this.props;\n    const { codeError } = this.state;\n    const teleportTargetRoom =\n      o.teleportTarget && rooms.find(r => r.uuid === o.teleportTarget!.roomId);\n\n    return (\n      <div>\n        <Group>\n          <label>Object ID</label>\n          <Input type=\"text\" readOnly value={o.uuid} onFocus={selectOnFocus} />\n        </Group>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            placeholder=\"New object\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.y,\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.y.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  o.position.y,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.x).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.y,\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.y).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.z).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  o.rotation.y,\n                  degToRad(e.currentTarget.valueAsNumber % 360)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.x.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  e.currentTarget.valueAsNumber,\n                  o.scale.y,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.y.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  e.currentTarget.valueAsNumber,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.z.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  o.scale.y,\n                  e.currentTarget.valueAsNumber\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Audio</label>\n          <CustomInput onClick={onShowAudioSelection}>\n            {o.audio\n              ? `${o.audio.name} (${Math.ceil(\n                  o.audio.data.byteLength / 1024\n                )} KiB)`\n              : \"No audio selected\"}\n          </CustomInput>\n          {o.audio != null && (\n            <>\n              <Group>\n                <label>Loop Pause (seconds)</label>\n                <Input type=\"number\" min=\"0\" max=\"60\" step=\"1\" />\n              </Group>\n              <Group>\n                <label>Volume (0% to 100%)</label>\n                <Input type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" />\n              </Group>\n            </>\n          )}\n        </Group>\n        <Group>\n          <label>Interaction</label>\n          <Select\n            value={o.interactionType}\n            onChange={e =>\n              onUpdateInteractionType(e.currentTarget.value as InteractionType)\n            }\n          >\n            {Object.values(InteractionType).map(t => (\n              <option key={t}>{t}</option>\n            ))}\n          </Select>\n          {o.interactionType === InteractionType.CodeBlock && (\n            <>\n              <CodeEditor\n                placeholder=\"// JavaScript\"\n                value={o.codeBlockSource}\n                onChange={this.updateCodeBlockSource}\n              />\n              <Hint>{codeError || \"No syntax errors detected\"}</Hint>\n            </>\n          )}\n          {o.interactionType === InteractionType.Teleport && o.teleportTarget && (\n            <Group>\n              <label>Teleport Target</label>\n              <Select\n                value={o.teleportTarget.roomId}\n                onChange={this.updateTeleportTargetRoomId}\n              >\n                {rooms.map(r => (\n                  <option key={r.uuid} value={r.uuid}>\n                    {r.name || \"Anonymous Room\"}\n                  </option>\n                ))}\n              </Select>\n              {teleportTargetRoom && (\n                <Select\n                  value={o.teleportTarget.spawnId}\n                  onChange={this.updateTeleportTargetSpawnId}\n                >\n                  {teleportTargetRoom.spawns.map(s => (\n                    <option key={s.uuid} value={s.uuid}>\n                      {s.name || \"New spawn\"}\n                    </option>\n                  ))}\n                </Select>\n              )}\n            </Group>\n          )}\n          {o.interactionType !== InteractionType.None &&\n            o.interactionType !== InteractionType.CodeBlock && (\n              <Group>\n                <label>Interaction Sound</label>\n                <CustomInput onClick={onShowInteractionAudioSelection}>\n                  {o.interactionAudio\n                    ? `${o.interactionAudio.name} (${Math.ceil(\n                        o.interactionAudio.data.byteLength / 1024\n                      )} KiB)`\n                    : \"No audio selected\"}\n                </CustomInput>\n              </Group>\n            )}\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Color, Mesh, Raycaster, Vector2, Vector3, WebGLRenderer } from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport SpawnMarker from \"../project/SpawnMarker\";\nimport VisualControls, { ControlMode } from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class EditorCanvas {\n  target!: HTMLElement;\n  project: Project;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  controls: VisualControls;\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(project: Project) {\n    this.project = project;\n\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      delete this.target;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  changeProject(project: Project): void {\n    this.project = project;\n    this.controls.project = project;\n    // Ensure the selected project's camera has the correct aspect ratio\n    this.resize();\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.project.camera.aspect = offsetWidth / offsetHeight;\n    this.project.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.project.camera);\n\n    if (this.project.activeObject || this.project.activeSpawn) {\n      if (this.project.activeObject) {\n        this.controls.setMode(ControlMode.Normal);\n        this.controls.position.copy(this.project.activeObject.position);\n      } else if (this.project.activeSpawn) {\n        this.controls.setMode(ControlMode.RestrictedXZ);\n        this.controls.position.copy(this.project.activeSpawn.position);\n      }\n\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.project.camera);\n    }\n  };\n\n  update(dt: number): void {\n    const { camera } = this.project;\n\n    if (this.keys.isPressed(\"w\")) {\n      camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof SpawnMarker) {\n        this.project.selectSpawn(o);\n        return true;\n      }\n      if (o instanceof GameObject) {\n        this.project.selectObject(o);\n        return true;\n      }\n    }\n\n    this.project.unselect();\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.target.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.target.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.project.camera);\n  }\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.project.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.project.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.project.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions, ResonanceAudio, RoomMaterials } from \"resonance-audio\";\nimport { selectOnFocus } from \"../utils/react\";\nimport { Group, Input, InputGroup, Select, Hint } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\nconst materials = Object.keys(ResonanceAudio.Utils.ROOM_MATERIAL_COEFFICIENTS);\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n  onUpdateMaterials(materials: RoomMaterials): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  selectMaterialHandler(\n    propertyName: keyof RoomMaterials\n  ): React.ChangeEventHandler<HTMLSelectElement> {\n    return e => {\n      const { room, onUpdateMaterials } = this.props;\n      onUpdateMaterials({\n        ...room.materials,\n        [propertyName]: e.currentTarget.value\n      });\n    };\n  }\n\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    const materialOptions = materials.map(ce => <option key={ce}>{ce}</option>);\n\n    return (\n      <div>\n        <Group>\n          <label>Room ID</label>\n          <Input type=\"text\" readOnly value={r.uuid} onFocus={selectOnFocus} />\n        </Group>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            placeholder=\"Anonymous Room\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.width}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  width: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.depth}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  depth: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={2}\n              max={10}\n              value={r.dimensions.height}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  height: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Room Materials</label>\n          <Hint>\n            These materials are used for calculating resonance (reverb) in the\n            room. Only supported when using Resonance Audio.\n          </Hint>\n          <Group>\n            <label>Left wall</label>\n            <Select\n              value={r.materials.left}\n              onChange={this.selectMaterialHandler(\"left\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Right wall</label>\n            <Select\n              value={r.materials.right}\n              onChange={this.selectMaterialHandler(\"right\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Front wall</label>\n            <Select\n              value={r.materials.front}\n              onChange={this.selectMaterialHandler(\"front\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Back wall</label>\n            <Select\n              value={r.materials.back}\n              onChange={this.selectMaterialHandler(\"back\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Floor</label>\n            <Select\n              value={r.materials.down}\n              onChange={this.selectMaterialHandler(\"down\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Ceiling</label>\n            <Select\n              value={r.materials.up}\n              onChange={this.selectMaterialHandler(\"up\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { ProjectData } from \"../data/schema\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\n\ninterface Props {\n  project: ProjectData;\n  onDelete(project: ProjectData): void;\n  onExport(project: ProjectData): void;\n  onDismiss(): void;\n  onCancel(): void;\n}\n\nexport default class ProjectInfoModal extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { project } = this.props;\n    return (\n      <Modal title=\"Project Info\" onDismiss={this.props.onDismiss}>\n        <p>\n          <b>Name:</b> {project.name}\n        </p>\n        <p>\n          <b>Last update:</b> {project.savedAt.toLocaleString()}\n        </p>\n        <p>\n          <b>Rooms:</b> {project.rooms.length}\n        </p>\n        <ActionGroup>\n          <Action onClick={() => this.props.onDelete(project)}>Delete</Action>\n          <Action onClick={() => this.props.onExport(project)}>Export</Action>\n          <Action onClick={this.props.onCancel}>Back</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ProjectData } from \"../data/schema\";\nimport { getAllProjects, deleteProject } from \"../data/db\";\nimport Project from \"../project/Project\";\nimport { saveAsZip } from \"../data/export\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\nimport ProjectInfoModal from \"./ProjectInfoModal\";\n\nconst TableContainer = styled.div`\n  border: 2px solid hsl(210, 29%, 20%);\n  border-radius: 3px;\n  max-height: 400px;\n  min-width: 500px;\n  overflow-y: auto;\n  padding-bottom: 5px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst TableHead = styled.thead`\n  text-align: left;\n`;\n\nconst TableRow = styled.tr`\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 40%);\n  }\n`;\n\nconst ColumnHead = styled.th`\n  padding: 5px 10px;\n`;\n\nconst ColumnData = styled.td`\n  padding: 5px 10px;\n`;\n\ninterface Props {\n  onNewProject(): void;\n  onDismiss(): void;\n  onSelectProject?(data: ProjectData): void;\n}\n\ninterface State {\n  projects: ProjectData[];\n  selectedProject: ProjectData | null;\n}\n\nexport default class ProjectManagerModal extends React.Component<Props, State> {\n  state: State = { projects: [], selectedProject: null };\n\n  dismiss = () => {\n    this.setState({ selectedProject: null });\n    this.props.onDismiss();\n  };\n\n  selectProject(data: ProjectData): void {\n    if (this.props.onSelectProject) {\n      this.props.onSelectProject(data);\n    } else {\n      this.setState({ selectedProject: data });\n    }\n  }\n\n  unselectProject = () => {\n    this.setState({ selectedProject: null });\n  };\n\n  deleteProject = ({ id }: ProjectData) => {\n    if (!id) {\n      return;\n    }\n    deleteProject(id);\n    this.setState(({ projects }) => ({\n      projects: projects.filter(p => p.id !== id),\n      selectedProject: null\n    }));\n  };\n\n  exportProject = (data: ProjectData) => {\n    const project = new Project().fromData(data, data.id);\n    saveAsZip(project);\n  };\n\n  async componentDidMount(): Promise<void> {\n    const projects = await getAllProjects();\n    this.setState({ projects: projects.reverse() });\n  }\n\n  render(): React.ReactNode {\n    const { projects, selectedProject } = this.state;\n\n    if (selectedProject) {\n      return (\n        <ProjectInfoModal\n          project={selectedProject}\n          onDelete={this.deleteProject}\n          onExport={this.exportProject}\n          onCancel={this.unselectProject}\n          onDismiss={this.dismiss}\n        />\n      );\n    }\n\n    return (\n      <Modal\n        title={this.props.onSelectProject ? \"Load Project\" : \"Project Manager\"}\n        onDismiss={this.dismiss}\n      >\n        {projects.length > 0 && (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <tr>\n                  <ColumnHead>ID</ColumnHead>\n                  <ColumnHead>Name</ColumnHead>\n                  <ColumnHead>Rooms</ColumnHead>\n                  <ColumnHead>Last update</ColumnHead>\n                </tr>\n              </TableHead>\n              <tbody>\n                {projects.map(p => (\n                  <TableRow key={p.id} onClick={() => this.selectProject(p)}>\n                    <ColumnData>{p.id}</ColumnData>\n                    <ColumnData>{p.name}</ColumnData>\n                    <ColumnData>{p.rooms.length}</ColumnData>\n                    <ColumnData>{p.savedAt.toLocaleString()}</ColumnData>\n                  </TableRow>\n                ))}\n              </tbody>\n            </Table>\n          </TableContainer>\n        )}\n        {!projects.length && <p>You don't have any saved projects yet</p>}\n        <ActionGroup>\n          <Action onClick={this.props.onNewProject}>New project</Action>\n          <Action onClick={this.dismiss}>Cancel</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Leon Erath\n * @author Daniel Salomon\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport DistanceModel from \"../audio/DistanceModel\";\nimport Project from \"../project/Project\";\nimport { Group, Select, CustomInput, BoldLabel, Input } from \"./styled\";\nimport Modal, { Action, ActionGroup } from \"./Modal\";\nimport AudioLibraryModal from \"./AudioLibraryModal\";\nimport { AudioEntry } from \"./types\";\n\nconst InnerContainer = styled.div`\n  overflow: auto;\n  max-height: 400px;\n  /* Add some space between content and scrollbar */\n  padding: 0 10px;\n  margin: 0 -10px;\n`;\n\nenum AudioSelectionTarget {\n  Footstep,\n  Collision,\n  InteractAvail\n}\n\ninterface Props {\n  project: Project;\n  onDismiss(): void;\n}\n\ninterface State {\n  distanceModel: DistanceModel;\n  projectName?: string;\n  footstepAudio?: AudioEntry;\n  collisionAudio?: AudioEntry;\n  interactAvailAudio?: AudioEntry;\n  audioSelectionTarget?: AudioSelectionTarget;\n  ambisonicsOrder: number;\n  rollofModel: string;\n  panningModel: PanningModelType;\n}\n\nexport default class SettingsModal extends React.Component<Props, State> {\n  state: State = {\n    distanceModel: DistanceModel.Linear,\n    ambisonicsOrder: 1,\n    rollofModel: \"logarithmic\",\n    panningModel: \"equalpower\"\n  };\n\n  componentDidMount(): void {\n    this.onProjectChanged();\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.project !== this.props.project) {\n      this.onProjectChanged();\n    }\n  }\n\n  onProjectChanged(): void {\n    const { project } = this.props;\n    this.setState({\n      panningModel: project.panningModel,\n      rollofModel: project.rollofModel,\n      distanceModel: project.distanceModel,\n      ambisonicsOrder: project.ambisonicsOrder,\n      projectName: project.id != null ? project.name : undefined, // Only show the name field if the project has been saved before\n      footstepAudio:\n        project.footstepAudioId != null && project.footstepAudioFile\n          ? {\n              ...project.footstepAudioFile,\n              id: project.footstepAudioId\n            }\n          : undefined,\n      collisionAudio:\n        project.collisionAudioId != null && project.collisionAudioFile\n          ? {\n              ...project.collisionAudioFile,\n              id: project.collisionAudioId\n            }\n          : undefined,\n      interactAvailAudio:\n        project.interactAvailAudioId != null && project.interactAvailAudioFile\n          ? {\n              ...project.interactAvailAudioFile,\n              id: project.interactAvailAudioId\n            }\n          : undefined\n    });\n  }\n\n  onProjectNameChanged: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const name = e.currentTarget.value;\n    if (name) {\n      // Ensure that the project's name is not set to an empty string\n      this.props.project.name = name;\n    }\n    this.setState({ projectName: name });\n  };\n\n  hideAudioSelection = () => {\n    this.setState({ audioSelectionTarget: undefined });\n  };\n\n  selectAudio = (entry: AudioEntry) => {\n    const { project } = this.props;\n\n    switch (this.state.audioSelectionTarget) {\n      case AudioSelectionTarget.Footstep:\n        project.setFootstepAudio(entry.id);\n        this.setState({ footstepAudio: entry });\n        break;\n      case AudioSelectionTarget.Collision:\n        project.setCollisionAudio(entry.id);\n        this.setState({ collisionAudio: entry });\n        break;\n      case AudioSelectionTarget.InteractAvail:\n        project.setInteractAvailAudio(entry.id);\n        this.setState({ interactAvailAudio: entry });\n        break;\n    }\n\n    this.hideAudioSelection();\n  };\n\n  selectAmbisonicsOrder = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { project } = this.props;\n    const selectedOrder = parseInt(e.currentTarget.value) as number;\n    project.selectAmbisonicsOrder(selectedOrder);\n    this.setState({ ambisonicsOrder: selectedOrder });\n  };\n\n  selectDistanceModel = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { project } = this.props;\n    const distanceModel = e.currentTarget.value as DistanceModel;\n    project.selectDistanceModel(distanceModel);\n    this.setState({ distanceModel: distanceModel });\n  };\n\n  selectRollofModel = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { project } = this.props;\n    const rollofModel = e.currentTarget.value;\n    project.selectRollofModel(rollofModel);\n    this.setState({ rollofModel: rollofModel });\n  };\n\n  selectPanningModel = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { project } = this.props;\n    const panningModel = e.currentTarget.value as PanningModelType;\n    project.selectPanningModel(panningModel);\n    this.setState({ panningModel: panningModel });\n  };\n\n  render(): React.ReactNode {\n    const { project, onDismiss } = this.props;\n    const {\n      projectName,\n      footstepAudio,\n      collisionAudio,\n      interactAvailAudio,\n      audioSelectionTarget\n    } = this.state;\n\n    if (audioSelectionTarget != null) {\n      return (\n        <AudioLibraryModal\n          audioLibrary={project.audioLibrary}\n          onDismiss={this.hideAudioSelection}\n          onSelect={this.selectAudio}\n        />\n      );\n    }\n\n    return (\n      <Modal onDismiss={onDismiss} title=\"Settings\">\n        <InnerContainer>\n          <Group>\n            <BoldLabel>General</BoldLabel>\n            {projectName != null && (\n              <Group>\n                <label>Project Name</label>\n                <Input\n                  type=\"text\"\n                  value={projectName}\n                  onChange={this.onProjectNameChanged}\n                />\n              </Group>\n            )}\n            <Group>\n              <label>Footstep Sound</label>\n              <CustomInput\n                onClick={() =>\n                  this.setState({\n                    audioSelectionTarget: AudioSelectionTarget.Footstep\n                  })\n                }\n              >\n                {footstepAudio\n                  ? `${footstepAudio.name} (${Math.ceil(\n                      footstepAudio.data.byteLength / 1024\n                    )} KiB)`\n                  : \"No audio selected\"}\n              </CustomInput>\n            </Group>\n            <Group>\n              <label>Collision Sound</label>\n              <CustomInput\n                onClick={() =>\n                  this.setState({\n                    audioSelectionTarget: AudioSelectionTarget.Collision\n                  })\n                }\n              >\n                {collisionAudio\n                  ? `${collisionAudio.name} (${Math.ceil(\n                      collisionAudio.data.byteLength / 1024\n                    )} KiB)`\n                  : \"No audio selected\"}\n              </CustomInput>\n            </Group>\n            <Group>\n              <label>Interaction Available Sound</label>\n              <CustomInput\n                onClick={() =>\n                  this.setState({\n                    audioSelectionTarget: AudioSelectionTarget.InteractAvail\n                  })\n                }\n              >\n                {interactAvailAudio\n                  ? `${interactAvailAudio.name} (${Math.ceil(\n                      interactAvailAudio.data.byteLength / 1024\n                    )} KiB)`\n                  : \"No audio selected\"}\n              </CustomInput>\n            </Group>\n          </Group>\n          <Group>\n            <BoldLabel>Web Audio API</BoldLabel>\n            <Group>\n              <label>Panning Model</label>\n              <Select\n                value={this.state.panningModel}\n                onChange={this.selectPanningModel}\n              >\n                <option value=\"equalpower\">Equalpower</option>\n                <option value=\"HRTF\">HRTF</option>\n              </Select>\n            </Group>\n            <Group>\n              <label>Distance Model</label>\n              <Select\n                value={this.state.distanceModel}\n                onChange={this.selectDistanceModel}\n              >\n                <option value={DistanceModel.Inverse}>Inverse</option>\n                <option value={DistanceModel.Linear}>Linear</option>\n                <option value={DistanceModel.Exponential}>Exponential</option>\n              </Select>\n            </Group>\n          </Group>\n          <Group>\n            <BoldLabel>Resonance Audio</BoldLabel>\n            <Group>\n              <label>Ambisonic Order</label>\n              <Select\n                value={this.state.ambisonicsOrder}\n                onChange={this.selectAmbisonicsOrder}\n              >\n                <option value={1}>First-Order Ambisonics</option>\n                <option value={2}>Second-Order Ambisonics</option>\n                <option value={3}>Third-Order Ambisonics</option>\n              </Select>\n            </Group>\n            <Group>\n              <label>Rollof Model</label>\n              <Select\n                value={this.state.rollofModel}\n                onChange={this.selectRollofModel}\n              >\n                <option value=\"logarithmic\">Logarithmic</option>\n                <option value=\"linear\">Linear</option>\n                <option value=\"none\">None</option>\n              </Select>\n            </Group>\n          </Group>\n        </InnerContainer>\n        <ActionGroup>\n          <Action onClick={onDismiss}>Done</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions, RoomMaterials } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport { openZip } from \"../data/import\";\nimport GameObject, {\n  InteractionType,\n  TeleportTarget\n} from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport { ProjectData } from \"../data/schema\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\nimport RuntimeContainer from \"../runtime/RuntimeContainer\";\nimport DistanceModel from \"../audio/DistanceModel\";\nimport CodeBlock from \"../project/CodeBlock\";\nimport SpawnMarker from \"../project/SpawnMarker\";\nimport AudioLibraryModal from \"./AudioLibraryModal\";\nimport MenuBar from \"./MenuBar\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport EditorCanvas from \"./EditorCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport {\n  Container,\n  FocusedLabel,\n  Group,\n  InnerContainer,\n  Main,\n  RoomList,\n  RoomListItem,\n  Sidebar\n} from \"./styled\";\nimport { EditorObject, EditorRoom, AudioEntry, EditorSpawn } from \"./types\";\nimport ProjectManagerModal from \"./ProjectManagerModal\";\nimport SettingsModal from \"./SettingsModal\";\nimport SpawnEditor from \"./SpawnEditor\";\nimport ProjectSaveModal from \"./ProjectSaveModal\";\nimport ProjectLoadedModal from \"./ProjectLoadedModal\";\n\nenum ModalType {\n  AudioLibrary,\n  AudioSelection,\n  ProjectManager,\n  ProjectSelection,\n  ProjectSaver,\n  ProjectLoaded,\n  Settings\n}\n\nenum AudioSelectionTarget {\n  ObjectAudio,\n  InteractionAudio\n}\n\ninterface State {\n  audioImplementation: AudioImplementation;\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedSpawn: EditorSpawn | null;\n  selectedObject: EditorObject | null;\n  modal: ModalType | null;\n  project: Project;\n  runningProject: Project | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project: Project = new Project();\n  projectCanvas = new EditorCanvas(this.project);\n\n  state: State = {\n    audioImplementation: this.project.activeAudioImplementation,\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      uuid: r.uuid,\n      name: r.name,\n      dimensions: r.dimensions,\n      materials: r.materials\n    })),\n    selectedRoomId: 0,\n    selectedSpawn: null,\n    selectedObject: null,\n    modal: null,\n    project: this.project, // Keep a reference to the project in the UI state as well to react to a project change\n    runningProject: null\n  };\n  audioSelectionTarget = AudioSelectionTarget.ObjectAudio;\n  mainRef = React.createRef<HTMLElement>();\n\n  constructor(props: {}) {\n    super(props);\n\n    this.project.events = {\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n  }\n\n  // Menubar functionality\n\n  newProject = () => {\n    this.project.close();\n    this.project = new Project({\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    });\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      audioImplementation: this.project.activeAudioImplementation,\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        uuid: r.uuid,\n        name: r.name,\n        dimensions: r.dimensions,\n        materials: r.materials\n      })),\n      selectedRoomId: 0,\n      selectedSpawn: null,\n      selectedObject: null,\n      project: this.project,\n      modal: null\n    });\n  };\n\n  showProjectSelection = async () => {\n    this.setState({\n      modal: ModalType.ProjectSelection\n    });\n  };\n\n  saveProject = async () => {\n    if (this.project.id == null) {\n      // The project hasn't been saved before\n      this.setState({ modal: ModalType.ProjectSaver });\n    } else {\n      await this.project.save();\n    }\n  };\n\n  importProject = async () => {\n    try {\n      const project = await openZip();\n      this.project.close();\n      this.project = project;\n    } catch (ex) {\n      console.log(\"Opening project zip failed:\", ex);\n      alert(\n        \"The selected project could not be imported, please select a valid project archive.\"\n      );\n      return;\n    }\n\n    this.project.events = {\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      audioImplementation: this.project.activeAudioImplementation,\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        uuid: r.uuid,\n        name: r.name,\n        dimensions: r.dimensions,\n        materials: r.materials\n      })),\n      selectedRoomId: 0,\n      selectedSpawn: null,\n      selectedObject: null,\n      project: this.project,\n      modal: ModalType.ProjectLoaded\n    });\n  };\n\n  exportProject = () => {\n    saveAsZip(this.project);\n  };\n\n  addObject = () => {\n    const object = this.project.activeRoom.addObject();\n    this.project.selectObject(object);\n  };\n\n  deleteObject = () => {\n    if (this.project.activeObject) {\n      this.project.activeRoom.remove(this.project.activeObject);\n      this.project.activeObject.audio.stop();\n      this.project.unselect();\n    }\n  };\n\n  addSpawn = () => {\n    const spawn = this.project.activeRoom.addSpawn();\n    this.project.selectSpawn(spawn);\n  };\n\n  deleteSpawn = () => {\n    const { spawns } = this.project.activeRoom;\n    // Ensure that at least one spawn per room exists, as it is used\n    // as a fallback when a requested spawn does not exist.\n    if (this.project.activeSpawn && spawns.length > 1) {\n      spawns.splice(spawns.indexOf(this.project.activeSpawn));\n      this.project.activeRoom.remove(this.project.activeSpawn);\n      this.project.activeSpawn = null;\n      this.project.unselect();\n    }\n  };\n\n  addRoom = () => {\n    const room = this.project.addRoom();\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          uuid: room.uuid,\n          name: room.name,\n          dimensions: room.dimensions,\n          materials: room.materials\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  deleteRoom = () => {\n    // Ensure the first room cannot be deleted\n    if (this.state.selectedRoomId > 0) {\n      this.project.rooms.splice(this.state.selectedRoomId, 1);\n      this.setState(s => ({\n        rooms: [\n          ...s.rooms.slice(0, s.selectedRoomId),\n          ...s.rooms.slice(s.selectedRoomId + 1)\n        ],\n        selectedRoomId: 0\n      }));\n    }\n  };\n\n  showAudioLibrary = () => {\n    this.setState({ modal: ModalType.AudioLibrary });\n  };\n\n  selectDistanceModel = (distanceModel: DistanceModel) => {\n    this.project.selectDistanceModel(distanceModel);\n  };\n\n  showProjectManager = () => {\n    this.setState({ modal: ModalType.ProjectManager });\n  };\n\n  selectAudioImplementation = (audioImplementation: AudioImplementation) => {\n    this.project.selectAudioImplementation(audioImplementation);\n    this.setState({ audioImplementation });\n  };\n\n  runProject = () => {\n    // Detach the project canvas to avoid listening to any new gamepad input.\n    this.projectCanvas.detach();\n    // Create a \"new\" project so any changes made during runtime are not persisted and\n    // copy the project data to it. We also pass along the audio library so it\n    // is shared between the editor project and the runtime. This is necessary so\n    // the runtime can access the audio of unsaved projects.\n    const runningProject = new Project().fromData(\n      this.project.toData(),\n      this.project.id,\n      this.project.audioLibrary\n    );\n    // The audio implementation selection is not included in the project data\n    // and has to be set separately.\n    runningProject.selectAudioImplementation(\n      this.project.activeAudioImplementation\n    );\n    // Only suspend the editor project instead of closing it.\n    // This way, we can safely return from the runtime to the editor and resume the\n    // editor project.\n    this.project.suspend();\n    // Finally, update the UI state so React attaches the runtime container component\n    // instead of the editor's components to the DOM.\n    this.setState({ runningProject });\n  };\n\n  showSettings = () => {\n    this.setState({ modal: ModalType.Settings });\n  };\n\n  // Room specific editor functionality\n\n  selectRoom(id: number): void {\n    this.project.selectRoom(this.project.rooms[id]);\n    this.setState({ selectedRoomId: id });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomMaterials = (materials: RoomMaterials) => {\n    this.project.activeRoom.materials = materials;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          materials\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  // Spawn editor functionality\n\n  updateSpawnName = (name: string) => {\n    if (this.project.activeSpawn) {\n      this.project.activeSpawn.name = name;\n    }\n    this.setState(({ selectedSpawn }) => ({\n      selectedSpawn: selectedSpawn && {\n        ...selectedSpawn,\n        name\n      }\n    }));\n  };\n\n  updateSpawnPosition = (x: number, z: number) => {\n    if (this.project.activeSpawn) {\n      this.project.activeSpawn.position.x = x;\n      this.project.activeSpawn.position.z = z;\n    }\n    this.setState(({ selectedSpawn }) => ({\n      selectedSpawn: selectedSpawn && {\n        ...selectedSpawn,\n        position: new Vector3(x, 0, z)\n      }\n    }));\n  };\n\n  updateSpawnRotation = (y: number) => {\n    if (this.project.activeSpawn) {\n      this.project.activeSpawn.rotation.y = y;\n    }\n    this.setState(({ selectedSpawn }) => ({\n      selectedSpawn: selectedSpawn && {\n        ...selectedSpawn,\n        rotation: y\n      }\n    }));\n  };\n\n  // Object editor functionality\n\n  updateObjectName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateObjectScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateObjectPosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateObjectRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateObjectInteractionType = (interactionType: InteractionType) => {\n    const defaultTarget: TeleportTarget = {\n      roomId: this.project.rooms[0].uuid,\n      spawnId: \"\"\n    };\n    if (this.project.activeObject) {\n      this.project.activeObject.interactionType = interactionType;\n      this.project.activeObject.teleportTarget =\n        this.project.activeObject.teleportTarget || defaultTarget;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        interactionType,\n        teleportTarget: selectedObject.teleportTarget || defaultTarget\n      }\n    }));\n  };\n\n  updateObjectCodeBlockSource = (codeBlockSource: string) => {\n    if (this.project.activeObject) {\n      if (this.project.activeObject.codeBlock) {\n        this.project.activeObject.codeBlock.update(codeBlockSource);\n      } else {\n        this.project.activeObject.codeBlock = new CodeBlock(codeBlockSource);\n      }\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        codeBlockSource\n      }\n    }));\n  };\n\n  updateObjectTeleportTarget = (teleportTarget: TeleportTarget) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.teleportTarget = teleportTarget;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        teleportTarget\n      }\n    }));\n  };\n\n  showAudioSelection = () => {\n    this.audioSelectionTarget = AudioSelectionTarget.ObjectAudio;\n    this.setState({\n      modal: ModalType.AudioSelection\n    });\n  };\n\n  showInteractionAudioSelection = () => {\n    this.audioSelectionTarget = AudioSelectionTarget.InteractionAudio;\n    this.setState({\n      modal: ModalType.AudioSelection\n    });\n  };\n\n  // Modal events\n\n  dismissModal = () => {\n    this.setState({ modal: null });\n  };\n\n  selectAudio = (audio: AudioEntry) => {\n    if (this.project.activeObject) {\n      if (this.audioSelectionTarget === AudioSelectionTarget.InteractionAudio) {\n        this.project.activeObject.interactionAudioId = audio.id;\n        this.setState(({ selectedObject }) => ({\n          selectedObject: selectedObject && {\n            ...selectedObject,\n            interactionAudio: audio\n          },\n          modal: null\n        }));\n      } else {\n        this.project.activeRoom.audioScene.resume();\n        this.project.activeObject.playAudio(audio.id, true);\n        this.setState(({ selectedObject }) => ({\n          selectedObject: selectedObject && {\n            ...selectedObject,\n            audio\n          },\n          modal: null\n        }));\n      }\n    }\n  };\n\n  loadProject = (data: ProjectData) => {\n    try {\n      const project = new Project().fromData(data, data.id);\n      this.project.close();\n      this.project = project;\n    } catch (ex) {\n      console.log(\"Loading project failed:\", ex);\n      alert(\"The selected project could not be loaded\");\n    }\n    this.project.events = {\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      audioImplementation: this.project.activeAudioImplementation,\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        uuid: r.uuid,\n        name: r.name,\n        dimensions: r.dimensions,\n        materials: r.materials\n      })),\n      selectedRoomId: 0,\n      selectedSpawn: null,\n      selectedObject: null,\n      project: this.project,\n      modal: ModalType.ProjectLoaded\n    });\n  };\n\n  saveNewProject = async (name: string) => {\n    this.project.name = name;\n    await this.project.save();\n    this.dismissModal();\n  };\n\n  resumeProject = () => {\n    this.project.resume();\n    this.dismissModal();\n  };\n\n  // Project canvas events\n\n  onSelectSpawn = (s: SpawnMarker | null) => {\n    this.setState({\n      selectedSpawn: s && {\n        id: s.id,\n        uuid: s.uuid,\n        name: s.name,\n        position: s.position,\n        rotation: s.rotation.y\n      },\n      selectedObject: null\n    });\n  };\n\n  onSelectObject = async (o: GameObject | null) => {\n    const interactionAudio =\n      o && o.interactionAudioId != null\n        ? await this.project.audioLibrary.get(o.interactionAudioId)\n        : undefined;\n    this.setState({\n      selectedSpawn: null,\n      selectedObject: o && {\n        id: o.id,\n        uuid: o.uuid,\n        name: o.name,\n        position: o.position,\n        scale: o.scale,\n        rotation: o.rotation,\n        audio:\n          o.audioFile && o.audioId != null\n            ? {\n                ...o.audioFile,\n                id: o.audioId\n              }\n            : undefined,\n        interactionType: o.interactionType,\n        codeBlockSource: o.codeBlock && o.codeBlock.source,\n        teleportTarget: o.teleportTarget,\n        interactionAudio:\n          interactionAudio && o.interactionAudioId != null\n            ? {\n                ...interactionAudio,\n                id: o.interactionAudioId\n              }\n            : undefined\n      }\n    });\n  };\n\n  onTranslateObject = (p: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: p\n      }\n    }));\n  };\n\n  onScaleObject = (s: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        size: {\n          width: s.x,\n          height: s.y,\n          depth: s.z\n        }\n      }\n    }));\n  };\n\n  // Runtime events\n\n  exitRuntime = () => {\n    if (!this.state.runningProject) {\n      return;\n    }\n    const { activeAudioImplementation } = this.state.runningProject;\n    // Close the running project. As we are not going to reuse it, there's no sense\n    // in keeping the memory allocated to its audio contexts around.\n    this.state.runningProject.close();\n    // Ensure the audio implementation in the editor matches the one selected in the runtime\n    this.project.selectAudioImplementation(activeAudioImplementation);\n    // Finally, update the UI state so React unmounts the runtime container and attaches\n    // the editor's components again.\n    this.setState({\n      runningProject: null,\n      audioImplementation: activeAudioImplementation\n    });\n  };\n\n  // React component lifecycle methods\n\n  attachCanvas = (target: HTMLElement | null) => {\n    if (target != null) {\n      this.projectCanvas.attach(target);\n      this.projectCanvas.focus();\n    } else {\n      this.projectCanvas.detach();\n    }\n  };\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  render(): React.ReactNode {\n    const { modal, runningProject, audioImplementation } = this.state;\n    const { selectedSpawn: s, selectedObject: o } = this.state;\n\n    if (runningProject) {\n      return (\n        <RuntimeContainer project={runningProject} onExit={this.exitRuntime} />\n      );\n    }\n\n    return (\n      <Container>\n        {(modal === ModalType.AudioLibrary ||\n          modal === ModalType.AudioSelection) && (\n          <AudioLibraryModal\n            audioLibrary={this.project.audioLibrary}\n            onDismiss={this.dismissModal}\n            onSelect={\n              modal === ModalType.AudioSelection ? this.selectAudio : undefined\n            }\n          />\n        )}\n        {(modal === ModalType.ProjectManager ||\n          modal === ModalType.ProjectSelection) && (\n          <ProjectManagerModal\n            onNewProject={this.newProject}\n            onDismiss={this.dismissModal}\n            onSelectProject={\n              modal === ModalType.ProjectSelection\n                ? this.loadProject\n                : undefined\n            }\n          />\n        )}\n        {modal === ModalType.ProjectSaver && (\n          <ProjectSaveModal\n            onSave={this.saveNewProject}\n            onDismiss={this.dismissModal}\n          />\n        )}\n        {modal === ModalType.ProjectLoaded && (\n          <ProjectLoadedModal onConfirm={this.resumeProject} />\n        )}\n        {modal === ModalType.Settings && (\n          <SettingsModal project={this.project} onDismiss={this.dismissModal} />\n        )}\n        <MenuBar\n          audioImplementation={audioImplementation}\n          onAudioChange={this.selectAudioImplementation}\n          onNewProject={this.newProject}\n          onLoadProject={this.showProjectSelection}\n          onSaveProject={this.saveProject}\n          onImportProject={this.importProject}\n          onExportProject={this.exportProject}\n          onShowSettings={this.showSettings}\n          onAddObject={this.addObject}\n          onDeleteObject={this.deleteObject}\n          onAddSpawn={this.addSpawn}\n          onDeleteSpawn={this.deleteSpawn}\n          onAddRoom={this.addRoom}\n          onDeleteRoom={this.deleteRoom}\n          onShowAudioLibrary={this.showAudioLibrary}\n          onShowProjectManager={this.showProjectManager}\n          onRunProject={this.runProject}\n        />\n        <InnerContainer>\n          <Sidebar>\n            <Group>\n              <label>Rooms</label>\n              <RoomList>\n                {this.state.rooms.map((r, i) => (\n                  <RoomListItem\n                    key={r.id}\n                    onClick={() => this.selectRoom(i)}\n                    active={i === this.state.selectedRoomId}\n                  >\n                    {r.name || \"Anonymous Room\"}\n                  </RoomListItem>\n                ))}\n              </RoomList>\n            </Group>\n            {!(s || o) && (\n              <RoomEditor\n                room={this.state.rooms[this.state.selectedRoomId]}\n                onUpdateName={this.updateRoomName}\n                onUpdateDimensions={this.updateRoomDimensions}\n                onUpdateMaterials={this.updateRoomMaterials}\n              />\n            )}\n            {s && (\n              <SpawnEditor\n                spawn={s}\n                onUpdateName={this.updateSpawnName}\n                onUpdatePosition={this.updateSpawnPosition}\n                onUpdateRotation={this.updateSpawnRotation}\n              />\n            )}\n            {o && (\n              <ObjectEditor\n                object={o}\n                rooms={this.project.rooms}\n                onUpdateName={this.updateObjectName}\n                onUpdatePosition={this.updateObjectPosition}\n                onUpdateRotation={this.updateObjectRotation}\n                onUpdateScale={this.updateObjectScale}\n                onUpdateInteractionType={this.updateObjectInteractionType}\n                onUpdateCodeBlockSource={this.updateObjectCodeBlockSource}\n                onUpdateTeleportTarget={this.updateObjectTeleportTarget}\n                onShowAudioSelection={this.showAudioSelection}\n                onShowInteractionAudioSelection={\n                  this.showInteractionAudioSelection\n                }\n              />\n            )}\n          </Sidebar>\n          <Main ref={this.attachCanvas}>\n            <FocusedLabel>Focused</FocusedLabel>\n          </Main>\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { selectOnFocus } from \"../utils/react\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorSpawn } from \"./types\";\n\ninterface Props {\n  spawn: EditorSpawn;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, z: number): void;\n  onUpdateRotation(y: number): void;\n}\n\n// UI component for editing properties specific to spawns inside a room\nexport default class SpawnEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const {\n      spawn: s,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Spawn ID</label>\n          <Input type=\"text\" readOnly value={s.uuid} onFocus={selectOnFocus} />\n        </Group>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            placeholder=\"New spawn\"\n            value={s.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={s.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  s.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={s.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  s.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (y)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(s.rotation).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(degToRad(e.currentTarget.valueAsNumber % 360))\n              }\n            />\n          </InputGroup>\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\nimport { Input, Group } from \"./styled\";\n\ninterface Props {\n  onSave(name: string): void;\n  onDismiss(): void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class ProjectSaveModal extends React.Component<Props, State> {\n  state: State = { name: \"\" };\n\n  onNameChange: React.ChangeEventHandler<HTMLInputElement> = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  submit: React.FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault();\n\n    const { name } = this.state;\n    if (name) {\n      this.props.onSave(name);\n    }\n  };\n\n  render(): React.ReactNode {\n    const { onDismiss } = this.props;\n    const { name } = this.state;\n\n    return (\n      <Modal title=\"Save Project\" onDismiss={onDismiss}>\n        <form onSubmit={this.submit}>\n          <Group>\n            <Input\n              autoFocus\n              required\n              type=\"text\"\n              placeholder=\"Project Name\"\n              value={name}\n              onChange={this.onNameChange}\n            />\n          </Group>\n          <ActionGroup>\n            <Action type=\"submit\" disabled={!name}>\n              Save\n            </Action>\n            <Action type=\"button\" onClick={onDismiss}>\n              Cancel\n            </Action>\n          </ActionGroup>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\n\ninterface Props {\n  onConfirm(): void;\n}\n\n// Many browsers block automatic playback of audio nowadays.\n// In particular, this means that any audio playback that is started\n// outside of an user interaction event handler will be stopped.\n// As the functions for loading or importing projects are asynchronous,\n// they are considered to be running outside of the user interaction event handler.\n// Therefore, we have to display this dialog after a project has been loaded and\n// resume the loaded project's audio when the user clicks on the \"OK\" buttion in this\n// dialog.\nexport default class ProjectLoadedModal extends React.Component<Props> {\n  render(): React.ReactNode {\n    return (\n      <Modal title=\"Project Loaded\">\n        <p>The project has been loaded successfully.</p>\n        <ActionGroup>\n          <Action onClick={this.props.onConfirm}>OK</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Safari does not yet support the Web Audio API without a prefix\nif (!window.AudioContext && window.webkitAudioContext) {\n  window.AudioContext = window.webkitAudioContext;\n}\n\n// Check if we're running as a desktop app through NW.js\nif (window.nw) {\n  const nw = window.nw;\n  const w = nw.Window.get();\n  // Maximize the window on start\n  w.maximize();\n  w.focus();\n  // Ensure external links open in the OS' browser instead of a\n  // new window in the app.\n  w.on(\"new-win-policy\", (frame, url, policy) => {\n    if (policy && url) {\n      policy.ignore();\n      nw.Shell.openExternal(url);\n    }\n  });\n  // Ask the user for confirmation when closing the window,\n  // to ensure there are no unsaved changes.\n  w.on(\"close\", () => {\n    if (\n      confirm(\"Do you really want to quit? There might be unsaved changes.\")\n    ) {\n      // Finally, force close to avoid this event being triggered again\n      w.close(true);\n    }\n  });\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  // If we are running in the production environment, make sure the user\n  // does not close the editor unintentionally.\n  window.addEventListener(\"beforeunload\", e => e.preventDefault());\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}