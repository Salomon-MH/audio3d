{"version":3,"sources":["3d/ControlsScene.ts","input/GamepadListener.ts","input/KeyboardListener.ts","3d/SceneCanvas.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["ObjectDragDirection","GamepadListener","onGamepadConnected","e","console","log","gamepad","onGamepadDisconnected","window","addEventListener","this","removeEventListener","index","gamepads","navigator","getGamepads","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","mapping","axis","axes","Math","abs","v1","buttons","err","return","KeyboardListener","target","_this","Object","classCallCheck","keysPressed","Set","lastKeyUp","Map","reset","clear","onKeyDown","preventDefault","timeStamp","get","key","add","onKeyUp","delete","set","onClick","button","shiftKey","document","has","MouseButton","ControlsScene","options","possibleConstructorReturn","getPrototypeOf","call","activeMesh","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","BoxGeometry","Mesh","MeshBasicMaterial","objectSpread","color","position","rotation","y","PI","userData","direction","AxisX","x","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","children","intersection","o","object","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","c","p","altPlane","z","distanceToPoint","origin","intersectPlane","scale","min","max","onScale","onTranslate","Scene","directions","up","down","left","right","forwards","backwards","SceneCanvas","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","scene","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","grid","GridHelper","cubeGeometry","cubeMaterial","MeshLambertMaterial","smallCube","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","ambientLight","AmbientLight","light","PointLight","lookAt","cube","name","geometry","material","translateX","outlineMaterial","BackSide","multiplyScalar","toJSON","listen","appendChild","focus","cancelAnimationFrame","removeChild","stop","selectMesh","onSelect","data","previousAudio","getObjectByName","remove","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","getAxis","isMesh","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","Editor","state","selectedObject","mainRef","React","createRef","sceneCanvas","setState","id","width","height","depth","s","_ref2","onAddCubeClick","addCube","onAudioFileSelected","files","currentTarget","file","item","reader","FileReader","onload","result","addAudioToActiveMesh","error","readAsArrayBuffer","current","attach","detach","_ref3","_ref4","_ref5","_ref6","Euler","_this2","react_default","a","createElement","type","onChange","updateName","step","updatePosition","valueAsNumber","updateRotation","updateSize","accept","ref","Component","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bedf0200.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\nexport interface ControlsOptions {\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class ControlsScene extends Scene {\n  activeMesh: Mesh | null = null;\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private options: ControlsOptions) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.activeMesh) {\n      return null;\n    }\n\n    this.position.copy(this.activeMesh.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset.copy(intersection.point).sub(this.activeMesh.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.activeMesh) {\n      return;\n    }\n\n    const c = this.activeMesh.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.activeMesh.scale.x = Math.min(\n            Math.max(\n              this.activeMesh.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.activeMesh.scale.y = Math.min(\n            Math.max(\n              this.activeMesh.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.activeMesh.scale.z = Math.min(\n            Math.max(\n              this.activeMesh.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.options.onScale(this.activeMesh.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.activeMesh.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.activeMesh.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.activeMesh.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.activeMesh.position.copy(point);\n      }\n\n      this.options.onTranslate(this.activeMesh.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AmbientLight,\n  AudioListener,\n  AudioLoader,\n  BackSide,\n  BoxGeometry,\n  Color,\n  GridHelper,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  PerspectiveCamera,\n  PointLight,\n  PositionalAudio,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport ControlsScene, { ControlsOptions } from \"./ControlsScene\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\ninterface Options extends ControlsOptions {\n  onSelect(object: Mesh | null): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  scene = new Scene();\n  controls = new ControlsScene({\n    onTranslate: this.options.onTranslate,\n    onScale: this.options.onScale\n  });\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  grid = new GridHelper(10, 10, 0xffffff, 0xffffff);\n  cubeGeometry = new BoxGeometry(1, 1, 1);\n  cubeMaterial = new MeshLambertMaterial();\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private options: Options) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.scene.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.scene.add(light);\n    // const hemiLight = new HemisphereLight(0xffffff, 0x000000, 0.6);\n    // this.scene.add(hemiLight);\n\n    const cube = new Mesh(this.cubeGeometry, this.cubeMaterial);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.smallCube.geometry = this.cubeGeometry;\n    this.smallCube.material = this.cubeMaterial;\n    this.smallCube.translateX(2);\n    this.smallCube.name = \"Small cube\";\n    this.smallCube.scale.set(0.25, 0.25, 0.25);\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(cube.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  addCube(): void {\n    const cube = new Mesh(this.cubeGeometry, this.cubeMaterial);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.scene.add(cube);\n    this.selectMesh(cube);\n  }\n\n  selectMesh(o: Mesh): void {\n    this.controls.activeMesh = o;\n    this.outlineMesh.geometry = this.controls.activeMesh.geometry;\n    this.controls.activeMesh.add(this.outlineMesh);\n\n    this.options.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.controls.activeMesh) {\n      return;\n    }\n\n    const previousAudio = this.controls.activeMesh.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.controls.activeMesh.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.controls.activeMesh.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.controls.activeMesh) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      // this.controls.position.copy(this.controls.activeMesh.position);\n      this.controls.position.copy(this.controls.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    // this.smallCube.rotation.x += 0.01;\n    // this.smallCube.rotation.y += 0.01;\n    // this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    const axes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (axes.x) {\n      this.camera.translateOnAxis(new Vector3(1, 0, 0), 2 * dt * axes.x);\n    }\n    if (axes.y) {\n      this.camera.translateOnAxis(new Vector3(0, 0, 1), 2 * dt * axes.y);\n    }\n    if (axes.b) {\n      this.camera.translateOnAxis(new Vector3(0, 1, 0), 2 * dt * axes.b);\n    }\n    if (axes.rX) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt * axes.rX);\n    }\n    if (axes.rY) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt * axes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    if (this.controls.activeMesh) {\n      this.controls.activeMesh.remove(this.outlineMesh);\n      this.controls.activeMesh = null;\n    }\n\n    const intersections = raycaster.intersectObjects(this.scene.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.selectMesh(o);\n        return true;\n      }\n    }\n\n    this.options.onSelect(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { BoxGeometry, Euler, Vector3 } from \"three\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nconst Group = styled.div`\n  margin: 20px 0;\n`;\n\nconst Input = styled.input`\n  display: block;\n  appearance: none;\n  background: #2c3e50;\n  border-radius: 3px;\n  border: 2px solid #2c3e50;\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\ninterface WorldObject {\n  id: number;\n  name: string;\n  position: Vector3;\n  rotation: Euler;\n  size: {\n    width: number;\n    height: number;\n    depth: number;\n  };\n}\n\ninterface State {\n  selectedObject: WorldObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  state: State = { selectedObject: null };\n  mainRef = React.createRef<HTMLElement>();\n  sceneCanvas = new SceneCanvas({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            rotation: o.rotation,\n            size: {\n              width: o.scale.x,\n              height: o.scale.y,\n              depth: o.scale.z\n            }\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.sceneCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  updateName(name: string): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  }\n\n  updateSize(width: number, height: number, depth: number): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.scale.set(width, height, depth);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        size: { width, height, depth }\n      }\n    }));\n  }\n\n  updatePosition(x: number, y: number, z: number): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  }\n\n  updateRotation(x: number, y: number, z: number): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  }\n\n  onAddCubeClick = () => {\n    this.sceneCanvas.addCube();\n  };\n\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      const data = reader.result as ArrayBuffer;\n      this.sceneCanvas.addAudioToActiveMesh(data);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          <div>\n            <button onClick={this.onAddCubeClick}>Add cube</button>\n          </div>\n          {o && (\n            <div>\n              Selected object with id {o.id}\n              <Group>\n                <label>Name</label>\n                <Input\n                  type=\"text\"\n                  value={o.name}\n                  onChange={e => this.updateName(e.currentTarget.value)}\n                />\n              </Group>\n              <Group>\n                <label>Position (x, y, z)</label>\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  value={o.position.x}\n                  onChange={e =>\n                    this.updatePosition(\n                      e.currentTarget.valueAsNumber,\n                      o.position.y,\n                      o.position.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  value={o.position.y}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      e.currentTarget.valueAsNumber,\n                      o.position.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  value={o.position.z}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      o.position.y,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </Group>\n              <Group>\n                <label>Euler-Rotation (x, y, z)</label>\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  value={o.rotation.x}\n                  onChange={e =>\n                    this.updateRotation(\n                      e.currentTarget.valueAsNumber,\n                      o.rotation.y,\n                      o.rotation.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  value={o.rotation.y}\n                  onChange={e =>\n                    this.updateRotation(\n                      o.rotation.x,\n                      e.currentTarget.valueAsNumber,\n                      o.rotation.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  value={o.rotation.z}\n                  onChange={e =>\n                    this.updateRotation(\n                      o.rotation.x,\n                      o.rotation.y,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </Group>\n              <Group>\n                <label>Size (width, height, depth)</label>\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  min={0.1}\n                  max={10}\n                  value={o.size.width}\n                  onChange={e =>\n                    this.updateSize(\n                      e.currentTarget.valueAsNumber,\n                      o.size.height,\n                      o.size.depth\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  min={0.1}\n                  max={10}\n                  value={o.size.height}\n                  onChange={e =>\n                    this.updateSize(\n                      o.size.width,\n                      e.currentTarget.valueAsNumber,\n                      o.size.depth\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step=\"any\"\n                  min={0.1}\n                  max={10}\n                  value={o.size.depth}\n                  onChange={e =>\n                    this.updateSize(\n                      o.size.width,\n                      o.size.height,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </Group>\n              <Group>\n                <label>Audio source (file)</label>\n                <Input\n                  type=\"file\"\n                  accept=\"audio/*\"\n                  onChange={this.onAudioFileSelected}\n                />\n              </Group>\n            </div>\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}