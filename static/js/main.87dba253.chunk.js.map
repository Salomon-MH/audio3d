{"version":3,"sources":["3d/SceneCanvas.tsx","3d/KeyboardListener.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["MouseButton","KeyboardListener","_this","this","target","arguments","length","undefined","document","Object","classCallCheck","keysPressed","Set","reset","clear","onKeyDown","e","preventDefault","add","key","onKeyUp","delete","onClick","button","shiftKey","addEventListener","removeEventListener","has","directions","up","Vector3","down","left","right","forwards","backwards","f","time","orbitalPeriod","radius","Math","sin","PI","cos","SceneCanvas","options","rafHandle","previousTimestamp","activeMesh","scene","Scene","controlsScene","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","grid","GridHelper","smallCube","Mesh","outlineMesh","arrows","Group","keys","isDraggingCamera","isDraggingAxis","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","window","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","rotation","x","y","position","copy","isPressed","translateOnAxis","rotateOnWorldAxis","rotateOnAxis","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","raycaster","Raycaster","setFromCamera","checkControlsClick","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","movementY","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","domElement","stopPropagation","arrowX","ArrowHelper","setColor","Color","line","material","linewidth","arrowY","arrowZ","planeGeometry","PlaneGeometry","planeXY","MeshBasicMaterial","color","side","DoubleSide","set","planeXZ","planeYZ","geometry","BoxGeometry","MeshNormalMaterial","cube","z","lookAt","outlineMaterial","BackSide","scale","multiplyScalar","console","log","toJSON","listen","appendChild","cancelAnimationFrame","stop","removeChild","intersections","intersectObjects","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","object","err","return","remove","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","o","isMesh","onSelect","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Editor","state","mainRef","React","createRef","sceneCanvas","setState","selectedObject","attach","current","detach","react_default","a","createElement","uuid","ref","Component","Boolean","location","hostname","match","ReactDOM","Editor_Editor","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87dba253.chunk.js","sourcesContent":["import {\n  ArrowHelper,\n  BackSide,\n  BoxGeometry,\n  Color,\n  DoubleSide,\n  GridHelper,\n  Group,\n  LineBasicMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  PerspectiveCamera,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport KeyboardListener from \"./KeyboardListener\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\ninterface Options {\n  onSelect(object: Mesh): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  activeMesh: Mesh | null = null;\n\n  scene = new Scene();\n  controlsScene = new Scene();\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  grid = new GridHelper(10, 10);\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  arrows = new Group();\n\n  keys = new KeyboardListener();\n  isDraggingCamera = false;\n  isDraggingAxis = false;\n\n  constructor(private options: Options) {\n    this.renderer.autoClear = false;\n    this.canvas = this.renderer.domElement;\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup controls for active mesh\n\n    const arrowX = new ArrowHelper(new Vector3(1, 0, 0));\n    arrowX.setColor(new Color(0xff0000));\n    (arrowX.line.material as LineBasicMaterial).linewidth = 42;\n    const arrowY = new ArrowHelper(new Vector3(0, 1, 0));\n    arrowY.setColor(new Color(0x00ff00));\n    const arrowZ = new ArrowHelper(new Vector3(0, 0, 1));\n    arrowZ.setColor(new Color(0x0000ff));\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n    const planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xffff00, side: DoubleSide })\n    );\n    planeXY.position.set(0.25, 0.25, 0.0);\n    const planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xff00ff, side: DoubleSide })\n    );\n    planeXZ.position.set(0.25, 0.0, 0.25);\n    planeXZ.rotation.x = Math.PI / 2;\n    const planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0x00ffff, side: DoubleSide })\n    );\n    planeYZ.position.set(0.0, 0.25, 0.25);\n    planeYZ.rotation.y = Math.PI / 2;\n\n    this.controlsScene.add(arrowX);\n    this.controlsScene.add(arrowY);\n    this.controlsScene.add(arrowZ);\n\n    this.controlsScene.add(planeXY);\n    this.controlsScene.add(planeXZ);\n    this.controlsScene.add(planeYZ);\n\n    // Setup scene\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    /* const material = new MeshBasicMaterial({\n      color: 0xffffff,\n      wireframe: true\n    }); */\n    const material = new MeshNormalMaterial();\n    const cube = new Mesh(geometry, material);\n    cube.position.y += 0.5;\n\n    this.smallCube.geometry = new BoxGeometry(0.25, 0.25, 0.25);\n    this.smallCube.material = material;\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(cube.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    this.animate(0);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    this.keys.stop();\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n\n    this.smallCube.rotation.x += 0.01;\n    this.smallCube.rotation.y += 0.01;\n    this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.activeMesh) {\n      this.controlsScene.position.copy(this.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controlsScene, this.camera);\n    }\n  };\n\n  checkControlsClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.controlsScene.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o) {\n        this.isDraggingAxis = true;\n        this.canvas.requestPointerLock();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    if (this.activeMesh) {\n      this.activeMesh.remove(this.outlineMesh);\n      this.activeMesh = null;\n    }\n\n    const intersections = raycaster.intersectObjects(this.scene.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.activeMesh = o;\n        this.outlineMesh.geometry = this.activeMesh.geometry;\n        this.activeMesh.add(this.outlineMesh);\n        this.options.onSelect(o);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  onClick = (e: MouseEvent) => {};\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    const size = this.renderer.getSize(new Vector2());\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // console.log(size, x, y);\n\n    const raycaster = new Raycaster();\n    raycaster.setFromCamera({ x, y }, this.camera);\n    if (!this.checkControlsClick(raycaster)) {\n      this.checkSceneClick(raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n    }\n    if (e.button === MouseButton.Primary && this.isDraggingAxis) {\n      this.isDraggingAxis = false;\n    }\n    if (!this.isDraggingCamera && !this.isDraggingAxis) {\n      document.exitPointerLock();\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    }\n    if (this.isDraggingAxis && this.activeMesh) {\n      this.activeMesh.translateOnAxis(\n        new Vector3(e.movementX, 0, e.movementY),\n        1 / 100\n      );\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta);\n  };\n}\n","export default class KeyboardListener {\n  keysPressed = new Set<string>();\n\n  constructor(private target: Document = document) {}\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    this.target.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    this.target.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.add(e.key);\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Mesh } from \"three\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\ninterface State {\n  selectedObject?: Mesh;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  state: State = {};\n  mainRef = React.createRef<HTMLElement>();\n  sceneCanvas = new SceneCanvas({\n    onSelect: o => {\n      this.setState({ selectedObject: o });\n    }\n  });\n\n  componentDidMount(): void {\n    this.sceneCanvas.attach(this.mainRef.current!);\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          {o && <p>Selected object: {o.uuid}</p>}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}