{"version":3,"sources":["3d/ControlsScene.ts","input/GamepadListener.ts","input/KeyboardListener.ts","3d/SceneCanvas.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["ObjectDragDirection","GamepadListener","onGamepadConnected","e","console","log","gamepad","onGamepadDisconnected","window","addEventListener","this","removeEventListener","index","gamepads","navigator","getGamepads","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","mapping","axis","axes","Math","abs","v1","buttons","err","return","KeyboardListener","target","_this","Object","classCallCheck","keysPressed","Set","lastKeyUp","Map","reset","clear","onKeyDown","preventDefault","timeStamp","get","key","add","onKeyUp","delete","set","onClick","button","shiftKey","document","has","MouseButton","ControlsScene","options","possibleConstructorReturn","getPrototypeOf","call","activeMesh","objectDragDirection","dragOffset","Vector3","plane","Plane","axisX","axisY","axisZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","BoxGeometry","Mesh","MeshBasicMaterial","objectSpread","color","position","rotation","y","PI","userData","direction","AxisX","x","AxisY","AxisZ","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","children","intersection","o","object","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","c","p","altPlane","z","distanceToPoint","origin","intersectPlane","onTranslate","Scene","directions","up","down","left","right","forwards","backwards","SceneCanvas","rafHandle","previousTimestamp","scene","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","grid","GridHelper","smallCube","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","ambientLight","AmbientLight","light","PointLight","lookAt","geometry","material","MeshLambertMaterial","cube","name","translateX","outlineMaterial","BackSide","scale","multiplyScalar","toJSON","listener","AudioListener","audio","PositionalAudio","AudioLoader","load","audioBuffer","setBuffer","setLoop","error","listen","appendChild","focus","cancelAnimationFrame","removeChild","stop","isPressed","translateOnAxis","getAxis","remove","isMesh","onSelect","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","Editor","state","selectedObject","mainRef","React","createRef","sceneCanvas","setState","id","current","attach","detach","_ref2","_ref3","_ref4","Euler","_this2","react_default","a","createElement","type","onChange","updateName","currentTarget","step","toFixed","updatePosition","valueAsNumber","updateRotation","ref","Component","Boolean","location","hostname","match","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9dc014b.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  Vector3\n} from \"three\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\nexport interface ControlsOptions {\n  onTranslate(position: Vector3): void;\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class ControlsScene extends Scene {\n  activeMesh: Mesh | null = null;\n  objectDragDirection: ObjectDragDirection | null = null;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private options: ControlsOptions) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.activeMesh) {\n      return null;\n    }\n\n    this.position.copy(this.activeMesh.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset.copy(intersection.point).sub(this.activeMesh.position);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.activeMesh) {\n      return;\n    }\n\n    const c = this.activeMesh.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n    point.sub(this.dragOffset);\n\n    // If we are operating on an axis instead of a plane, ensure only the relevant\n    // coordinate is changed.\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        this.activeMesh.position.x = point.x;\n        break;\n      case ObjectDragDirection.AxisY:\n        this.activeMesh.position.y = point.y;\n        break;\n      case ObjectDragDirection.AxisZ:\n        this.activeMesh.position.z = point.z;\n        break;\n      default:\n        // The selected direction is a plane, so we can just copy the\n        // intersection point.\n        this.activeMesh.position.copy(point);\n    }\n\n    this.options.onTranslate(this.activeMesh.position);\n  }\n}\n","const AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","export default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","import {\n  AmbientLight,\n  AudioListener,\n  AudioLoader,\n  BackSide,\n  BoxGeometry,\n  Color,\n  DirectionalLight,\n  DoubleSide,\n  GridHelper,\n  HemisphereLight,\n  LineBasicMaterial,\n  LineDashedMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  MeshNormalMaterial,\n  MeshPhongMaterial,\n  PerspectiveCamera,\n  PlaneHelper,\n  PointLight,\n  PositionalAudio,\n  Raycaster,\n  Scene,\n  SpotLight,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport ControlsScene, { ControlsOptions } from \"./ControlsScene\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\ninterface Options extends ControlsOptions {\n  onSelect(object: Mesh | null): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  scene = new Scene();\n  controls = new ControlsScene({ onTranslate: this.options.onTranslate });\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  grid = new GridHelper(10, 10, 0xffffff, 0xffffff);\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private options: Options) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.scene.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.scene.add(light);\n    // const hemiLight = new HemisphereLight(0xffffff, 0x000000, 0.6);\n    // this.scene.add(hemiLight);\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    const material = new MeshLambertMaterial();\n    const cube = new Mesh(geometry, material);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.smallCube.geometry = new BoxGeometry(0.25, 0.25, 0.25);\n    this.smallCube.material = material;\n    this.smallCube.translateX(2);\n    this.smallCube.name = \"Small cube\";\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(cube.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n\n    const listener = new AudioListener();\n    const audio = new PositionalAudio(listener);\n    const loader = new AudioLoader();\n    loader.load(\n      \"audio/breakbeat.wav\",\n      (audioBuffer: AudioBuffer) => {\n        audio.setBuffer(audioBuffer);\n        audio.setLoop(true);\n        // audio.play();\n      },\n      () => {\n        /* pass */\n      },\n      (err: Error) => console.error(err)\n    );\n    cube.add(audio);\n    this.camera.add(listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.controls.activeMesh) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      // this.controls.position.copy(this.controls.activeMesh.position);\n      this.controls.position.copy(this.controls.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    // this.smallCube.rotation.x += 0.01;\n    // this.smallCube.rotation.y += 0.01;\n    // this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    const axes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (axes.x) {\n      this.camera.translateOnAxis(new Vector3(1, 0, 0), 2 * dt * axes.x);\n    }\n    if (axes.y) {\n      this.camera.translateOnAxis(new Vector3(0, 0, 1), 2 * dt * axes.y);\n    }\n    if (axes.b) {\n      this.camera.translateOnAxis(new Vector3(0, 1, 0), 2 * dt * axes.b);\n    }\n    if (axes.rX) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt * axes.rX);\n    }\n    if (axes.rY) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt * axes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    if (this.controls.activeMesh) {\n      this.controls.activeMesh.remove(this.outlineMesh);\n      this.controls.activeMesh = null;\n    }\n\n    const intersections = raycaster.intersectObjects(this.scene.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.controls.activeMesh = o;\n        this.outlineMesh.geometry = this.controls.activeMesh.geometry;\n        this.controls.activeMesh.add(this.outlineMesh);\n\n        this.options.onSelect(o);\n        return true;\n      }\n    }\n\n    this.options.onSelect(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Euler, Vector3 } from \"three\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nconst Group = styled.div`\n  margin: 20px 0;\n`;\n\nconst Input = styled.input`\n  display: block;\n  appearance: none;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n  width: 100%;\n  padding: 5px 10px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    border-color: #fff;\n  }\n`;\n\ninterface WorldObject {\n  id: number;\n  name: string;\n  position: Vector3;\n  rotation: Euler;\n}\n\ninterface State {\n  selectedObject: WorldObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  state: State = { selectedObject: null };\n  mainRef = React.createRef<HTMLElement>();\n  sceneCanvas = new SceneCanvas({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    }\n  });\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.sceneCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  updateName(name: string): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  }\n\n  updatePosition(x: number, y: number, z: number): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  }\n\n  updateRotation(x: number, y: number, z: number): void {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  }\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          {o && (\n            <div>\n              Selected object with id {o.id}\n              <Group>\n                <Input\n                  type=\"text\"\n                  value={o.name}\n                  onChange={e => this.updateName(e.currentTarget.value)}\n                />\n              </Group>\n              <Group>\n                <Input\n                  type=\"number\"\n                  step={0.001}\n                  value={o.position.x.toFixed(3)}\n                  onChange={e =>\n                    this.updatePosition(\n                      e.currentTarget.valueAsNumber,\n                      o.position.y,\n                      o.position.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step={0.001}\n                  value={o.position.y.toFixed(3)}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      e.currentTarget.valueAsNumber,\n                      o.position.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step={0.001}\n                  value={o.position.z.toFixed(3)}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      o.position.y,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </Group>\n              <Group>\n                <Input\n                  type=\"number\"\n                  step={0.01}\n                  value={o.rotation.x.toFixed(2)}\n                  onChange={e =>\n                    this.updateRotation(\n                      e.currentTarget.valueAsNumber,\n                      o.rotation.y,\n                      o.rotation.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step={0.01}\n                  value={o.rotation.y.toFixed(2)}\n                  onChange={e =>\n                    this.updateRotation(\n                      o.rotation.x,\n                      e.currentTarget.valueAsNumber,\n                      o.rotation.z\n                    )\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  step={0.01}\n                  value={o.rotation.z.toFixed(2)}\n                  onChange={e =>\n                    this.updateRotation(\n                      o.rotation.x,\n                      o.rotation.y,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </Group>\n            </div>\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}