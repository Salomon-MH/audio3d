{"version":3,"sources":["data/export.ts","project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["createZip","project","metadata","toData","zip","Zip","file","JSON","stringify","audioFolder","folder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","audioLibrary","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","toString","err","return","generateAsync","type","saveAsZip","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","sent","saveAs","stop","this","_x","apply","arguments","AudioLibrary","nextId","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","Room","length","roomDimensions","width","height","depth","grid","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","addCube","dimensions","remove","cube","y","objects","children","filter","c","map","go","_this2","gameObjects","o","fromData","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","activeRoom","activeObject","r","Container","styled","div","_templateObject","Menu","_templateObject2","MenuItem","_templateObject3","MenuDivider","_templateObject4","Menubar","_templateObject5","MenubarItem","_templateObject6","defaultProps","tabIndex","ObjectDragDirection","InnerContainer","_templateObject7","Sidebar","aside","_templateObject8","Main","main","_templateObject9","Group","_templateObject10","Input","input","_templateObject11","RoomList","ol","_templateObject12","RoomListItem","li","_templateObject13","props","active","css","_templateObject14","radToDeg","rad","PI","degToRad","deg","ObjectEditor","onAudioFileSelected","e","files","currentTarget","item","console","log","size","reader","FileReader","onload","result","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","react_default","createElement","onChange","step","x","valueAsNumber","z","toFixed","min","accept","React","Component","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","onKeyUp","delete","onClick","button","shiftKey","document","has","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","focus","cancelAnimationFrame","removeChild","geometry","previousAudio","getObjectByName","slice","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","selectObject","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","room","onUpdateDimensions","Editor","setState","selectedObject","s","projectCanvas","state","selectedRoomId","mainRef","createRef","updateRoomName","concat","updateRoomDimensions","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","push","onAddCubeClick","onExportClick","current","attach","detach","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c63cb9c.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioFolder = zip.folder(\"audio\");\n  for (const [key, value] of project.audioLibrary.entries()) {\n    audioFolder.file(key.toString(), value);\n  }\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project) => {\n  const data = await createZip(project);\n  saveAs(data, \"audio3d-project.zip\");\n};\n","/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): number {\n    this.set(this.nextId, data);\n    return this.nextId++;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray(),\n      audioId: this.audioId\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport { AmbientLight, GridHelper, Object3D, PointLight, Scene } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.addCube();\n  }\n\n  addCube(): void {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    // this.selectMesh(cube);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Vector3 } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n  rooms: Room[] = [\n    new Room(this.audioLibrary, \"First room\", {\n      width: 15,\n      depth: 10,\n      height: 3\n    })\n  ];\n\n  activeRoom: Room = this.rooms[0];\n  activeObject: GameObject | null = null;\n\n  constructor(public events: ProjectEvents = defaultEvents) {}\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n\n    return this;\n  }\n}\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Menu = styled.div`\n  display: none;\n  position: absolute;\n  left: 0;\n  top: 100%;\n  background: hsl(210, 25%, 20%);\n  padding: 5px 0;\n  min-width: 200px;\n  font-size: 0.95em;\n  box-shadow: 5px 5px 8px rgba(0, 0, 0, 0.5);\n\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  cursor: default;\n`;\n\nexport const MenuItem = styled.div`\n  white-space: nowrap;\n  padding: 8px 20px;\n  margin: 2px 0;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 25%, 30%);\n  }\n`;\n\nexport const MenuDivider = styled.div`\n  height: 0;\n  margin: 5px;\n  border-bottom: 1px solid hsl(210, 15%, 35%);\n`;\n\nexport const Menubar = styled.div`\n  flex: 0 0 auto;\n  background: hsl(210, 29%, 15%);\n  color: #fff;\n  font-size: 0.9em;\n  padding: 0 10px;\n`;\n\nexport const MenubarItem = styled.div`\n  position: relative;\n  display: inline-block;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background: hsl(210, 29%, 20%);\n  }\n\n  :focus > ${Menu} {\n    display: block;\n  }\n`;\n\nMenubarItem.defaultProps = {\n  tabIndex: -1 // Required to make it focusable, i.e. for using :focus in this case\n};\n\nexport const InnerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Sidebar = styled.aside`\n  flex: 0 0 300px;\n  height: 100%;\n  background: hsl(210, 29%, 29%);\n  color: #fff;\n  padding: 0 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: hsl(210, 29%, 24%);\n  border-radius: 3px;\n  border: 2px solid hsl(210, 29%, 24%);\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nexport const RoomList = styled.ol`\n  list-style: none;\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 3px;\n  background: hsl(210, 29%, 24%);\n`;\n\ninterface RoomListItemProps {\n  active?: boolean;\n}\n\nexport const RoomListItem = styled.li<RoomListItemProps>`\n  cursor: pointer;\n  padding: 7px 10px;\n  border-radius: 2px;\n  ${props =>\n    props.active &&\n    css`\n      background: hsl(210, 29%, 20%);\n      border-left: 2px solid #3498db;\n    `};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { Group, Input } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// Converts radiant angles to degrees\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nconst degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.x}\n            onChange={e =>\n              onUpdatePosition(\n                e.currentTarget.valueAsNumber,\n                o.position.y,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.y}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                e.currentTarget.valueAsNumber,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.z}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                o.position.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.x).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.y,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.y).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.z).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                o.rotation.y,\n                degToRad(e.currentTarget.valueAsNumber)\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.x}\n            onChange={e =>\n              onUpdateScale(e.currentTarget.valueAsNumber, o.scale.y, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.y}\n            onChange={e =>\n              onUpdateScale(o.scale.x, e.currentTarget.valueAsNumber, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.z}\n            onChange={e =>\n              onUpdateScale(o.scale.x, o.scale.y, e.currentTarget.valueAsNumber)\n            }\n          />\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  controls: VisualControls;\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.project.activeObject) {\n      this.project.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.project.activeObject = o;\n    this.project.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n\n    const previousAudio = this.project.activeObject.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.project.activeObject.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    if (this.project.activeObject.audioId) {\n      this.project.audioLibrary.delete(this.project.activeObject.audioId);\n    }\n\n    this.project.activeObject.audioData = data.slice(0);\n    this.project.activeObject.audioId = this.project.audioLibrary.add(\n      this.project.activeObject.audioData\n    );\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.selectObject(o);\n        return true;\n      }\n    }\n\n    this.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Group, Input } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.width}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                width: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.depth}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                depth: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={3}\n            max={50}\n            value={r.dimensions.height}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                height: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport {\n  Container,\n  Group,\n  InnerContainer,\n  Main,\n  Menu,\n  Menubar,\n  MenubarItem,\n  MenuDivider,\n  MenuItem,\n  RoomList,\n  RoomListItem,\n  Sidebar\n} from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project = new Project({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            scale: o.scale,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  selectRoom(id: number): void {\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = this.project.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\", {\n      width: 10,\n      depth: 10,\n      height: 3\n    });\n    this.project.rooms.push(room);\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = room;\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  onExportClick = () => {\n    saveAsZip(this.project);\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Menubar>\n          <MenubarItem>\n            File\n            <Menu>\n              <MenuItem>New project</MenuItem>\n              <MenuItem>Load project</MenuItem>\n              <MenuItem>Save project</MenuItem>\n              <MenuDivider />\n              <MenuItem>Import project</MenuItem>\n              <MenuItem onClick={this.onExportClick}>Export project</MenuItem>\n              <MenuDivider />\n              <MenuItem>Settings</MenuItem>\n            </Menu>\n          </MenubarItem>\n          <MenubarItem>\n            Edit\n            <Menu>\n              <MenuItem onClick={this.onAddCubeClick}>New object</MenuItem>\n              <MenuItem>Delete object</MenuItem>\n              <MenuDivider />\n              <MenuItem onClick={this.onAddRoomClick}>New room</MenuItem>\n              <MenuItem>Delete room</MenuItem>\n              <MenuDivider />\n              <MenuItem>Release the kraken</MenuItem>\n            </Menu>\n          </MenubarItem>\n          <MenubarItem>\n            Help\n            <Menu>\n              <MenuItem>Issues</MenuItem>\n              <MenuItem>Repository</MenuItem>\n              <MenuItem>About</MenuItem>\n            </Menu>\n          </MenubarItem>\n        </Menubar>\n        <InnerContainer>\n          <Sidebar>\n            <Group>\n              <label>Rooms</label>\n              <RoomList>\n                {this.state.rooms.map((r, i) => (\n                  <RoomListItem\n                    key={r.id}\n                    onClick={() => this.selectRoom(i)}\n                    active={i === this.state.selectedRoomId}\n                  >\n                    {r.name}\n                  </RoomListItem>\n                ))}\n              </RoomList>\n            </Group>\n            {!o && (\n              <RoomEditor\n                room={this.state.rooms[this.state.selectedRoomId]}\n                onUpdateName={this.updateRoomName}\n                onUpdateDimensions={this.updateRoomDimensions}\n              />\n            )}\n            {o && (\n              <ObjectEditor\n                object={o}\n                onUpdateName={this.updateName}\n                onUpdatePosition={this.updatePosition}\n                onUpdateRotation={this.updateRotation}\n                onUpdateScale={this.updateScale}\n                onUpdateAudio={this.updateAudio}\n              />\n            )}\n          </Sidebar>\n          <Main ref={this.mainRef} />\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}