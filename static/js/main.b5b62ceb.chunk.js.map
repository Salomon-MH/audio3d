{"version":3,"sources":["data/export.ts","project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["createZip","project","metadata","toData","zip","Zip","file","JSON","stringify","audioFolder","folder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","audioLibrary","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","toString","err","return","generateAsync","type","saveAsZip","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","sent","saveAs","stop","this","_x","apply","arguments","AudioLibrary","nextId","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","Room","length","roomDimensions","width","height","depth","grid","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","addCube","dimensions","remove","cube","y","objects","children","filter","c","map","go","_this2","gameObjects","o","fromData","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","activeRoom","activeObject","r","ObjectDragDirection","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","ListItem","li","_templateObject6","props","active","radToDeg","rad","PI","degToRad","deg","ObjectEditor","onAudioFileSelected","e","files","currentTarget","item","console","log","size","reader","FileReader","onload","result","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","react_default","createElement","onChange","step","x","valueAsNumber","z","toFixed","min","accept","React","Component","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","onKeyUp","delete","onClick","button","shiftKey","document","has","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","focus","cancelAnimationFrame","removeChild","geometry","previousAudio","getObjectByName","slice","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","selectObject","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","room","onUpdateDimensions","Editor","setState","selectedObject","s","projectCanvas","state","selectedRoomId","mainRef","createRef","updateRoomName","concat","updateRoomDimensions","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","push","onAddCubeClick","onExportClick","current","attach","detach","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAaaA,EAAY,SAACC,GACxB,IAAMC,EAAWD,EAAQE,SACnBC,EAAM,IAAIC,IAChBD,EAAIE,KAAK,gBAAiBC,KAAKC,UAAUN,IAEzC,IAAMO,EAAcL,EAAIM,OAAO,SAL6BC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAM5D,QAAAC,EAAAC,EAA2Bf,EAAQgB,aAAaC,UAAhDC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAA2D,KAAAY,EAAAR,EAAAS,MAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/CK,EAA+CH,EAAA,GAA1CD,EAA0CC,EAAA,GACzDhB,EAAYH,KAAKsB,EAAIC,WAAYL,IAPyB,MAAAM,GAAAlB,GAAA,EAAAC,EAAAiB,EAAA,YAAAnB,GAAA,MAAAK,EAAAe,QAAAf,EAAAe,SAAA,WAAAnB,EAAA,MAAAC,GAU5D,OAAOT,EAAI4B,cAAc,CAAEC,KAAM,UAOtBC,EAAS,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,EAAOvC,GAAP,IAAAwC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACJrB,EAAUC,GADN,OACjBwC,EADiBE,EAAAE,KAEvBC,iBAAOL,EAAM,uBAFU,wBAAAE,EAAAI,SAAAP,EAAAQ,SAAH,gBAAAC,GAAA,OAAAd,EAAAe,MAAAF,KAAAG,YAAA,WC1BDC,6MACnBC,OAAS,qEAELZ,GAEF,OADAO,KAAKM,IAAIN,KAAKK,OAAQZ,GACfO,KAAKK,4BAL0BE,MCGpCC,EAAe,IAAIC,IAAY,EAAG,EAAG,GACrCC,EAAe,IAAIC,IAEJC,cAInB,SAAAA,EAAoB3C,GAA4B,IAAA4C,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAsB,KAAAY,IAC9CC,EAAAnC,OAAAqC,EAAA,EAAArC,CAAAsB,KAAAtB,OAAAsC,EAAA,EAAAtC,CAAAkC,GAAAK,KAAAjB,KAAMQ,EAAcE,KAD0BzC,eAAA4C,EAHhDK,QAAyB,KAGuBL,EAFhDM,UAAgC,KAEgBN,wEAK9C,MAAO,CACLO,KAAMpB,KAAKoB,KACXC,SAAUrB,KAAKqB,SAASC,UACxBC,MAAOvB,KAAKuB,MAAMD,UAClBE,SAAUxB,KAAKwB,SAASF,UACxBJ,QAASlB,KAAKkB,0CAITzB,GAWP,OAVAO,KAAKoB,KAAO3B,EAAK2B,KACjBpB,KAAKqB,SAASf,IAAIb,EAAK4B,SAAS,GAAI5B,EAAK4B,SAAS,GAAI5B,EAAK4B,SAAS,IACpErB,KAAKuB,MAAMjB,IAAIb,EAAK8B,MAAM,GAAI9B,EAAK8B,MAAM,GAAI9B,EAAK8B,MAAM,IACxDvB,KAAKwB,SAASlB,IAAIb,EAAK+B,SAAS,GAAI/B,EAAK+B,SAAS,GAAI/B,EAAK+B,SAAS,IACpExB,KAAKkB,QAAUzB,EAAKyB,QAEA,MAAhBlB,KAAKkB,UACPlB,KAAKmB,UAAYnB,KAAK/B,aAAawD,IAAIzB,KAAKkB,UAAY,MAGnDlB,YA7B6B0B,KCGnBC,cAkBnB,SAAAA,EACU1D,GAGR,IAAA4C,EAFAO,EAEAjB,UAAAyB,OAAA,QAAA9D,IAAAqC,UAAA,GAAAA,UAAA,GAFe,GACP0B,EACR1B,UAAAyB,OAAA,QAAA9D,IAAAqC,UAAA,GAAAA,UAAA,GADyC,CAAE2B,MAAO,EAAGC,OAAQ,EAAGC,MAAO,GACvEtD,OAAAoC,EAAA,EAAApC,CAAAsB,KAAA2B,IACAd,EAAAnC,OAAAqC,EAAA,EAAArC,CAAAsB,KAAAtB,OAAAsC,EAAA,EAAAtC,CAAAiD,GAAAV,KAAAjB,QADA/B,eAAA4C,EAAAgB,iBAAAhB,EArBFoB,UAqBE,EAGApB,EAAKO,KAAOA,EAEZ,IAAMc,EAAe,IAAIC,IAAa,SAAU,IAChDtB,EAAKuB,IAAIF,GACT,IAAMG,EAAQ,IAAIC,IAAW,SAAU,IACvCD,EAAMhB,SAASf,IAAI,EAAG,EAAG,GACzB+B,EAAME,OAAO,EAAG,EAAG,GACnB1B,EAAKuB,IAAIC,GAET,IAAMG,EAAWC,KAAKC,IAAIb,EAAeC,MAAOD,EAAeG,OAZ/D,OAaAnB,EAAKoB,KAAO,IAAIU,IAAWH,EAAUA,EAAU,SAAU,UAEzD3B,EAAKuB,IAAIvB,EAAKoB,MAEdpB,EAAK+B,UAjBL/B,0EAlBA,OAAOb,KAAK6B,6BAGCgB,GACb7C,KAAK6B,eAAiBgB,EAEtB7C,KAAK8C,OAAO9C,KAAKiC,MAEjB,IAAMO,EAAWC,KAAKC,IAAIG,EAAWf,MAAOe,EAAWb,OACvDhC,KAAKiC,KAAO,IAAIU,IAAWH,EAAUA,EAAU,SAAU,UAEzDxC,KAAKoC,IAAIpC,KAAKiC,yDA4Bd,IAAMc,EAAO,IAAInC,EAAWZ,KAAK/B,cACjC8E,EAAK1B,SAAS2B,GAAK,GACnBD,EAAK3B,KAAO,WAEZpB,KAAKoC,IAAIW,oCAKT,MAAO,CACL3B,KAAMpB,KAAKoB,KACXyB,WAAY7C,KAAK6C,WACjBI,QAASjD,KAAKkD,SACXC,OAAO,SAACC,GAAD,OAAkCA,aAAaxC,IACtDyC,IAAI,SAAAC,GAAE,OAAIA,EAAGnG,6CAIXsC,GAA4B,IAAA8D,EAAAvD,KACnCA,KAAKoB,KAAO3B,EAAK2B,KACjBpB,KAAK6C,WAAapD,EAAKoD,WAEvB,IAAMW,EAAc/D,EAAKwD,QAAQI,IAAI,SAACI,GAAD,OACnC,IAAI7C,EAAW2C,EAAKtF,cAAcyF,SAASD,KAI7C,OAFAzD,KAAKoC,IAALlC,MAAAF,KAAAtB,OAAAiF,EAAA,EAAAjF,CAAY8E,IAELxD,YAtEuB4D,KCE5BC,EAAO,aAGPC,EAA+B,CACnCC,SAAUF,EACVG,QAASH,EACTI,YAAaJ,GAGMK,aAgBnB,SAAAA,IAA0D,IAAvCC,EAAuChE,UAAAyB,OAAA,QAAA9D,IAAAqC,UAAA,GAAAA,UAAA,GAAf2D,EAAepF,OAAAoC,EAAA,EAAApC,CAAAsB,KAAAkE,GAAAlE,KAAAmE,SAAAnE,KAf1D/B,aAAe,IAAImC,EAeuCJ,KAb1DoE,GAAoB,KAasCpE,KAZ1DoB,KAAO,cAYmDpB,KAX1DqE,MAAgB,CACd,IAAI1C,EAAK3B,KAAK/B,aAAc,aAAc,CACxC6D,MAAO,GACPE,MAAO,GACPD,OAAQ,KAO8C/B,KAH1DsE,WAAmBtE,KAAKqE,MAAM,GAG4BrE,KAF1DuE,aAAkC,0DAMhC,MAAO,CACLnD,KAAMpB,KAAKoB,KACXiD,MAAOrE,KAAKqE,MAAMhB,IAAI,SAAAmB,GAAC,OAAIA,EAAErH,6CAKxBsC,GAA4B,IAAAoB,EAAAb,KAMnC,OALAA,KAAKoB,KAAO3B,EAAK2B,KACjBpB,KAAKqE,MAAQ5E,EAAK4E,MAAMhB,IAAI,SAACmB,GAAD,OAC1B,IAAI7C,EAAKd,EAAK5C,cAAcyF,SAASc,KAGhCxE,8pCCvDJ,ICmBKyE,EDnBCC,EAAYC,IAAOC,IAAVC,KAaTC,EAAUH,IAAOI,MAAVC,KAUPC,EAAON,IAAOO,KAAVC,KAKJC,EAAQT,IAAOC,IAAVS,KAILC,EAAQX,IAAOY,MAAVC,KAsBLC,EAAWd,IAAOe,GAAVC,IAIjB,SAAAC,GAAK,OAAIA,EAAMC,QAAU,mCE3CvBC,EAAW,SAACC,GAAD,OAAgC,IAANA,EAAatD,KAAKuD,IAGvDC,EAAW,SAACC,GAAD,OAA0BA,EAAM,IAAOzD,KAAKuD,IAGxCG,6MACnBC,oBAAkE,SAAAC,GAAK,IAC7DC,EAAUD,EAAEE,cAAZD,MACR,GAAKA,EAAL,CAGA,IAAMhJ,EAAOgJ,EAAME,KAAK,GACxB,GAAKlJ,EAKL,GAFAmJ,QAAQC,IAAI,iBAAkBpJ,GAE1BA,EAAKqJ,KAAO,QACdF,QAAQC,IAAI,8BADd,CAKA,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACTF,EAAOG,OAKZlG,EAAK+E,MAAMoB,cAAcJ,EAAOG,QAJ9BN,QAAQQ,MAAM,uBAAwBZ,IAM1CO,EAAOM,kBAAkB5J,8EAGD,IAAA6J,EAOpBnH,KAAK4F,MALCnC,EAFc0D,EAEtBC,OACAC,EAHsBF,EAGtBE,aACAC,EAJsBH,EAItBG,iBACAC,EALsBJ,EAKtBI,iBACAC,EANsBL,EAMtBK,cAGF,OACEC,EAAAnI,EAAAoI,cAAA,WACED,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,qBACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,OACLT,MAAOiF,EAAErC,KACTuG,SAAU,SAAAtB,GAAC,OAAIgB,EAAahB,EAAEE,cAAc/H,WAGhDiJ,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,mCACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAK,MACLpJ,MAAOiF,EAAEpC,SAASwG,EAClBF,SAAU,SAAAtB,GAAC,OACTiB,EACEjB,EAAEE,cAAcuB,cAChBrE,EAAEpC,SAAS2B,EACXS,EAAEpC,SAAS0G,MAIjBN,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAK,MACLpJ,MAAOiF,EAAEpC,SAAS2B,EAClB2E,SAAU,SAAAtB,GAAC,OACTiB,EACE7D,EAAEpC,SAASwG,EACXxB,EAAEE,cAAcuB,cAChBrE,EAAEpC,SAAS0G,MAIjBN,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAK,MACLpJ,MAAOiF,EAAEpC,SAAS0G,EAClBJ,SAAU,SAAAtB,GAAC,OACTiB,EACE7D,EAAEpC,SAASwG,EACXpE,EAAEpC,SAAS2B,EACXqD,EAAEE,cAAcuB,mBAKxBL,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,oDACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAM,EACNpJ,MAAOsH,EAASrC,EAAEjC,SAASqG,GAAGG,QAAQ,GACtCL,SAAU,SAAAtB,GAAC,OACTkB,EACEtB,EAASI,EAAEE,cAAcuB,eACzBrE,EAAEjC,SAASwB,EACXS,EAAEjC,SAASuG,MAIjBN,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAM,EACNpJ,MAAOsH,EAASrC,EAAEjC,SAASwB,GAAGgF,QAAQ,GACtCL,SAAU,SAAAtB,GAAC,OACTkB,EACE9D,EAAEjC,SAASqG,EACX5B,EAASI,EAAEE,cAAcuB,eACzBrE,EAAEjC,SAASuG,MAIjBN,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAM,EACNpJ,MAAOsH,EAASrC,EAAEjC,SAASuG,GAAGC,QAAQ,GACtCL,SAAU,SAAAtB,GAAC,OACTkB,EACE9D,EAAEjC,SAASqG,EACXpE,EAAEjC,SAASwB,EACXiD,EAASI,EAAEE,cAAcuB,oBAKjCL,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,4CACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAK,MACLK,IAAK,GACLvF,IAAK,GACLlE,MAAOiF,EAAElC,MAAMsG,EACfF,SAAU,SAAAtB,GAAC,OACTmB,EAAcnB,EAAEE,cAAcuB,cAAerE,EAAElC,MAAMyB,EAAGS,EAAElC,MAAMwG,MAGpEN,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAK,MACLK,IAAK,GACLvF,IAAK,GACLlE,MAAOiF,EAAElC,MAAMyB,EACf2E,SAAU,SAAAtB,GAAC,OACTmB,EAAc/D,EAAElC,MAAMsG,EAAGxB,EAAEE,cAAcuB,cAAerE,EAAElC,MAAMwG,MAGpEN,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAK,MACLK,IAAK,GACLvF,IAAK,GACLlE,MAAOiF,EAAElC,MAAMwG,EACfJ,SAAU,SAAAtB,GAAC,OACTmB,EAAc/D,EAAElC,MAAMsG,EAAGpE,EAAElC,MAAMyB,EAAGqD,EAAEE,cAAcuB,mBAI1DL,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,oCACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,OACLiJ,OAAO,UACPP,SAAU3H,KAAKoG,+BApKe+B,IAAMC,WCjB3BC,mDAcnBC,mBAAqB,SAACjC,GACpBI,QAAQC,IAAI,qBAAsBL,EAAEkC,eAGtCC,sBAAwB,SAACnC,GACvBI,QAAQC,IAAI,wBAAyBL,EAAEkC,+DAjBvCE,OAAOC,iBAAiB,mBAAoB1I,KAAKsI,oBACjDG,OAAOC,iBAAiB,sBAAuB1I,KAAKwI,sDAIpDC,OAAOE,oBAAoB,mBAAoB3I,KAAKsI,oBACpDG,OAAOE,oBACL,sBACA3I,KAAKwI,uDAYDI,GACN,IAAMC,EAAWC,UAAUC,cAEvBvK,EAAQ,EAHiBb,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAI7B,QAAAC,EAAAC,EAAsB6K,EAAtB1K,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAgC,KAArB4K,EAAqBxK,EAAAS,MAC9B,GAAK+J,GAA+B,aAApBA,EAAQS,QAIxB,GAAIJ,EAAQ,EAAG,CACb,IAAMK,EAAOV,EAAQW,KAAKN,GAExBnG,KAAK0G,IAAIF,IApCI,IAqCbxG,KAAK0G,IAAIF,GAAQxG,KAAK0G,IAAI3K,KAE1BA,EAAQyK,QAEL,GAAc,IAAVL,EAAa,CACtB,IAAMQ,EAAKb,EAAQc,QAAQ,GAAG7K,MAExByK,EADKV,EAAQc,QAAQ,GAAG7K,MACZ4K,EACd3G,KAAK0G,IAAIF,GAAQxG,KAAK0G,IAAI3K,KAC5BA,EAAQyK,KAtBe,MAAAnK,GAAAlB,GAAA,EAAAC,EAAAiB,EAAA,YAAAnB,GAAA,MAAAK,EAAAe,QAAAf,EAAAe,SAAA,WAAAnB,EAAA,MAAAC,GA0B7B,OAAOW,WClDU8K,aAKnB,SAAAA,EAAYC,GAAqB,IAAA1I,EAAAb,KAAAtB,OAAAoC,EAAA,EAAApC,CAAAsB,KAAAsJ,GAAAtJ,KAJjCuJ,YAIiC,EAAAvJ,KAHjCwJ,YAAc,IAAIC,IAGezJ,KAFjC0J,UAAY,IAAInJ,IAEiBP,KAyBjC2J,MAAQ,WACN9I,EAAK2I,YAAYI,SA1Bc5J,KA6BjC6J,UAAY,SAACxD,GACXA,EAAEyD,iBAGErH,KAAK0G,IAAI9C,EAAE0D,WAAalJ,EAAK6I,UAAUjI,IAAI4E,EAAEzH,MAAQ,KAAO,KAC9DiC,EAAK2I,YAAYpH,IAAIiE,EAAEzH,MAlCMoB,KAsCjCgK,QAAU,SAAC3D,GACTA,EAAEyD,iBACFjJ,EAAK2I,YAAYS,OAAO5D,EAAEzH,KAC1BiC,EAAK6I,UAAUpJ,IAAI+F,EAAEzH,IAAKyH,EAAE0D,YAzCG/J,KA4CjCkK,QAAU,SAAC7D,GAEQ,IAAbA,EAAE8D,QAAgB9D,EAAE+D,UACtBvJ,EAAK8I,SA9CP3J,KAAKuJ,OAASA,uDAIdvJ,KAAKuJ,OAAOb,iBAAiB,OAAQ1I,KAAK2J,OAC1C3J,KAAKuJ,OAAOb,iBAAiB,cAAe1I,KAAK2J,OACjD3J,KAAKuJ,OAAOb,iBAAiB,UAAW1I,KAAK6J,WAC7C7J,KAAKuJ,OAAOb,iBAAiB,QAAS1I,KAAKgK,SAC3CK,SAAS3B,iBAAiB,QAAS1I,KAAKkK,wCAIxClK,KAAKuJ,OAAOZ,oBAAoB,OAAQ3I,KAAK2J,OAC7C3J,KAAKuJ,OAAOZ,oBAAoB,cAAe3I,KAAK2J,OACpD3J,KAAKuJ,OAAOZ,oBAAoB,UAAW3I,KAAK6J,WAChD7J,KAAKuJ,OAAOZ,oBAAoB,QAAS3I,KAAKgK,SAC9CK,SAAS1B,oBAAoB,QAAS3I,KAAKkK,SAC3ClK,KAAK2J,0CAGG/K,GACR,OAAOoB,KAAKwJ,YAAYc,IAAI1L,sBHVpB6F,6JICP8F,EJsBgBC,eA2BnB,SAAAA,EAAoBvN,GAAkB,IAAA4D,EAAAnC,OAAAoC,EAAA,EAAApC,CAAAsB,KAAAwK,IACpC3J,EAAAnC,OAAAqC,EAAA,EAAArC,CAAAsB,KAAAtB,OAAAsC,EAAA,EAAAtC,CAAA8L,GAAAvJ,KAAAjB,QADoC/C,UAAA4D,EA1BtC4J,oBAAkD,KA0BZ5J,EAzBtC6J,WAAqB,EAyBiB7J,EApBtC8J,WAAa,IAAIC,IAoBqB/J,EAnBtCgK,UAAY,IAAID,IAmBsB/J,EAbtCiK,MAAQ,IAAIC,IAa0BlK,EAVtCmK,WAUsC,EAAAnK,EATtCoK,WASsC,EAAApK,EARtCqK,WAQsC,EAAArK,EAPtCsK,YAOsC,EAAAtK,EANtCuK,YAMsC,EAAAvK,EALtCwK,YAKsC,EAAAxK,EAJtCyK,aAIsC,EAAAzK,EAHtC0K,aAGsC,EAAA1K,EAFtC2K,aAEsC,EAKpC,IAAMC,EAAiB,CACrBC,aAAa,EACbC,QAAS,IACTC,KAAMC,KAKFC,EAAe,IAAIrL,IAAY,IAAM,IAAM,IAEjDI,EAAKmK,MAAQ,IAAItJ,IACfoK,EACA,IAAIC,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GACK+M,EADL,CAEEQ,MAAO,aAGXpL,EAAKmK,MAAM3J,SAASf,IAAI,KAAO,EAAK,GACpCO,EAAKmK,MAAMxJ,SAASwB,EAAIP,KAAKuD,GAAK,EAClCnF,EAAKmK,MAAMkB,SAASC,UAAY1H,EAAoB2H,MAEpDvL,EAAKoK,MAAQ,IAAIvJ,IACfoK,EACA,IAAIC,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GACK+M,EADL,CAEEQ,MAAO,UAGXpL,EAAKoK,MAAM5J,SAASf,IAAI,EAAK,KAAO,GACpCO,EAAKoK,MAAMzJ,SAASqG,EAAIpF,KAAKuD,GAAK,EAClCnF,EAAKoK,MAAMiB,SAASC,UAAY1H,EAAoB4H,MAEpDxL,EAAKqK,MAAQ,IAAIxJ,IACfoK,EACA,IAAIC,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GACK+M,EADL,CAEEQ,MAAO,QAGXpL,EAAKqK,MAAM7J,SAASf,IAAI,EAAK,EAAK,MAClCO,EAAKqK,MAAMgB,SAASC,UAAY1H,EAAoB6H,MAEpDzL,EAAKuB,IAAIvB,EAAKmK,OACdnK,EAAKuB,IAAIvB,EAAKoK,OACdpK,EAAKuB,IAAIvB,EAAKqK,OAId,IAAMqB,EAAgB,IAAIC,IAAe,IAAM,GAAI,IAEnD3L,EAAKsK,OAAS,IAAIzJ,IAChB6K,EACA,IAAIR,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GAA2B+M,EAA3B,CAA2CQ,MAAO,aAEpDpL,EAAKsK,OAAO9J,SAASf,IAAI,IAAM,EAAG,GAClCO,EAAKsK,OAAOe,SAASC,UAAY1H,EAAoB2H,MACrDvL,EAAKsK,OAAOe,SAASO,SAAU,EAE/B5L,EAAKuK,OAAS,IAAI1J,IAChB6K,EACA,IAAIR,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GAA2B+M,EAA3B,CAA2CQ,MAAO,UAEpDpL,EAAKuK,OAAO/J,SAASf,IAAI,EAAG,IAAM,GAClCO,EAAKuK,OAAOc,SAASC,UAAY1H,EAAoB4H,MACrDxL,EAAKuK,OAAOc,SAASO,SAAU,EAE/B5L,EAAKwK,OAAS,IAAI3J,IAChB6K,EACA,IAAIR,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GAA2B+M,EAA3B,CAA2CQ,MAAO,QAEpDpL,EAAKwK,OAAOhK,SAASf,IAAI,EAAG,EAAG,KAC/BO,EAAKwK,OAAOa,SAASC,UAAY1H,EAAoB6H,MACrDzL,EAAKwK,OAAOa,SAASO,SAAU,EAE/B5L,EAAKuB,IAAIvB,EAAKsK,QACdtK,EAAKuB,IAAIvB,EAAKuK,QACdvK,EAAKuB,IAAIvB,EAAKwK,QAMd,IAAMqB,EAAgB,IAAIC,IAAc,IAAM,KAvFV,OAyFpC9L,EAAKyK,QAAU,IAAI5J,IACjBgL,EACA,IAAIX,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GAA2B+M,EAA3B,CAA2CQ,MAAO,UAEpDpL,EAAKyK,QAAQjK,SAASf,IAAI,EAAK,IAAM,KACrCO,EAAKyK,QAAQ9J,SAASwB,EAAIP,KAAKuD,GAAK,EACpCnF,EAAKyK,QAAQY,SAASC,UAAY1H,EAAoBmI,QAEtD/L,EAAK0K,QAAU,IAAI7J,IACjBgL,EACA,IAAIX,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GAA2B+M,EAA3B,CAA2CQ,MAAO,aAEpDpL,EAAK0K,QAAQlK,SAASf,IAAI,IAAM,EAAK,KACrCO,EAAK0K,QAAQ/J,SAASqG,EAAIpF,KAAKuD,GAAK,EACpCnF,EAAK0K,QAAQW,SAASC,UAAY1H,EAAoBoI,QAEtDhM,EAAK2K,QAAU,IAAI9J,IACjBgL,EACA,IAAIX,IAAJrN,OAAAsN,EAAA,EAAAtN,CAAA,GAA2B+M,EAA3B,CAA2CQ,MAAO,aAEpDpL,EAAK2K,QAAQnK,SAASf,IAAI,IAAM,IAAM,GACtCO,EAAK2K,QAAQU,SAASC,UAAY1H,EAAoBqI,QAEtDjM,EAAKuB,IAAIvB,EAAKyK,SACdzK,EAAKuB,IAAIvB,EAAK0K,SACd1K,EAAKuB,IAAIvB,EAAK2K,SAlHsB3K,uFAqHdkM,GACtB,IAAK/M,KAAK/C,QAAQsH,aAChB,OAAO,KAGTvE,KAAKqB,SAAS2L,KAAKhN,KAAK/C,QAAQsH,aAAalD,UAE7C,IAAM4L,EAAgBF,EAAUG,iBAAiBlN,KAAKkD,UAPOvF,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAQ7D,QAAAC,EAAAC,EAA2BiP,EAA3B9O,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAA0C,KAA/BwP,EAA+BpP,EAAAS,MAClCiF,EAAI0J,EAAa/F,OACvB,GAAI3D,EAAEyI,SAASkB,eAAe,aAO5B,OAJApN,KAAK2K,WACFqC,KAAKG,EAAaE,OAClBC,IAAItN,KAAK/C,QAAQsH,aAAalD,UACjCrB,KAAK6K,UAAUmC,KAAKG,EAAaE,OAC1B5J,GAjBkD,MAAA3E,GAAAlB,GAAA,EAAAC,EAAAiB,EAAA,YAAAnB,GAAA,MAAAK,EAAAe,QAAAf,EAAAe,SAAA,WAAAnB,EAAA,MAAAC,GAoB7D,OAAO,qCAODkP,GACN,IAAMtJ,EAAIzD,KAAKuN,wBAAwBR,GACvC,SAAItJ,IAAKA,EAAEyI,SAASkB,eAAe,gBACjCpN,KAAKyK,oBAAsBhH,EAAEyI,SAASC,UACtCnM,KAAK0K,YAAcjH,EAAEyI,SAASO,QAC9BzM,KAAKwN,OAAOT,IACL,qCAgBsB,IAAxBU,EAAwBC,EAAxBD,IACP,GAAiC,OAA7BzN,KAAKyK,qBAAiCzK,KAAK/C,QAAQsH,aAAvD,CAIA,IAAMnB,EAAIpD,KAAK/C,QAAQsH,aAAalD,SAC9BsM,EAAI3N,KAAK8K,MACX8C,EAAyB,KAI7B,OAAQ5N,KAAKyK,qBACX,KAAKhG,EAAoB2H,MACvBuB,EAAErN,IAAI,IAAIsK,IAAQ,EAAG,EAAG,IAAKxH,EAAEJ,GAC/B4K,EAAW,IAAI7C,IAAM,IAAIH,IAAQ,EAAG,EAAG,IAAKxH,EAAE2E,GAC9C,MACF,KAAKtD,EAAoB4H,MACvBsB,EAAErN,IAAI,IAAIsK,IAAQ,EAAG,EAAG,IAAKxH,EAAEyE,GAC/B+F,EAAW,IAAI7C,IAAM,IAAIH,IAAQ,EAAG,EAAG,IAAKxH,EAAE2E,GAC9C,MACF,KAAKtD,EAAoB6H,MACvBqB,EAAErN,IAAI,IAAIsK,IAAQ,EAAG,EAAG,IAAKxH,EAAEyE,GAC/B+F,EAAW,IAAI7C,IAAM,IAAIH,IAAQ,EAAG,EAAG,IAAKxH,EAAEJ,GAC9C,MACF,KAAKyB,EAAoBqI,QACvBa,EAAErN,IAAI,IAAIsK,IAAQ,EAAG,EAAG,IAAKxH,EAAE2E,GAC/B,MACF,KAAKtD,EAAoBmI,QACvBe,EAAErN,IAAI,IAAIsK,IAAQ,EAAG,EAAG,IAAKxH,EAAEyE,GAC/B,MACF,KAAKpD,EAAoBoI,QACvBc,EAAErN,IAAI,IAAIsK,IAAQ,EAAG,EAAG,IAAKxH,EAAEJ,GASjC4K,GACAnL,KAAK0G,IAAIyE,EAASC,gBAAgBJ,EAAIK,SACpCrL,KAAK0G,IAAIwE,EAAEE,gBAAgBJ,EAAIK,UAEjCH,EAAEX,KAAKY,GAGT,IAAMP,EAAQI,EAAIM,eAAeJ,EAAG,IAAI/C,KACxC,GAAKyC,EAAL,CAKA,GAAIrN,KAAK0K,UAAW,CAKlB,OAAQ1K,KAAKyK,qBACX,KAAKhG,EAAoB2H,MACvBpM,KAAK/C,QAAQsH,aAAahD,MAAMsG,EAAIpF,KAAKwF,IACvCxF,KAAKC,IACH1C,KAAK/C,QAAQsH,aAAahD,MAAMsG,GAAKwF,EAAMxF,EAAI7H,KAAK6K,UAAUhD,GAC9D,IAEF,IAEF,MACF,KAAKpD,EAAoB4H,MACvBrM,KAAK/C,QAAQsH,aAAahD,MAAMyB,EAAIP,KAAKwF,IACvCxF,KAAKC,IACH1C,KAAK/C,QAAQsH,aAAahD,MAAMyB,GAAKqK,EAAMrK,EAAIhD,KAAK6K,UAAU7H,GAC9D,IAEF,IAEF,MACF,KAAKyB,EAAoB6H,MACvBtM,KAAK/C,QAAQsH,aAAahD,MAAMwG,EAAItF,KAAKwF,IACvCxF,KAAKC,IACH1C,KAAK/C,QAAQsH,aAAahD,MAAMwG,GAAKsF,EAAMtF,EAAI/H,KAAK6K,UAAU9C,GAC9D,IAEF,IAKN/H,KAAK/C,QAAQkH,OAAOH,QAAQhE,KAAK/C,QAAQsH,aAAahD,WACjD,CAKL,OAJA8L,EAAMC,IAAItN,KAAK2K,YAIP3K,KAAKyK,qBACX,KAAKhG,EAAoB2H,MACvBpM,KAAK/C,QAAQsH,aAAalD,SAASwG,EAAIwF,EAAMxF,EAC7C,MACF,KAAKpD,EAAoB4H,MACvBrM,KAAK/C,QAAQsH,aAAalD,SAAS2B,EAAIqK,EAAMrK,EAC7C,MACF,KAAKyB,EAAoB6H,MACvBtM,KAAK/C,QAAQsH,aAAalD,SAAS0G,EAAIsF,EAAMtF,EAC7C,MACF,QAGE/H,KAAK/C,QAAQsH,aAAalD,SAAS2L,KAAKK,GAG5CrN,KAAK/C,QAAQkH,OAAOF,YAAYjE,KAAK/C,QAAQsH,aAAalD,UAG5DrB,KAAK6K,UAAUmC,KAAKK,YAlToBzJ,eItBvC2G,4FAML,IAAMrB,GAAO,CACXrB,EAAG,IAAI+C,IAAQ,EAAG,EAAG,GACrB5H,EAAG,IAAI4H,IAAQ,EAAG,EAAG,GACrB7C,EAAG,IAAI6C,IAAQ,EAAG,EAAG,IAGFoD,cAqBnB,SAAAA,EAAoB/Q,GAAkB,IAAA4D,EAAAb,KAAAtB,OAAAoC,EAAA,EAAApC,CAAAsB,KAAAgO,GAAAhO,KAAA/C,UAAA+C,KApBtCuJ,OAA6B,KAoBSvJ,KAlBtCiO,UAAY,EAkB0BjO,KAjBtCkO,kBAAoB,EAiBkBlO,KAftCmO,aAAe,IAAIC,aAemBpO,KAdtCqO,SAAW,IAAIC,IAcuBtO,KAZtCuO,cAYsC,EAAAvO,KAXtCwO,OAAS,IAAIC,IAAkB,GAAI,EAAG,GAAK,KAWLzO,KAVtC0O,SAAW,IAAIC,IAUuB3O,KATtC4O,YASsC,EAAA5O,KARtC6O,YAAc,IAAInN,IAQoB1B,KANtC+M,UAAY,IAAI+B,IAMsB9O,KAJtC+O,KAAO,IAAIzF,EAAiBtJ,KAAK0O,SAASM,YAIJhP,KAHtC6I,SAAW,IAAIR,EAGuBrI,KAFtCiP,kBAAmB,EAEmBjP,KAoHtCkP,OAAS,WACP,GAAKrO,EAAK0I,OAAV,CADmB,IAAA4F,EAKmBtO,EAAK0I,OAAnC6F,EALWD,EAKXC,YAAaC,EALFF,EAKEE,aAErBxO,EAAK2N,OAAOc,OAASF,EAAcC,EACnCxO,EAAK2N,OAAOe,yBAEZ1O,EAAK6N,SAASc,cAAc/G,OAAOgH,kBACnC5O,EAAK6N,SAASgB,QAAQN,EAAaC,KA/HCrP,KAkItC2P,QAAgC,SAAAC,GAC9B/O,EAAKoN,UAAYxF,OAAOoH,sBAAsBhP,EAAK8O,SAEnD,IAAMG,GAAMF,EAAI/O,EAAKqN,mBAAqB,IAC1CrN,EAAKqN,kBAAoB0B,EACzB/O,EAAKkP,OAAOD,GAEZjP,EAAK6N,SAAS9E,QACd/I,EAAK6N,SAASsB,OAAOnP,EAAK5D,QAAQqH,WAAYzD,EAAK2N,QAE/C3N,EAAK5D,QAAQsH,eAGf1D,EAAK0N,SAASlN,SAAS2L,KAAKnM,EAAK5D,QAAQsH,aAAalD,UACtDR,EAAK6N,SAASuB,aACdpP,EAAK6N,SAASsB,OAAOnP,EAAK0N,SAAU1N,EAAK2N,UAjJPxO,KAwOtCkK,QAAU,SAAC7D,KAxO2BrG,KA4OtCkQ,YAAc,SAAC7J,GACTA,EAAE8D,SAAWI,EAAY4F,YAC3BtP,EAAKoO,kBAAmB,EACxBpO,EAAK+N,OAAOwB,sBAGV/J,EAAE8D,SAAWI,EAAY8F,UAI7BxP,EAAKyP,gBAAgBjK,GACjBxF,EAAK0N,SAASrE,QAAQrJ,EAAKkM,WAC7BlM,EAAK+N,OAAO2B,MAAMC,OAAS,WAE3B3P,EAAK4P,gBAAgB5P,EAAKkM,aA1PQ/M,KA8PtC0Q,UAAY,SAACrK,GACPA,EAAE8D,SAAWI,EAAY4F,WAAatP,EAAKoO,mBAC7CpO,EAAKoO,kBAAmB,EACxB5E,SAASsG,mBAGTtK,EAAE8D,SAAWI,EAAY8F,SACa,OAAtCxP,EAAK0N,SAAS9D,sBAEd5J,EAAK0N,SAAS9D,oBAAsB,KAChC5J,EAAK0N,SAAShB,wBAAwB1M,EAAKkM,WAC7ClM,EAAK+N,OAAO2B,MAAMC,OAAS,OAE3B3P,EAAK+N,OAAO2B,MAAMC,OAAS,OA3QKxQ,KAgRtC4Q,YAAc,SAACvK,GACTxF,EAAKoO,kBACH5I,EAAEwK,WACJhQ,EAAK2N,OAAOsC,kBAAkB5H,GAAKlG,GAAIqD,EAAEwK,UAAY,KAEnDxK,EAAE0K,WACJlQ,EAAK2N,OAAOwC,aAAa9H,GAAKrB,GAAIxB,EAAE0K,UAAY,OAGlDlQ,EAAKyP,gBAAgBjK,GACqB,OAAtCxF,EAAK0N,SAAS9D,oBAChB5J,EAAK0N,SAASf,OAAO3M,EAAKkM,WACjBlM,EAAK0N,SAAShB,wBAAwB1M,EAAKkM,WACpDlM,EAAK+N,OAAO2B,MAAMC,OAAS,OAE3B3P,EAAK+N,OAAO2B,MAAMC,OAAS,OA/RKxQ,KAoStCiR,QAAU,SAAC5K,GACTA,EAAEyD,iBAEF,IAAIoH,EAAQ7K,EAAE8K,OACM,IAAhB9K,EAAE+K,YAEJF,GAAS,IAEXrQ,EAAK2N,OAAO6C,WAAWH,EAAQ,KA3S/BlR,KAAK0O,SAAS4C,WAAY,EAC1BtR,KAAK0O,SAAS6C,cAAc,IAAIC,IAAM,UACtCxR,KAAK4O,OAAS5O,KAAK0O,SAASM,WAC5BhP,KAAK4O,OAAO6C,UAAY,EACxBzR,KAAK4O,OAAOlG,iBAAiB,QAAS1I,KAAKkK,SAC3ClK,KAAK4O,OAAOlG,iBAAiB,YAAa1I,KAAKkQ,aAC/ClQ,KAAK4O,OAAOlG,iBAAiB,UAAW1I,KAAK0Q,WAC7C1Q,KAAK4O,OAAOlG,iBAAiB,YAAa1I,KAAK4Q,aAC/C5Q,KAAK4O,OAAOlG,iBAAiB,QAAS1I,KAAKiR,SAC3CjR,KAAK4O,OAAOlG,iBACV,cACA,SAAArC,GAGE,OAFAA,EAAEyD,iBACFzD,EAAEqL,mBACK,IAET,GAKF1R,KAAKuO,SAAW,IAAI/D,GAAevN,GAKnC+C,KAAKwO,OAAOnN,SAAS0G,EAAI,EACzB/H,KAAKwO,OAAOnN,SAAS2B,EAAI,EACzBhD,KAAKwO,OAAOjM,OAAO,IAAIqI,IAAQ,EAAG,GAAK,IAEvC,IAAM+G,EAAkB,IAAI5F,IAAkB,CAC5CE,MAAO,SACPL,KAAMgG,MAER5R,KAAK6O,YAAYgD,SAAWF,EAC5B3R,KAAK6O,YAAYtN,MAAMuQ,eAAe,MAEtC9R,KAAKwO,OAAOpM,IAAIpC,KAAKqO,6DAGhB9E,GACLvJ,KAAK+O,KAAKgD,SACV/R,KAAK6I,SAASkJ,SAEd/R,KAAKuJ,OAASA,EACdA,EAAOyI,YAAYhS,KAAK4O,QAExB5O,KAAKkP,SACLzG,OAAOoH,sBAAsB7P,KAAK2P,SAClClH,OAAOC,iBAAiB,SAAU1I,KAAKkP,QACvClP,KAAK4O,OAAOqD,yCAIZxJ,OAAOyJ,qBAAqBlS,KAAKiO,WACjCxF,OAAOE,oBAAoB,SAAU3I,KAAKkP,QAEtClP,KAAKuJ,SACPvJ,KAAKuJ,OAAO4I,YAAYnS,KAAK4O,QAC7B5O,KAAKuJ,OAAS,MAGhBvJ,KAAK+O,KAAKhP,OACVC,KAAK6I,SAAS9I,4CAGH0D,GACPzD,KAAK/C,QAAQsH,cACfvE,KAAK/C,QAAQsH,aAAazB,OAAO9C,KAAK6O,aAGpCpL,IACFzD,KAAK6O,YAAYuD,SAAW3O,EAAE2O,SAC9B3O,EAAErB,IAAIpC,KAAK6O,cAGb7O,KAAK/C,QAAQsH,aAAed,EAC5BzD,KAAK/C,QAAQkH,OAAOJ,SAASN,wFAGJhE,gFACpBO,KAAK/C,QAAQsH,qEAIZ8N,EAAgBrS,KAAK/C,QAAQsH,aAAa+N,gBAC9C,YAGAtS,KAAK/C,QAAQsH,aAAazB,OAAOuP,GACjCA,EAActS,QAGZC,KAAK/C,QAAQsH,aAAarD,SAC5BlB,KAAK/C,QAAQgB,aAAagM,OAAOjK,KAAK/C,QAAQsH,aAAarD,SAG7DlB,KAAK/C,QAAQsH,aAAapD,UAAY1B,EAAK8S,MAAM,GACjDvS,KAAK/C,QAAQsH,aAAarD,QAAUlB,KAAK/C,QAAQgB,aAAamE,IAC5DpC,KAAK/C,QAAQsH,aAAapD,oBAGPnB,KAAKmO,aAAaqE,gBAAgB/S,UAAjDgT,UAEAC,EAAQ,IAAIC,IAAgB3S,KAAKqO,WACjCjN,KAAO,QACbsR,EAAME,UAAUH,GAChBC,EAAMG,SAAQ,GACdH,EAAMI,OAEN9S,KAAK/C,QAAQsH,aAAanC,IAAIsQ,GAE9BjM,QAAQC,IAAI,oLAoCPoJ,GACD9P,KAAK+O,KAAKgE,UAAU,MACtB/S,KAAKwO,OAAOwE,gBAAgB9J,GAAKnB,GAAI,EAAI+H,GAEvC9P,KAAK+O,KAAKgE,UAAU,MACtB/S,KAAKwO,OAAOwE,gBAAgB9J,GAAKnB,EAAG,EAAI+H,GAEtC9P,KAAK+O,KAAKgE,UAAU,MACtB/S,KAAKwO,OAAOwE,gBAAgB9J,GAAKrB,GAAI,EAAIiI,GAEvC9P,KAAK+O,KAAKgE,UAAU,MACtB/S,KAAKwO,OAAOwE,gBAAgB9J,GAAKrB,EAAG,EAAIiI,GAEtC9P,KAAK+O,KAAKgE,UAAU,OACtB/S,KAAKwO,OAAOnN,SAAS2B,GAAK,EAAI8M,GAE5B9P,KAAK+O,KAAKgE,UAAU,WACtB/S,KAAKwO,OAAOnN,SAAS2B,GAAK,EAAI8M,GAG5B9P,KAAK+O,KAAKgE,UAAU,cACtB/S,KAAKwO,OAAOsC,kBAAkB5H,GAAKlG,EAAG8M,GAEpC9P,KAAK+O,KAAKgE,UAAU,eACtB/S,KAAKwO,OAAOsC,kBAAkB5H,GAAKlG,GAAI8M,GAErC9P,KAAK+O,KAAKgE,UAAU,YACtB/S,KAAKwO,OAAOwC,aAAa9H,GAAKrB,EAAGiI,GAE/B9P,KAAK+O,KAAKgE,UAAU,cACtB/S,KAAKwO,OAAOwC,aAAa9H,GAAKrB,GAAIiI,GAGpC,IAAMmD,EACDjT,KAAK6I,SAASqK,QAAQ,GADrBD,EAEDjT,KAAK6I,SAASqK,QAAQ,GAFrBD,EAGAjT,KAAK6I,SAASqK,QAAQ,GAHtBD,EAIAjT,KAAK6I,SAASqK,QAAQ,GAJtBD,EAKDjT,KAAK6I,SAASqK,QAAQ,GAGvBD,GACFjT,KAAKwO,OAAOwE,gBAAgB9J,GAAKrB,EAAG,EAAIiI,EAAKmD,GAE3CA,GACFjT,KAAKwO,OAAOwE,gBAAgB9J,GAAKnB,EAAG,EAAI+H,EAAKmD,GAE3CA,GACFjT,KAAKwO,OAAOwE,gBAAgB9J,GAAKlG,EAAG,EAAI8M,EAAKmD,GAE3CA,GACFjT,KAAKwO,OAAOsC,kBAAkB5H,GAAKlG,GAAI8M,EAAKmD,GAE1CA,GACFjT,KAAKwO,OAAOwC,aAAa9H,GAAKrB,GAAIiI,EAAKmD,2CAI3BlG,GACd,IAAME,EAAgBF,EAAUG,iBAC9BlN,KAAK/C,QAAQqH,WAAWpB,UAFmBvF,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAI7C,QAAAC,EAAAC,EAA2BiP,EAA3B9O,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAA0C,KAClC8F,EADkC1F,EAAAS,MACjB4I,OACvB,GAAI3D,aAAa7C,EAEf,OADAZ,KAAKmT,aAAa1P,IACX,GARkC,MAAA3E,GAAAlB,GAAA,EAAAC,EAAAiB,EAAA,YAAAnB,GAAA,MAAAK,EAAAe,QAAAf,EAAAe,SAAA,WAAAnB,EAAA,MAAAC,GAa7C,OADAmC,KAAKmT,aAAa,OACX,0CAGO9M,GACd,IAAMM,EAAO3G,KAAK0O,SAAS0E,QAAQ,IAAIC,KAEjCxL,GAAMxB,EAAEiN,MAAQtT,KAAK4O,OAAO2E,YAAc5M,EAAKkB,EAAK,EAAI,EACxD7E,IAAOqD,EAAEmN,MAAQxT,KAAK4O,OAAO6E,WAAa9M,EAAK3D,EAAK,EAAI,EAE9DhD,KAAK+M,UAAU2G,cAAc,CAAE7L,IAAG7E,KAAKhD,KAAKwO,iBC7Q3BmF,oLACO,IAAAxM,EAC8BnH,KAAK4F,MAA7CpB,EADU2C,EAChByM,KAASvM,EADOF,EACPE,aAAcwM,EADP1M,EACO0M,mBAE/B,OACEpM,EAAAnI,EAAAoI,cAAA,WACED,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,qBACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,OACLT,MAAOgG,EAAEpD,KACTuG,SAAU,SAAAtB,GAAC,OAAIgB,EAAahB,EAAEE,cAAc/H,WAGhDiJ,EAAAnI,EAAAoI,cAACtC,EAAD,KACEqC,EAAAnI,EAAAoI,cAAA,kDACAD,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAM,EACNK,IAAK,EACLvF,IAAK,GACLlE,MAAOgG,EAAE3B,WAAWf,MACpB6F,SAAU,SAAAtB,GAAC,OACTwN,EAAmBnV,OAAAsN,EAAA,EAAAtN,CAAA,GACd8F,EAAE3B,WADW,CAEhBf,MAAOuE,EAAEE,cAAcuB,oBAI7BL,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAM,EACNK,IAAK,EACLvF,IAAK,GACLlE,MAAOgG,EAAE3B,WAAWb,MACpB2F,SAAU,SAAAtB,GAAC,OACTwN,EAAmBnV,OAAAsN,EAAA,EAAAtN,CAAA,GACd8F,EAAE3B,WADW,CAEhBb,MAAOqE,EAAEE,cAAcuB,oBAI7BL,EAAAnI,EAAAoI,cAACpC,EAAD,CACErG,KAAK,SACL2I,KAAM,EACNK,IAAK,EACLvF,IAAK,GACLlE,MAAOgG,EAAE3B,WAAWd,OACpB4F,SAAU,SAAAtB,GAAC,OACTwN,EAAmBnV,OAAAsN,EAAA,EAAAtN,CAAA,GACd8F,EAAE3B,WADW,CAEhBd,OAAQsE,EAAEE,cAAcuB,6BAnDAK,IAAMC,WCMzB0L,8MACnB7W,QAAU,IAAIiH,EAAQ,CACpBH,SAAU,SAAAN,GACJA,EACF5C,EAAKkT,SAAS,CACZC,eAAgB,CACd5P,GAAIX,EAAEW,GACNhD,KAAMqC,EAAErC,KACRC,SAAUoC,EAAEpC,SACZE,MAAOkC,EAAElC,MACTC,SAAUiC,EAAEjC,YAIhBX,EAAKkT,SAAS,CAAEC,eAAgB,QAGpC/P,YAAa,SAAA0J,GACX9M,EAAKkT,SAAS,SAAArG,GAAA,IAAGsG,EAAHtG,EAAGsG,eAAH,MAAyB,CACrCA,eAAgBA,GAActV,OAAAsN,EAAA,EAAAtN,CAAA,GACzBsV,EADyB,CAE5B3S,SAAUsM,QAIhB3J,QAAS,SAAAiQ,GACPpT,EAAKkT,SAAS,SAAAtV,GAAA,IAAGuV,EAAHvV,EAAGuV,eAAH,MAAyB,CACrCA,eAAgBA,GAActV,OAAAsN,EAAA,EAAAtN,CAAA,GACzBsV,EADyB,CAE5BrN,KAAM,CACJ7E,MAAOmS,EAAEpM,EACT9F,OAAQkS,EAAEjR,EACVhB,MAAOiS,EAAElM,aAMnBmM,cAAgB,IAAIlG,GAAcnN,EAAK5D,WAEvCkX,MAAe,CACb9P,MAAOxD,EAAK5D,QAAQoH,MAAMhB,IAAI,SAAAmB,GAAC,MAAK,CAClCJ,GAAII,EAAEJ,GACNhD,KAAMoD,EAAEpD,KACRyB,WAAY2B,EAAE3B,cAEhBuR,eAAgB,EAChBJ,eAAgB,QAElBK,QAAUlM,IAAMmM,cAkBhBC,eAAiB,SAACnT,GAChBP,EAAK5D,QAAQqH,WAAWlD,KAAOA,EAC/BP,EAAKkT,SAAS,SAAAxV,GAAA,IAAG8F,EAAH9F,EAAG8F,MAAO+P,EAAV7V,EAAU6V,eAAV,MAAgC,CAC5C/P,MAAK,GAAAmQ,OAAA9V,OAAAiF,EAAA,EAAAjF,CACA2F,EAAMkO,MAAM,EAAG6B,IADf,CAAA1V,OAAAsN,EAAA,EAAAtN,CAAA,GAGE2F,EAAM+P,GAHR,CAIDhT,UAJC1C,OAAAiF,EAAA,EAAAjF,CAMA2F,EAAMkO,MAAM6B,EAAiB,WAKtCK,qBAAuB,SAAC5R,GACtBhC,EAAK5D,QAAQqH,WAAWzB,WAAaA,EACrChC,EAAKkT,SAAS,SAAA5U,GAAA,IAAGkF,EAAHlF,EAAGkF,MAAO+P,EAAVjV,EAAUiV,eAAV,MAAgC,CAC5C/P,MAAK,GAAAmQ,OAAA9V,OAAAiF,EAAA,EAAAjF,CACA2F,EAAMkO,MAAM,EAAG6B,IADf,CAAA1V,OAAAsN,EAAA,EAAAtN,CAAA,GAGE2F,EAAM+P,GAHR,CAIDvR,gBAJCnE,OAAAiF,EAAA,EAAAjF,CAMA2F,EAAMkO,MAAM6B,EAAiB,WAKtCM,WAAa,SAACtT,GACRP,EAAK5D,QAAQsH,eACf1D,EAAK5D,QAAQsH,aAAanD,KAAOA,GAEnCP,EAAKkT,SAAS,SAAAY,GAAA,IAAGX,EAAHW,EAAGX,eAAH,MAAyB,CACrCA,eAAgBA,GAActV,OAAAsN,EAAA,EAAAtN,CAAA,GACzBsV,EADyB,CAE5B5S,eAKNwT,YAAc,SAAC/M,EAAW7E,EAAW+E,GAC/BlH,EAAK5D,QAAQsH,cACf1D,EAAK5D,QAAQsH,aAAahD,MAAMjB,IAAIuH,EAAG7E,EAAG+E,GAE5ClH,EAAKkT,SAAS,SAAAc,GAAA,IAAGb,EAAHa,EAAGb,eAAH,MAAyB,CACrCA,eAAgBA,GAActV,OAAAsN,EAAA,EAAAtN,CAAA,GACzBsV,EADyB,CAE5BzS,MAAO,IAAIqJ,IAAQ/C,EAAG7E,EAAG+E,WAK/B+M,eAAiB,SAACjN,EAAW7E,EAAW+E,GAClClH,EAAK5D,QAAQsH,cACf1D,EAAK5D,QAAQsH,aAAalD,SAASf,IAAIuH,EAAG7E,EAAG+E,GAE/ClH,EAAKkT,SAAS,SAAAgB,GAAA,IAAGf,EAAHe,EAAGf,eAAH,MAAyB,CACrCA,eAAgBA,GAActV,OAAAsN,EAAA,EAAAtN,CAAA,GACzBsV,EADyB,CAE5B3S,SAAU,IAAIuJ,IAAQ/C,EAAG7E,EAAG+E,WAKlCiN,eAAiB,SAACnN,EAAW7E,EAAW+E,GAClClH,EAAK5D,QAAQsH,cACf1D,EAAK5D,QAAQsH,aAAa/C,SAASlB,IAAIuH,EAAG7E,EAAG+E,GAE/ClH,EAAKkT,SAAS,SAAAkB,GAAA,IAAGjB,EAAHiB,EAAGjB,eAAH,MAAyB,CACrCA,eAAgBA,GAActV,OAAAsN,EAAA,EAAAtN,CAAA,GACzBsV,EADyB,CAE5BxS,SAAU,IAAI0T,IAAMrN,EAAG7E,EAAG+E,WAKhCoN,YAAc,SAAC1V,GACboB,EAAKqT,cAAckB,qBAAqB3V,MAG1C4V,eAAiB,WACf,IAAMzB,EAAO,IAAIjS,EAAKd,EAAK5D,QAAQgB,aAAc,WAAY,CAC3D6D,MAAO,GACPE,MAAO,GACPD,OAAQ,IAEVlB,EAAK5D,QAAQoH,MAAMiR,KAAK1B,GACxB/S,EAAKqT,cAAcf,aAAa,MAChCtS,EAAK5D,QAAQqH,WAAasP,EAC1B/S,EAAKkT,SAAS,SAAAE,GAAC,MAAK,CAClB5P,MAAK,GAAAmQ,OAAA9V,OAAAiF,EAAA,EAAAjF,CACAuV,EAAE5P,OADF,CAEH,CACED,GAAIwP,EAAKxP,GACThD,KAAMwS,EAAKxS,KACXyB,WAAY+Q,EAAK/Q,cAGrBuR,eAAgBH,EAAE5P,MAAMzC,aAI5B2T,eAAiB,WACf1U,EAAK5D,QAAQqH,WAAW1B,aAG1B4S,cAAgB,WACdtW,EAAU2B,EAAK5D,6FA1HX+C,KAAKqU,QAAQoB,SACfzV,KAAKkU,cAAcwB,OAAO1V,KAAKqU,QAAQoB,wDAKzCzV,KAAKkU,cAAcyB,4CAGVvR,GACTpE,KAAKkU,cAAcf,aAAa,MAChCnT,KAAK/C,QAAQqH,WAAatE,KAAK/C,QAAQoH,MAAMD,GAC7CpE,KAAK+T,SAAS,CAAEK,eAAgBhQ,EAAI4P,eAAgB,wCAiH5B,IAAAzQ,EAAAvD,KAClByD,EAAIzD,KAAKmU,MAAMH,eACrB,OACEvM,EAAAnI,EAAAoI,cAAChD,EAAD,KACE+C,EAAAnI,EAAAoI,cAAC5C,EAAD,KACE2C,EAAAnI,EAAAoI,cAAA,oBACAD,EAAAnI,EAAAoI,cAAA,WACED,EAAAnI,EAAAoI,cAAA,UAAQwC,QAASlK,KAAKqV,gBAAtB,YACA5N,EAAAnI,EAAAoI,cAAA,UAAQwC,QAASlK,KAAKuV,gBAAtB,YACA9N,EAAAnI,EAAAoI,cAAA,UAAQwC,QAASlK,KAAKwV,eAAtB,mBAEF/N,EAAAnI,EAAAoI,cAAA,UACG1H,KAAKmU,MAAM9P,MAAMhB,IAAI,SAACmB,EAAGoR,GAAJ,OACpBnO,EAAAnI,EAAAoI,cAACjC,EAAD,CACE7G,IAAK4F,EAAEJ,GACP8F,QAAS,kBAAM3G,EAAKsS,WAAWD,IAC/B/P,OAAQ+P,IAAMrS,EAAK4Q,MAAMC,gBAExB5P,EAAEpD,UAIPqC,GACAgE,EAAAnI,EAAAoI,cAACoO,GAAD,CACElC,KAAM5T,KAAKmU,MAAM9P,MAAMrE,KAAKmU,MAAMC,gBAClC/M,aAAcrH,KAAKuU,eACnBV,mBAAoB7T,KAAKyU,uBAG5BhR,GACCgE,EAAAnI,EAAAoI,cAACqO,EAAD,CACE3O,OAAQ3D,EACR4D,aAAcrH,KAAK0U,WACnBpN,iBAAkBtH,KAAK8U,eACvBvN,iBAAkBvH,KAAKgV,eACvBxN,cAAexH,KAAK4U,YACpB5N,cAAehH,KAAKmV,eAI1B1N,EAAAnI,EAAAoI,cAACzC,EAAD,CAAM+Q,IAAKhW,KAAKqU,kBAzNYlM,IAAMC,kBCTtB6N,QACW,cAA7BxN,OAAOyN,SAASC,UAEe,UAA7B1N,OAAOyN,SAASC,UAEhB1N,OAAOyN,SAASC,SAASC,MACvB,2DCXN,IAAMC,GAAS5N,QAEV4N,GAAOjI,cAAgBiI,GAAOC,qBACjCD,GAAOjI,aAAeiI,GAAOC,oBAG/BC,IAASvG,OAAOvI,EAAAnI,EAAAoI,cAAC8O,GAAD,MAAYnM,SAASoM,eAAe,SD4H9C,kBAAmB3N,WACrBA,UAAU4N,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b5b62ceb.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioFolder = zip.folder(\"audio\");\n  for (const [key, value] of project.audioLibrary.entries()) {\n    audioFolder.file(key.toString(), value);\n  }\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project) => {\n  const data = await createZip(project);\n  saveAs(data, \"audio3d-project.zip\");\n};\n","/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): number {\n    this.set(this.nextId, data);\n    return this.nextId++;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray(),\n      audioId: this.audioId\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport { AmbientLight, GridHelper, Object3D, PointLight, Scene } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.addCube();\n  }\n\n  addCube(): void {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    // this.selectMesh(cube);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Vector3 } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n  rooms: Room[] = [\n    new Room(this.audioLibrary, \"First room\", {\n      width: 15,\n      depth: 10,\n      height: 3\n    })\n  ];\n\n  activeRoom: Room = this.rooms[0];\n  activeObject: GameObject | null = null;\n\n  constructor(public events: ProjectEvents = defaultEvents) {}\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n\n    return this;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nexport const Sidebar = styled.aside`\n  flex: 0 0 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: #2c3e50;\n  border-radius: 3px;\n  border: 2px solid #2c3e50;\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\ninterface ListItemProps {\n  active?: boolean;\n}\n\nexport const ListItem = styled.li<ListItemProps>`\n  cursor: pointer;\n  padding: 2px 5px;\n  border-radius: 2px;\n  ${props => props.active && \"background: rgba(0, 0, 0, 0.5)\"};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { Group, Input } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// Converts radiant angles to degrees\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nconst degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.x}\n            onChange={e =>\n              onUpdatePosition(\n                e.currentTarget.valueAsNumber,\n                o.position.y,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.y}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                e.currentTarget.valueAsNumber,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.z}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                o.position.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.x).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.y,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.y).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.z).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                o.rotation.y,\n                degToRad(e.currentTarget.valueAsNumber)\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.x}\n            onChange={e =>\n              onUpdateScale(e.currentTarget.valueAsNumber, o.scale.y, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.y}\n            onChange={e =>\n              onUpdateScale(o.scale.x, e.currentTarget.valueAsNumber, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.z}\n            onChange={e =>\n              onUpdateScale(o.scale.x, o.scale.y, e.currentTarget.valueAsNumber)\n            }\n          />\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  controls: VisualControls;\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.project.activeObject) {\n      this.project.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.project.activeObject = o;\n    this.project.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n\n    const previousAudio = this.project.activeObject.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.project.activeObject.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    if (this.project.activeObject.audioId) {\n      this.project.audioLibrary.delete(this.project.activeObject.audioId);\n    }\n\n    this.project.activeObject.audioData = data.slice(0);\n    this.project.activeObject.audioId = this.project.audioLibrary.add(\n      this.project.activeObject.audioData\n    );\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.selectObject(o);\n        return true;\n      }\n    }\n\n    this.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Group, Input } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.width}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                width: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.depth}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                depth: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={3}\n            max={50}\n            value={r.dimensions.height}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                height: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport { Container, ListItem, Main, Sidebar } from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project = new Project({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            scale: o.scale,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  selectRoom(id: number): void {\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = this.project.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\", {\n      width: 10,\n      depth: 10,\n      height: 3\n    });\n    this.project.rooms.push(room);\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = room;\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  onExportClick = () => {\n    saveAsZip(this.project);\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          <div>\n            <button onClick={this.onAddRoomClick}>Add room</button>\n            <button onClick={this.onAddCubeClick}>Add cube</button>\n            <button onClick={this.onExportClick}>Export project</button>\n          </div>\n          <ol>\n            {this.state.rooms.map((r, i) => (\n              <ListItem\n                key={r.id}\n                onClick={() => this.selectRoom(i)}\n                active={i === this.state.selectedRoomId}\n              >\n                {r.name}\n              </ListItem>\n            ))}\n          </ol>\n          {!o && (\n            <RoomEditor\n              room={this.state.rooms[this.state.selectedRoomId]}\n              onUpdateName={this.updateRoomName}\n              onUpdateDimensions={this.updateRoomDimensions}\n            />\n          )}\n          {o && (\n            <ObjectEditor\n              object={o}\n              onUpdateName={this.updateName}\n              onUpdatePosition={this.updatePosition}\n              onUpdateRotation={this.updateRotation}\n              onUpdateScale={this.updateScale}\n              onUpdateAudio={this.updateAudio}\n            />\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}