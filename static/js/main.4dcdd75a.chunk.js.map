{"version":3,"sources":["data/export.ts","project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","utils/openFileDialog.ts","data/import.ts","editor/MenuBar.tsx","utils/math.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","audio/ResAudio.ts","audio/ResListener.ts","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["createZip","project","metadata","toData","zip","Zip","file","JSON","stringify","audioFolder","folder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","audioLibrary","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","toString","err","return","generateAsync","type","saveAsZip","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","sent","saveAs","stop","this","_x","apply","arguments","AudioLibrary","nextId","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","wallGeometry","wallMaterial","Room","length","roomDimensions","width","depth","height","grid","wallNorth","wallEast","wallSouth","wallWest","camera","PerspectiveCamera","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","updateWalls","z","y","Vector3","dimensions","remove","cube","_this$roomDimensions","objects","children","filter","c","map","go","_this2","gameObjects","o","fromData","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","audioType","activeRoom","activeObject","outlineMesh","firstRoom","addCube","push","material","MeshBasicMaterial","color","side","BackSide","multiplyScalar","room","aspect","updateProjectionMatrix","selectObject","geometry","r","openFileDialog","options","Promise","resolve","input","document","createElement","accept","onchange","files","click","getFilesInFolder","forEach","loadZip","_ref","_name","_file","loadAsync","t0","async","t1","parse","parseInt","isNaN","t2","t3","t4","t5","finish","abrupt","openZip","_callee2","_context2","MenuType","Container","styled","div","_templateObject","MenubarItem","_templateObject2","props","isActive","css","_templateObject3","Menu","_templateObject4","MenuItem","_templateObject5","MenuDivider","_templateObject6","MenuBar","state","activeMenu","menuType","setState","react_default","tabIndex","onBlur","closeMenu","FileMenu","onClick","toggleMenu","hidden","onNewProject","onImportProject","onExportProject","EditMenu","onAddObject","onDeleteObject","onAddRoom","onDeleteRoom","alert","ViewMenu","HelpMenu","React","Component","radToDeg","rad","PI","degToRad","deg","roundToPrecision","precision","round","ObjectDragDirection","styled_templateObject","InnerContainer","styled_templateObject2","Sidebar","aside","styled_templateObject3","FocusedLabel","styled_templateObject4","Main","main","styled_templateObject5","Group","styled_templateObject6","Input","_templateObject7","InputGroup","_templateObject8","RoomList","ol","_templateObject9","RoomListItem","li","_templateObject10","active","_templateObject11","ObjectEditor","onAudioFileSelected","e","currentTarget","item","console","log","size","reader","FileReader","onload","result","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","onChange","step","x","toFixed","valueAsNumber","min","ResAudio","audioScene","audioContext","audioSource","source","isPlaying","createBufferSource","loop","createSource","Float32Array","forward","connect","force","prototype","quaternion","Quaternion","orientation","matrixWorld","decompose","applyQuaternion","setPosition","setOrientation","up","src","warn","fetch","resp","arrayBuffer","decodeAudioData","buffer","start","Object3D","Listener","setListenerPosition","setListenerOrientation","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","onKeyUp","delete","button","shiftKey","has","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","DoubleSide","axisGeometry","objectSpread","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","AudioContext","listener","AudioListener","ResonanceAudio","resListener","ResListener","controls","renderer","WebGLRenderer","canvas","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","output","destination","autoClear","setClearColor","Color","stopPropagation","listen","appendChild","cancelAnimationFrame","removeChild","focus","previousAudio","getObjectByName","slice","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","onUpdateDimensions","Editor","projectCanvas","selectedRoomId","selectedObject","mainRef","createRef","onSelectObject","onTranslateObject","onScaleObject","s","updateRoomName","concat","updateRoomDimensions","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","newProject","changeProject","importProject","exportProject","addObject","deleteObject","addRoom","selectRoom","deleteRoom","splice","current","attach","detach","styled_Container","MenuBar_MenuBar","i","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dcdd75a.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioFolder = zip.folder(\"audio\");\n  for (const [key, value] of project.audioLibrary.entries()) {\n    audioFolder.file(key.toString(), value);\n  }\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project) => {\n  const data = await createZip(project);\n  saveAs(data, \"audio3d-project.zip\");\n};\n","/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): number {\n    this.set(this.nextId, data);\n    return this.nextId++;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray(),\n      audioId: this.audioId\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport {\n  AmbientLight,\n  BackSide,\n  BoxGeometry,\n  GridHelper,\n  Group,\n  Mesh,\n  MeshLambertMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PointLight,\n  Scene,\n  Vector3\n} from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\nconst wallGeometry = new BoxGeometry(1, 1, 1);\nconst wallMaterial = new MeshLambertMaterial();\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n  wallNorth = new Mesh(wallGeometry, wallMaterial);\n  wallEast = new Mesh(wallGeometry, wallMaterial);\n  wallSouth = new Mesh(wallGeometry, wallMaterial);\n  wallWest = new Mesh(wallGeometry, wallMaterial);\n  camera = new PerspectiveCamera(60, 1, 0.1, 1000);\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.updateWalls();\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 15, depth: 15, height: 3 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n    this.add(this.grid);\n\n    this.updateWalls();\n    this.add(this.wallNorth);\n    this.add(this.wallEast);\n    this.add(this.wallSouth);\n    this.add(this.wallWest);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n  }\n\n  addCube(): GameObject {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    return cube;\n  }\n\n  updateWalls(): void {\n    const { width, depth, height } = this.roomDimensions;\n\n    this.wallNorth.scale.set(width, height, 0.25);\n    this.wallEast.scale.set(0.25, height, depth);\n    this.wallSouth.scale.set(width, height, 0.25);\n    this.wallWest.scale.set(0.25, height, depth);\n\n    this.wallNorth.position.set(0, height / 2, depth / 2);\n    this.wallEast.position.set(width / 2, height / 2, 0);\n    this.wallSouth.position.set(0, height / 2, -depth / 2);\n    this.wallWest.position.set(-width / 2, height / 2, 0);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  BackSide,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  Vector3\n} from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n\n  rooms: Room[] = [];\n  audioType: number = 1;\n\n  activeRoom: Room;\n  activeObject: GameObject | null = null;\n\n  outlineMesh = new Mesh();\n\n  get camera(): PerspectiveCamera {\n    return this.activeRoom.camera;\n  }\n\n  constructor(public events: ProjectEvents = defaultEvents) {\n    const firstRoom = new Room(this.audioLibrary, \"First room\");\n    firstRoom.addCube();\n    this.rooms.push(firstRoom);\n    this.activeRoom = firstRoom;\n\n    this.outlineMesh.material = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.scale.multiplyScalar(1.05);\n  }\n\n  selectRoom(room: Room): void {\n    room.camera.aspect = this.activeRoom.camera.aspect;\n    room.camera.updateProjectionMatrix();\n    this.activeRoom = room;\n    this.selectObject(null);\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.activeObject) {\n      this.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.activeObject = o;\n    this.events.onSelect(o);\n  }\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n    this.activeRoom = this.rooms[0];\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\n// Options for configuring the file modal\nexport interface OpenFileDialogOptions {\n  accept?: string;\n}\n\n/**\n * Opens a file dialog and lets the user select a file\n * @returns The selected file\n */\nexport const openFileDialog = (\n  options: OpenFileDialogOptions = {}\n): Promise<File> =>\n  new Promise(resolve => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    if (options.accept) {\n      input.accept = options.accept;\n    }\n    input.onchange = () => {\n      if (input.files) {\n        resolve(input.files[0]);\n      }\n    };\n    input.click();\n  });\n","/**\n * @author Niklas Korz\n * This module defines functions for loading and importing projects from the local filesystem.\n */\nimport Zip, { JSZipObject } from \"jszip\";\nimport Project from \"../project/Project\";\nimport { openFileDialog } from \"../utils/openFileDialog\";\n\ninterface FolderItem {\n  name: string;\n  file: JSZipObject;\n}\n\n/**\n * Iterates over all files at the root of a zip folder and returns them as an array.\n */\nconst getFilesInFolder = (folder: Zip): FolderItem[] => {\n  const files: FolderItem[] = [];\n  folder.forEach((name, file) => files.push({ name, file }));\n  return files;\n};\n\n/**\n * Decompresses the given zip file, loads the included JSON metadata and reads all\n * included audio files as binary array buffers.\n * @param data The blob to read from, usually a file returned by a FileReader instance.\n * @returns The project recreated from the data found in the zip\n */\nexport const loadZip = async (data: Blob): Promise<Project> => {\n  const zip = await Zip.loadAsync(data);\n  const metadata = JSON.parse(await zip.file(\"metadata.json\").async(\"text\"));\n\n  const audioFolder = zip.folder(\"audio\");\n  const project = new Project();\n  for (const { name, file } of getFilesInFolder(audioFolder)) {\n    const id = parseInt(name, 10);\n    // Only load files in the audio folder which have a valid id as name\n    if (!isNaN(id)) {\n      project.audioLibrary.set(id, await file.async(\"arraybuffer\"));\n\n      if (id >= project.audioLibrary.nextId) {\n        project.audioLibrary.nextId = id + 1;\n      }\n    }\n  }\n\n  project.fromData(metadata);\n\n  return project;\n};\n\n/**\n * Opens a file dialog and lets the user select a zip file that will be parsed\n * and loaded as a project.\n * @returns The project found in the zip\n */\nexport const openZip = async (): Promise<Project> => {\n  const file = await openFileDialog({ accept: \"application/zip\" });\n  return await loadZip(file);\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 0 0 auto;\n  background: hsl(210, 29%, 15%);\n  color: #fff;\n  font-size: 0.9em;\n  padding: 0 10px;\n  user-select: none;\n\n  :focus {\n    outline: none;\n  }\n`;\n\ninterface MenubarItemProps {\n  isActive?: boolean;\n}\n\nexport const MenubarItem = styled.div<MenubarItemProps>`\n  position: relative;\n  display: inline-block;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 25%, 20%);\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      background: hsl(210, 25%, 20%);\n    `}\n`;\n\nexport const Menu = styled.div`\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  top: 100%;\n  background: hsl(210, 25%, 20%);\n  padding: 5px 0;\n  min-width: 200px;\n  font-size: 0.95em;\n  box-shadow: 5px 5px 8px rgba(0, 0, 0, 0.5);\n\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  cursor: default;\n`;\n\nexport const MenuItem = styled.div`\n  white-space: nowrap;\n  padding: 8px 20px;\n  margin: 2px 0;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 15%);\n  }\n`;\n\nexport const MenuDivider = styled.div`\n  height: 0;\n  margin: 5px;\n  border-bottom: 1px solid hsl(210, 15%, 35%);\n`;\n\ninterface Props {\n  onNewProject(): void;\n  onImportProject(): void;\n  onExportProject(): void;\n\n  onAddObject(): void;\n  onDeleteObject(): void;\n  onAddRoom(): void;\n  onDeleteRoom(): void;\n}\n\nenum MenuType {\n  FileMenu,\n  EditMenu,\n  ViewMenu,\n  HelpMenu\n}\n\ninterface State {\n  activeMenu: MenuType | null;\n}\n\nexport default class MenuBar extends React.Component<Props, State> {\n  state: State = {\n    activeMenu: null\n  };\n\n  toggleMenu(menuType: MenuType): void {\n    this.setState(state => ({\n      activeMenu: state.activeMenu === menuType ? null : menuType\n    }));\n  }\n\n  closeMenu(): void {\n    this.setState({ activeMenu: null });\n  }\n\n  render(): React.ReactNode {\n    const { activeMenu } = this.state;\n\n    return (\n      <Container tabIndex={-1} onBlur={() => this.closeMenu()}>\n        <MenubarItem\n          isActive={activeMenu === MenuType.FileMenu}\n          onClick={() => this.toggleMenu(MenuType.FileMenu)}\n        >\n          File\n          <Menu hidden={activeMenu !== MenuType.FileMenu}>\n            <MenuItem onClick={this.props.onNewProject}>New project</MenuItem>\n            <MenuDivider />\n            <MenuItem>Load project</MenuItem>\n            <MenuItem onClick={this.props.onImportProject}>\n              Import project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>Save project</MenuItem>\n            <MenuItem onClick={this.props.onExportProject}>\n              Export project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>Settings</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.EditMenu}\n          onClick={() => this.toggleMenu(MenuType.EditMenu)}\n        >\n          Edit\n          <Menu hidden={activeMenu !== MenuType.EditMenu}>\n            <MenuItem onClick={this.props.onAddObject}>Add object</MenuItem>\n            <MenuItem onClick={this.props.onDeleteObject}>\n              Delete object\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddRoom}>Add room</MenuItem>\n            <MenuItem onClick={this.props.onDeleteRoom}>Delete room</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={() => alert(\"The kraken will be released\")}>\n              Release the kraken\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.ViewMenu}\n          onClick={() => this.toggleMenu(MenuType.ViewMenu)}\n        >\n          View\n          <Menu hidden={activeMenu !== MenuType.ViewMenu}>\n            <MenuItem>Audio Library</MenuItem>\n            <MenuItem>Project Manager</MenuItem>\n            <MenuDivider />\n            <MenuItem>Toggle Fullscreen</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.HelpMenu}\n          onClick={() => this.toggleMenu(MenuType.HelpMenu)}\n        >\n          Help\n          <Menu hidden={activeMenu !== MenuType.HelpMenu}>\n            <MenuItem>Issues</MenuItem>\n            <MenuItem>Source Code</MenuItem>\n            <MenuDivider />\n            <MenuItem>About</MenuItem>\n          </Menu>\n        </MenubarItem>\n      </Container>\n    );\n  }\n}\n","/**\n * Useful utility functions related to mathematics\n * @author Niklas Korz\n */\n\n// Converts radiant angles to degrees\nexport const radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nexport const degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\nexport const roundToPrecision = (value: number, precision: number) =>\n  Math.round(value / precision) * precision;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InnerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Sidebar = styled.aside`\n  flex: 0 0 300px;\n  height: 100%;\n  background: hsl(210, 29%, 29%);\n  color: #fff;\n  padding: 0 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const FocusedLabel = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  pointer-events: none;\n`;\n\nexport const Main = styled.main`\n  position: relative;\n  flex: 1;\n  height: 100%;\n\n  :focus-within > ${FocusedLabel} {\n    display: block;\n  }\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: hsl(210, 29%, 24%);\n  border-radius: 3px;\n  border: 2px solid hsl(210, 29%, 24%);\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  > ${Input} {\n    flex: 1;\n    width: auto;\n    min-width: 0;\n\n    margin-right: 5px;\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const RoomList = styled.ol`\n  list-style: none;\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 3px;\n  background: hsl(210, 29%, 24%);\n`;\n\ninterface RoomListItemProps {\n  active?: boolean;\n}\n\nexport const RoomListItem = styled.li<RoomListItemProps>`\n  cursor: pointer;\n  padding: 7px 10px;\n  border-radius: 2px;\n  ${props =>\n    props.active &&\n    css`\n      background: hsl(210, 29%, 20%);\n      border-left: 2px solid #3498db;\n    `};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(public project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Object Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.y,\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.y.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  o.position.y,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.x).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.y,\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.y).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.z).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  o.rotation.y,\n                  degToRad(e.currentTarget.valueAsNumber % 360)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.x.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  e.currentTarget.valueAsNumber,\n                  o.scale.y,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.y.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  e.currentTarget.valueAsNumber,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.z.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  o.scale.y,\n                  e.currentTarget.valueAsNumber\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Leon Erath / https://leonerath.de/\n */\n\nimport { ResonanceAudio } from \"resonance-audio\";\nimport { Object3D, Quaternion, Vector3 } from \"three\";\n\n/**\n * Class extends Object3D in order to work with the SceneCanvas.\n * The Idea ist to override the positionChange-Methods and change the ResonanceAudio\n * accordingly.\n */\n\nexport default class ResAudio extends Object3D {\n  audioSource: AudioBufferSourceNode;\n  source: ResonanceAudio.Source;\n  isPlaying: boolean;\n\n  constructor(audioScene: ResonanceAudio, private audioContext: AudioContext) {\n    super();\n    this.audioSource = audioContext.createBufferSource();\n    this.audioSource.loop = true;\n    this.source = audioScene.createSource({\n      position: new Float32Array([0, 1, 3]),\n      forward: new Float32Array([1, 0, 0])\n    });\n    this.audioSource.connect(this.source.input);\n    this.isPlaying = false;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n\n    this.matrixWorld.decompose(position, quaternion, scale);\n\n    console.log(position.x, position.y, position.z);\n\n    orientation.set(0, 0, 1).applyQuaternion(quaternion);\n\n    this.source.setPosition(position.x, position.y, position.z);\n    this.source.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n  }\n\n  async play(src: string): Promise<void> {\n    if (this.isPlaying === true) {\n      console.warn(\"ResAudio: Audio is already playing.\");\n      return;\n    }\n    const resp = await fetch(src);\n    const data = await resp.arrayBuffer();\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    this.audioSource.buffer = buffer;\n    this.audioSource.start();\n    this.isPlaying = true;\n  }\n\n  pause(): void {\n    this.audioSource.stop();\n    this.isPlaying = false;\n  }\n\n  stop(): void {\n    this.audioSource.stop();\n    this.isPlaying = false;\n    this.audioSource.buffer = null;\n  }\n}\n","/**\n * @author Leon Erath / https://leonerath.de/\n */\n\nimport { ResonanceAudio } from \"resonance-audio\";\nimport { Object3D, Quaternion, Vector3 } from \"three\";\n\nexport default class Listener extends Object3D {\n  constructor(private audioScene: ResonanceAudio) {\n    super();\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n\n    this.matrixWorld.decompose(position, quaternion, scale);\n\n    orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n    this.audioScene.setListenerPosition(position.x, position.y, position.z);\n    this.audioScene.setListenerOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport { ResonanceAudio } from \"resonance-audio\";\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport ResAudio from \"../audio/ResAudio\";\nimport ResListener from \"../audio/ResListener\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n  audioType = 1;\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  audioScene = new ResonanceAudio(this.audioContext);\n  resListener = new ResListener(this.audioScene);\n\n  controls: VisualControls;\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.audioScene.output.connect(this.audioContext.destination);\n\n    this.audioType = project.audioType;\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.project.camera.add(this.listener);\n    this.project.camera.add(this.resListener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  changeProject(project: Project): void {\n    this.project = project;\n    this.controls.project = project;\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n    let audio;\n    if (this.audioType === 0) {\n      const previousAudio = this.project.activeObject.getObjectByName(\n        \"audio\"\n      ) as PositionalAudio;\n      if (previousAudio) {\n        this.project.activeObject.remove(previousAudio);\n        previousAudio.stop();\n      }\n\n      if (this.project.activeObject.audioId) {\n        this.project.audioLibrary.delete(this.project.activeObject.audioId);\n      }\n\n      this.project.activeObject.audioData = data.slice(0);\n      this.project.activeObject.audioId = this.project.audioLibrary.add(\n        this.project.activeObject.audioData\n      );\n\n      const buffer = await this.audioContext.decodeAudioData(data);\n\n      audio = new PositionalAudio(this.listener);\n      audio.name = \"audio\";\n      audio.setBuffer(buffer);\n      audio.setLoop(true);\n      audio.play();\n    } else {\n      audio = new ResAudio(this.audioScene, this.audioContext);\n      audio.play(\"/audio/breakbeat.wav\");\n    }\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.project.camera.aspect = offsetWidth / offsetHeight;\n    this.project.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.project.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.project.camera);\n    }\n  };\n\n  update(dt: number): void {\n    const { camera } = this.project;\n\n    if (this.keys.isPressed(\"w\")) {\n      camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.project.selectObject(o);\n        return true;\n      }\n    }\n\n    this.project.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.target!.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.target!.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.project.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.project.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.project.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.project.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Room Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.width}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  width: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.depth}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  depth: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={2}\n              max={10}\n              value={r.dimensions.height}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  height: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n          </InputGroup>\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport { openZip } from \"../data/import\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport MenuBar from \"./MenuBar\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport {\n  Container,\n  FocusedLabel,\n  Group,\n  InnerContainer,\n  Main,\n  RoomList,\n  RoomListItem,\n  Sidebar\n} from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project: Project = new Project();\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  constructor(props: {}) {\n    super(props);\n\n    this.project.events = {\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n  }\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n      this.projectCanvas.focus();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  onSelectObject = (o: GameObject | null) => {\n    if (o) {\n      this.setState({\n        selectedObject: {\n          id: o.id,\n          name: o.name,\n          position: o.position,\n          scale: o.scale,\n          rotation: o.rotation\n        }\n      });\n    } else {\n      this.setState({ selectedObject: null });\n    }\n  };\n\n  onTranslateObject = (p: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: p\n      }\n    }));\n  };\n\n  onScaleObject = (s: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        size: {\n          width: s.x,\n          height: s.y,\n          depth: s.z\n        }\n      }\n    }));\n  };\n\n  selectRoom(id: number): void {\n    this.project.selectRoom(this.project.rooms[id]);\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  newProject = () => {\n    this.project = new Project({\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    });\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions\n      })),\n      selectedRoomId: 0,\n      selectedObject: null\n    });\n  };\n\n  importProject = async () => {\n    this.project = await openZip();\n    this.project.events = {\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions\n      })),\n      selectedRoomId: 0,\n      selectedObject: null\n    });\n  };\n\n  exportProject = () => {\n    saveAsZip(this.project);\n  };\n\n  addObject = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  deleteObject = () => {\n    if (this.project.activeObject) {\n      this.project.activeRoom.remove(this.project.activeObject);\n      this.project.activeObject = null;\n      this.setState({ selectedObject: null });\n    }\n  };\n\n  addRoom = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\");\n    room.addCube();\n    this.project.rooms.push(room);\n    this.project.selectRoom(room);\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  deleteRoom = () => {\n    // Ensure the first room cannot be deleted\n    if (this.state.selectedRoomId > 0) {\n      this.project.rooms.splice(this.state.selectedRoomId, 1);\n      this.setState(s => ({\n        rooms: [\n          ...s.rooms.slice(0, s.selectedRoomId),\n          ...s.rooms.slice(s.selectedRoomId + 1)\n        ],\n        selectedRoomId: 0\n      }));\n    }\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <MenuBar\n          onNewProject={this.newProject}\n          onImportProject={this.importProject}\n          onExportProject={this.exportProject}\n          onAddObject={this.addObject}\n          onDeleteObject={this.deleteObject}\n          onAddRoom={this.addRoom}\n          onDeleteRoom={this.deleteRoom}\n        />\n        <InnerContainer>\n          <Sidebar>\n            <Group>\n              <label>Rooms</label>\n              <RoomList>\n                {this.state.rooms.map((r, i) => (\n                  <RoomListItem\n                    key={r.id}\n                    onClick={() => this.selectRoom(i)}\n                    active={i === this.state.selectedRoomId}\n                  >\n                    {r.name || \"Anonymous Room\"}\n                  </RoomListItem>\n                ))}\n              </RoomList>\n            </Group>\n            {!o && (\n              <RoomEditor\n                room={this.state.rooms[this.state.selectedRoomId]}\n                onUpdateName={this.updateRoomName}\n                onUpdateDimensions={this.updateRoomDimensions}\n              />\n            )}\n            {o && (\n              <ObjectEditor\n                object={o}\n                onUpdateName={this.updateName}\n                onUpdatePosition={this.updatePosition}\n                onUpdateRotation={this.updateRotation}\n                onUpdateScale={this.updateScale}\n                onUpdateAudio={this.updateAudio}\n              />\n            )}\n          </Sidebar>\n          <Main ref={this.mainRef}>\n            <FocusedLabel>Focused</FocusedLabel>\n          </Main>\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}