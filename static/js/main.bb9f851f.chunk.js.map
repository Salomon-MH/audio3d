{"version":3,"sources":["3d/VisualControls.ts","3d/Room.tsx","input/GamepadListener.ts","input/KeyboardListener.ts","3d/SceneCanvas.ts","editor/styled.ts","editor/ObjectEditor.tsx","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["ObjectDragDirection","Room","name","roomDimensions","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","grid","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","ambientLight","AmbientLight","add","light","PointLight","position","set","lookAt","gridSize","Math","max","width","depth","GridHelper","addCube","dimensions","remove","cube","Mesh","y","Scene","GamepadListener","onGamepadConnected","e","console","log","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","mapping","axis","axes","abs","v1","buttons","err","return","KeyboardListener","target","keysPressed","Set","lastKeyUp","Map","reset","clear","onKeyDown","preventDefault","timeStamp","get","key","onKeyUp","delete","onClick","button","shiftKey","document","has","MouseButton","VisualControls","events","activeMesh","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","rotation","PI","userData","direction","AxisX","x","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","children","intersection","o","object","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","c","p","altPlane","z","distanceToPoint","origin","intersectPlane","scale","min","onScale","onTranslate","SceneCanvas","room","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","focus","cancelAnimationFrame","removeChild","stop","geometry","onSelect","data","previousAudio","getObjectByName","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","isMesh","selectMesh","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","ObjectEditor","onAudioFileSelected","files","currentTarget","file","item","reader","FileReader","onload","result","props","onUpdateAudio","error","readAsArrayBuffer","_this$props","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","react_default","a","createElement","type","onChange","step","valueAsNumber","accept","React","Component","RoomEditor","r","onUpdateDimensions","height","Editor","rooms","sceneCanvas","setState","selectedObject","id","s","_ref2","state","map","selectedRoomId","mainRef","createRef","updateRoomName","_ref3","concat","toConsumableArray","slice","updateRoomDimensions","_ref4","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","push","length","onAddCubeClick","current","attach","detach","_this2","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb9f851f.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\nexport interface VisualControlsEvents {\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  activeMesh: Mesh | null = null;\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private events: VisualControlsEvents) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.activeMesh) {\n      return null;\n    }\n\n    this.position.copy(this.activeMesh.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset.copy(intersection.point).sub(this.activeMesh.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.activeMesh) {\n      return;\n    }\n\n    const c = this.activeMesh.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.activeMesh.scale.x = Math.min(\n            Math.max(\n              this.activeMesh.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.activeMesh.scale.y = Math.min(\n            Math.max(\n              this.activeMesh.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.activeMesh.scale.z = Math.min(\n            Math.max(\n              this.activeMesh.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.events.onScale(this.activeMesh.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.activeMesh.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.activeMesh.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.activeMesh.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.activeMesh.position.copy(point);\n      }\n\n      this.events.onTranslate(this.activeMesh.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","import { RoomDimensions } from \"resonance-audio\";\nimport {\n  AmbientLight,\n  BoxGeometry,\n  GridHelper,\n  Mesh,\n  MeshLambertMaterial,\n  PointLight,\n  Scene\n} from \"three\";\n\nexport default class Room extends Scene {\n  grid: GridHelper;\n  cubeGeometry = new BoxGeometry(1, 1, 1);\n  cubeMaterial = new MeshLambertMaterial();\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(name: string, private roomDimensions: RoomDimensions) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.addCube();\n  }\n\n  addCube(): void {\n    const cube = new Mesh(this.cubeGeometry, this.cubeMaterial);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    // this.selectMesh(cube);\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport Room from \"./Room\";\nimport VisualControls, { VisualControlsEvents } from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\ninterface Events extends VisualControlsEvents {\n  onSelect(object: Mesh | null): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  controls = new VisualControls({\n    onTranslate: this.events.onTranslate,\n    onScale: this.events.onScale\n  });\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(public room: Room, public events: Events) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  selectMesh(o: Mesh | null): void {\n    if (this.controls.activeMesh) {\n      this.controls.activeMesh.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.controls.activeMesh = o;\n    this.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.controls.activeMesh) {\n      return;\n    }\n\n    const previousAudio = this.controls.activeMesh.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.controls.activeMesh.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.controls.activeMesh.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.room, this.camera);\n\n    if (this.controls.activeMesh) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.controls.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(this.room.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.selectMesh(o);\n        return true;\n      }\n    }\n\n    this.selectMesh(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nexport const Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: #2c3e50;\n  border-radius: 3px;\n  border: 2px solid #2c3e50;\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n","import React from \"react\";\nimport { Group, Input } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.x}\n            onChange={e =>\n              onUpdatePosition(\n                e.currentTarget.valueAsNumber,\n                o.position.y,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.y}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                e.currentTarget.valueAsNumber,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.z}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                o.position.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Euler-Rotation (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.rotation.x}\n            onChange={e =>\n              onUpdateRotation(\n                e.currentTarget.valueAsNumber,\n                o.rotation.y,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.rotation.y}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                e.currentTarget.valueAsNumber,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.rotation.z}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                o.rotation.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.x}\n            onChange={e =>\n              onUpdateScale(e.currentTarget.valueAsNumber, o.scale.y, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.y}\n            onChange={e =>\n              onUpdateScale(o.scale.x, e.currentTarget.valueAsNumber, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.z}\n            onChange={e =>\n              onUpdateScale(o.scale.x, o.scale.y, e.currentTarget.valueAsNumber)\n            }\n          />\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Group, Input } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.width}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                width: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.depth}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                depth: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={3}\n            max={50}\n            value={r.dimensions.height}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                height: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport Room from \"../3d/Room\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport RoomEditor from \"./RoomEditor\";\nimport { Container, Main, Sidebar } from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  rooms: Room[] = [new Room(\"First room\", { width: 15, depth: 10, height: 3 })];\n  sceneCanvas = new SceneCanvas(this.rooms[0], {\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            scale: o.scale,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n\n  state: State = {\n    rooms: this.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.sceneCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  selectRoom(id: number): void {\n    this.sceneCanvas.selectMesh(null);\n    this.sceneCanvas.room = this.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.sceneCanvas.room.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.sceneCanvas.room.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.sceneCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(\"New room\", { width: 10, depth: 10, height: 3 });\n    this.rooms.push(room);\n    this.sceneCanvas.selectMesh(null);\n    this.sceneCanvas.room = room;\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.sceneCanvas.room.addCube();\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          <div>\n            <button onClick={this.onAddRoomClick}>Add room</button>\n            <button onClick={this.onAddCubeClick}>Add cube</button>\n          </div>\n          <ol>\n            {this.state.rooms.map((r, i) => (\n              <li\n                key={r.id}\n                onClick={() => this.selectRoom(i)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {r.name}\n              </li>\n            ))}\n          </ol>\n          {!o && (\n            <RoomEditor\n              room={this.state.rooms[this.state.selectedRoomId]}\n              onUpdateName={this.updateRoomName}\n              onUpdateDimensions={this.updateRoomDimensions}\n            />\n          )}\n          {o && (\n            <ObjectEditor\n              object={o}\n              onUpdateName={this.updateName}\n              onUpdatePosition={this.updatePosition}\n              onUpdateRotation={this.updateRotation}\n              onUpdateScale={this.updateScale}\n              onUpdateAudio={this.updateAudio}\n            />\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}