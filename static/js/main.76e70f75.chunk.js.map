{"version":3,"sources":["audio/AudioImplementation.ts","data/export.ts","data/db.ts","audio/DistanceModel.ts","audio/defaultAudioContext.ts","utils/iter.ts","project/GameObject.ts","project/AudioLibrary.ts","project/CodeBlock.ts","utils/math.ts","audio/binaural/BinauralSource.ts","audio/binaural/BinauralScene.ts","audio/Audio3D.ts","audio/Listener3D.ts","audio/binaural/hrtf.ts","audio/AudioScene.ts","project/SpawnMarker.ts","project/Room.ts","project/Project.ts","utils/files.ts","data/import.ts","input/GamepadListener.ts","input/KeyboardListener.ts","runtime/Runtime.ts","runtime/styled.ts","runtime/RuntimeContainer.tsx","editor/Modal.tsx","editor/AudioFileModal.tsx","editor/AudioLibraryModal.tsx","editor/MenuBar.tsx","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","editor/EditorCanvas.ts","editor/RoomEditor.tsx","editor/ProjectInfoModal.tsx","editor/ProjectManagerModal.tsx","editor/SettingsModal.tsx","editor/Editor.tsx","editor/SpawnEditor.tsx","serviceWorker.ts","index.tsx"],"names":["AudioImplementation","createZip","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","project","metadata","zip","audioLibrary","audioFolder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_value2","_value3","key","value","wrap","_context","prev","next","toData","Zip","file","JSON","stringify","folder","asyncIterator","entries","sent","done","slicedToArray","push","id","name","type","toString","data","t0","return","finish","abrupt","generateAsync","stop","this","_x","apply","arguments","saveAsZip","_ref2","_callee2","_context2","saveAs","concat","_x2","dbPromise","openDB","upgrade","db","oldVersion","deleteObjectStore","createObjectStore","keyPath","autoIncrement","createIndex","saveProject","put","_x3","deleteProject","_ref3","_callee3","tx","projects","audios","cursor","_context3","transaction","objectStore","delete","index","openKeyCursor","primaryKey","continue","_x4","getAllProjects","_ref4","_callee4","_context4","getAllFromIndex","loadAudio","_ref5","_callee5","projectId","audioId","_context5","get","_x5","_x6","saveAudio","_ref6","_callee6","audio","_context6","_x7","saveAudioMap","_ref7","_callee7","audioMap","_ref10","_ref9","entry","_context7","undefined","Symbol","iterator","store","objectSpread","_x8","_x9","deleteAudio","_ref11","_callee8","_context8","_x10","_x11","_callee9","_context9","awaitAsyncGenerator","openCursor","DistanceModel","defaultAudioContext","AudioContext","element","InteractionType","AudioLibrary","Map","nextId","set","clear","_iterateProjectAudios","iterateProjectAudios","_wrapIteratorAsync","wrapIteratorAsync","CodeBlock","source","length","classCallCheck","func","object","roomState","Function","call","playerState","ex","console","error","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","audioScene","_this","possibleConstructorReturn","getPrototypeOf","audioFile","interactionType","None","interactionAudioId","codeBlock","teleportTarget","createAudio3D","add","execute","activeRoom","Teleport","_this$teleportTarget","roomId","spawnId","teleportPlayer","playAudio","PlaySound","loop","decodeAudioData","slice","buffer","setBuffer","setLoop","play","log","uuid","position","toArray","scale","rotation","codeBlockSource","Mesh","radToDeg","rad","Math","PI","degToRad","deg","roundToPrecision","precision","round","BinauralSource","scene","Vector3","orientation","binauralFIR","BinauralFIR","audioContext","HRTFDataset","hrtfDataset","connect","destination","input","listenerAzimuth","atan2","listenerOrientation","x","z","distance","listenerPosition","deltaZ","azimuth","atan","elevation","asin","y","setPosition","dummyHRTFDataset","createBuffer","sampleRate","BinauralScene","sources","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","update","Audio3D","webAudioContext","binauralAudioContext","resonanceAudioContext","webAudioPannerNode","binauralSource","resonanceSource","webAudioBufferSource","binauralBufferSource","resonanceBufferSource","hasStarted","isPlaying","onAudioEnded","createBufferSource","onended","distanceModel","force","esm_get","prototype","quaternion","Quaternion","matrixWorld","decompose","applyQuaternion","setOrientation","copy","setFromMatrix","start","disconnect","Object3D","Listener3D","webAudioListener","binauralScene","resonanceScene","up","setListenerFromMatrix","firCoefficientsToAudioBuffer","firCoeffsLeft","firCoeffsRight","copyToChannel","Float32Array","loadHRTFDataset","resp","dataset","fetch","json","map","hrtf","fir_coeffs_left","fir_coeffs_right","AudioScene","options","audioImplementation","WebAudio","ResonanceAudio","binauralHRTFDataset","isLoadingBinauralHRTFDataset","listener3D","listener","setRoomProperties","dimensions","Utils","DEFAULT_ROOM_DIMENSIONS","materials","DEFAULT_ROOM_MATERIALS","output","suspend","createPanner","createSource","close","resume","Binaural","loadBinauralHRTFDataset","setHRTFDataset","roomDimensions","roomMaterials","spawnGeometry","spawnMaterial","color","directionGeometry","SpawnMarker","directionMarker","wallGeometry","wallMaterial","Room","width","depth","height","grid","wallNorth","wallEast","wallSouth","wallWest","camera","PerspectiveCamera","collisionAudio","footstepAudio","interactAvailAudio","spawns","ambientLight","AmbientLight","light","PointLight","lookAt","gridSize","max","GridHelper","updateWalls","remove","marker","_this$roomDimensions","s","objects","children","filter","c","go","_this2","fromData","toConsumableArray","addSpawn","gameObjects","o","Scene","noop","defaultEvents","onSelectSpawn","onSelectObject","onScale","onTranslate","Project","events","Inverse","rooms","audioType","playerHeight","collisionAudioID","footstepAudioID","interactAvailAudioID","collisionAudioFile","footstepAudioFile","interactAvailAudioFile","collisionAudioBuffer","footstepAudioBuffer","interactAvailAudioBuffer","activeAudioImplementation","activeSpawn","activeObject","outlineMesh","firstRoom","addObject","material","MeshBasicMaterial","side","BackSide","multiplyScalar","window","p","room","selectRoom","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","obj","setDistanceModel","selectAudioImplementation","aspect","updateProjectionMatrix","unselect","geometry","find","r","spawn","savedAt","Date","nextAudioId","i","saveToProject","_iterator4","_iteratorNormalCompletion4","_step4","_iterator5","_iteratorNormalCompletion5","_step5","_iterator6","_iteratorNormalCompletion6","_step6","openFileDialog","Promise","resolve","document","createElement","accept","onchange","files","click","readFileAsArrayBuffer","reader","FileReader","onload","result","onerror","readAsArrayBuffer","loadZip","blob","loadAsync","async","t1","parse","t2","t3","t4","openZip","GamepadListener","onGamepadConnected","e","gamepad","onGamepadDisconnected","addEventListener","removeEventListener","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","pressed","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","onKeyDown","preventDefault","timeStamp","onKeyUp","onClick","button","shiftKey","has","Runtime","rafHandle","previousTimestamp","lastCollisionSound","lastKnownButtonStatus","shouldRender","renderer","WebGLRenderer","canvas","raycaster","Raycaster","dummyCamera","keys","domElement","resize","_this$target","offsetWidth","offsetHeight","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","render","updateMatrixWorld","tabIndex","listen","appendChild","cancelAnimationFrame","removeChild","focus","check","from","to","min","toInteractWith","triggerInteraction","moveX","moveZ","rotateY","isPressed","newZ","newX","newY","gamepadAxes","getAxis","rotateOnWorldAxis","translateOnAxis","collided","bbox","Box3","setFromObject","bboxposition","getCenter","bboxscale","getSize","boundX1","boundX2","boundY1","boundY2","boundZ1","boundZ2","isBetween","now","nearestDist","Infinity","nearestObj","setFromCamera","intersections","intersectObjects","intersection","selectObject","getButtonStatus","invokeInteraction","FocusedLabel","styled","div","_templateObject","RunningLabel","_templateObject2","RunningHeadline","_templateObject3","RunningButtonContainer","_templateObject4","RunningButton","_templateObject5","props","selected","css","_templateObject6","_templateObject7","ControlsTable","table","_templateObject8","Main","main","_templateObject9","RuntimeContainer","targetRef","React","createRef","runtime","activeButtonRef","state","onExit","detach","onVisualToggle","toggleRendering","onChangeAudio","event","setState","current","attach","react_default","ref","Component","Backdrop","Modal_templateObject","Container","Modal_templateObject2","TitleBar","Modal_templateObject3","Content","Modal_templateObject4","ActionGroup","Modal_templateObject5","Action","Modal_templateObject6","Modal","onBackdropClick","currentTarget","onDismiss","title","AudioFileModal","audioEntry","Modal_Modal","ceil","byteLength","onDelete","onExport","onCancel","AudioList","AudioLibraryModal_templateObject","AudioItem","AudioLibraryModal_templateObject2","AudioLibraryModal","previewAudio","Audio","selectedEntry","openAudioFileDialog","stopPreview","pause","URL","revokeObjectURL","src","dismiss","unselectEntry","exportAudio","Blob","createObjectURL","onSelect","sort","b","updateEntries","prevProps","_this$state","AudioFileModal_AudioFileModal","selectEntry","onMouseEnter","previewEntry","onMouseLeave","MenuType","MenuBar_templateObject","MenubarItem","MenuBar_templateObject2","isActive","MenuBar_templateObject3","alignRight","MenuBar_templateObject4","MenubarItemLabel","label","MenuBar_templateObject5","Menu","MenuBar_templateObject6","MenuItem","MenuBar_templateObject7","MenuDivider","MenuBar_templateObject8","MenuBar","activeMenu","menuType","_this$props","onAudioChange","MenuBar_Container","onBlur","closeMenu","FileMenu","toggleMenu","hidden","onNewProject","onLoadProject","onImportProject","onSaveProject","onExportProject","onShowSettings","EditMenu","onAddObject","onDeleteObject","onAddSpawn","onDeleteSpawn","onAddRoom","onDeleteRoom","ViewMenu","onShowAudioLibrary","onShowProjectManager","HelpMenu","open","onRunProject","AudioMenu","ControlMode","ObjectDragDirection","styled_templateObject","InnerContainer","styled_templateObject2","styled_templateObject3","styled_templateObject4","Sidebar","aside","styled_templateObject5","Group","styled_templateObject6","Hint","styled_templateObject7","Input","styled_templateObject8","Select","withComponent","styled_templateObject9","CustomInput","_templateObject10","CodeEditor","_templateObject11","InputGroup","_templateObject12","RoomList","ol","_templateObject13","RoomListItem","li","_templateObject14","active","_templateObject15","ObjectEditor","codeCheckTimeout","checkCode","codeError","updateCodeBlockSource","onUpdateCodeBlockSource","clearTimeout","setTimeout","updateTeleportTargetRoomId","onUpdateTeleportTarget","updateTeleportTargetSpawnId","_this$props2","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","onUpdateInteractionType","onShowAudioSelection","onShowInteractionAudioSelection","teleportTargetRoom","placeholder","onChange","step","toFixed","valueAsNumber","values","Fragment","interactionAudio","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","DoubleSide","axisGeometry","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","controlMode","RestrictedXZ","visible","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","altPlane","distanceToPoint","origin","intersectPlane","EditorCanvas","controls","isDraggingCamera","setMode","Normal","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","stopPropagation","selectSpawn","size","Vector2","pageX","offsetLeft","pageY","offsetTop","ROOM_MATERIAL_COEFFICIENTS","RoomEditor","propertyName","onUpdateMaterials","defineProperty","onUpdateDimensions","materialOptions","ce","left","selectMaterialHandler","right","front","back","down","ProjectInfoModal","toLocaleString","TableContainer","ProjectManagerModal_templateObject","Table","ProjectManagerModal_templateObject2","TableHead","thead","ProjectManagerModal_templateObject3","TableRow","tr","ProjectManagerModal_templateObject4","ColumnHead","th","ProjectManagerModal_templateObject5","ColumnData","td","ProjectManagerModal_templateObject6","ProjectManagerModal","selectedProject","unselectProject","exportProject","onSelectProject","reverse","ProjectInfoModal_ProjectInfoModal","selectProject","AudioSelectionTarget","SettingsModal_templateObject","ModalType","SettingsModal","Linear","selectDistanceModel","hideAudioSelection","audioSelectionTarget","selectAudio","Footstep","setFootstepAudio","Collision","setCollisionAudio","InteractAvail","setInteractAvailAudio","onProjectChanged","AudioLibraryModal_AudioLibraryModal","SettingsModal_InnerContainer","Exponential","SpawnEditor","Editor","projectCanvas","selectedRoomId","selectedSpawn","selectedObject","modal","runningProject","ObjectAudio","mainRef","newProject","onTranslateObject","onScaleObject","changeProject","showProjectSelection","ProjectSelection","prompt","save","importProject","_project","alert","deleteObject","deleteSpawn","splice","indexOf","addRoom","deleteRoom","showAudioLibrary","showProjectManager","ProjectManager","runProject","showSettings","Settings","updateRoomName","updateRoomDimensions","updateRoomMaterials","updateSpawnName","updateSpawnPosition","_ref8","updateSpawnRotation","updateObjectName","updateObjectScale","updateObjectPosition","_ref12","updateObjectRotation","_ref13","Euler","updateObjectInteractionType","defaultTarget","_ref14","updateObjectCodeBlockSource","_ref15","updateObjectTeleportTarget","_ref16","showAudioSelection","AudioSelection","showInteractionAudioSelection","InteractionAudio","dismissModal","_ref17","_ref18","loadProject","_ref19","_ref20","_ref21","exitRuntime","attachCanvas","_this$state2","RuntimeContainer_RuntimeContainer","styled_Container","ProjectManagerModal_ProjectManagerModal","SettingsModal_SettingsModal","MenuBar_MenuBar","RoomEditor_RoomEditor","SpawnEditor_SpawnEditor","ObjectEditor_ObjectEditor","styled_Main","styled_FocusedLabel","Boolean","location","hostname","match","webkitAudioContext","nw","w","Window","maximize","on","frame","url","policy","ignore","Shell","openExternal","confirm","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76e70f75.chunk.js","sourcesContent":["enum AudioImplementation {\n  WebAudio = \"Web Audio API\",\n  Binaural = \"BinauralFIR\",\n  ResonanceAudio = \"Resonance Audio\"\n}\n\nexport default AudioImplementation;\n","/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = async (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioLibrary: Array<{ id: number; name: string; type: string }> = [];\n  const audioFolder = zip.folder(\"audio\");\n  for await (const [key, value] of project.audioLibrary.entries()) {\n    audioLibrary.push({ id: key, name: value.name, type: value.type });\n    audioFolder.file(key.toString(), value.data);\n  }\n  zip.file(\"audioLibrary.json\", JSON.stringify(audioLibrary));\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project): Promise<void> => {\n  const data = await createZip(project);\n  saveAs(data, `${project.name}.audio3d.zip`);\n};\n","/**\n * @author Niklas Korz\n * Module for loading and saving projects and audio files from/to IndexedDB.\n */\nimport { openDB } from \"idb\";\nimport Project from \"../project/Project\";\nimport { Schema, AudioWithIds, AudioFile, ProjectData } from \"./schema\";\n\nconst dbPromise = openDB<Schema>(\"audio3d\", 2, {\n  upgrade(db, oldVersion) {\n    if (oldVersion === 1) {\n      // Version 1 didn't store the unique ids of rooms and objects.\n      // As we can't retrieve them, we'll delete any old versions of the\n      // database here.\n      db.deleteObjectStore(\"projects\");\n      db.deleteObjectStore(\"audios\");\n    }\n\n    const projectStore = db.createObjectStore(\"projects\", {\n      keyPath: \"id\",\n      autoIncrement: true\n    });\n    projectStore.createIndex(\"savedAt\", \"savedAt\");\n    const audioStore = db.createObjectStore(\"audios\", {\n      keyPath: [\"projectId\", \"audioId\"]\n    });\n    audioStore.createIndex(\"project\", \"projectId\");\n  }\n});\n\nexport const loadProject = async (id: number): Promise<Project | undefined> => {\n  const db = await dbPromise;\n  const data = await db.get(\"projects\", id);\n  return data && new Project().fromData(data);\n};\n\nexport const saveProject = async (project: Project): Promise<number> => {\n  const db = await dbPromise;\n  const data = project.toData();\n  if (project.id) {\n    data.id = project.id;\n  }\n  return await db.put(\"projects\", data);\n};\n\nexport const deleteProject = async (id: number): Promise<void> => {\n  const db = await dbPromise;\n  // Database transaction\n  const tx = db.transaction([\"audios\", \"projects\"], \"readwrite\");\n  // Object stores\n  const projects = tx.objectStore(\"projects\");\n  const audios = tx.objectStore(\"audios\");\n\n  // Delete project\n  await projects.delete(id);\n\n  // Delete all related audio files\n  let cursor = await audios.index(\"project\").openKeyCursor(id);\n  while (cursor) {\n    await audios.delete(cursor.primaryKey);\n    cursor = await cursor.continue();\n  }\n\n  await tx.done;\n};\n\nexport const getAllProjects = async (): Promise<ProjectData[]> => {\n  const db = await dbPromise;\n  return await db.getAllFromIndex(\"projects\", \"savedAt\");\n};\n\nexport const loadAudio = async (\n  projectId: number,\n  audioId: number\n): Promise<AudioWithIds | undefined> => {\n  const db = await dbPromise;\n  const data = await db.get(\"audios\", [projectId, audioId]);\n  return data;\n};\n\nexport const saveAudio = async (audio: AudioWithIds): Promise<void> => {\n  const db = await dbPromise;\n  await db.put(\"audios\", audio);\n};\n\nexport const saveAudioMap = async (\n  projectId: number,\n  audioMap: Map<number, AudioFile>\n): Promise<void> => {\n  const db = await dbPromise;\n  const tx = db.transaction(\"audios\", \"readwrite\");\n  for (const [audioId, entry] of audioMap.entries()) {\n    tx.store.put({ ...entry, projectId, audioId });\n  }\n  await tx.done;\n};\n\nexport const deleteAudio = async (\n  projectId: number,\n  audioId: number\n): Promise<void> => {\n  const db = await dbPromise;\n  await db.delete(\"audios\", [projectId, audioId]);\n};\n\nexport async function* iterateProjectAudios(\n  projectId: number\n): AsyncIterableIterator<[number, AudioFile]> {\n  const db = await dbPromise;\n  const tx = db.transaction(\"audios\");\n  let cursor = await tx.store.index(\"project\").openCursor(projectId);\n  while (cursor) {\n    yield [cursor.value.audioId, cursor.value];\n    cursor = await cursor.continue();\n  }\n  await tx.done;\n}\n","enum DistanceModel {\n  Linear = \"linear\",\n  Inverse = \"inverse\",\n  Exponential = \"exponential\"\n}\n\nexport default DistanceModel;\n","const defaultAudioContext = new AudioContext();\n\nexport default defaultAudioContext;\n","/**\n * @author Niklas Korz\n * This modules defines utility functions for working with iterators\n */\n\n/**\n * Wraps an IterableIterator in an AsyncIterableIterator\n * @param iterator The iterator to be wrapped\n */\nexport async function* wrapIteratorAsync<T>(\n  iterator: IterableIterator<T>\n): AsyncIterableIterator<T> {\n  for (const element of iterator) {\n    yield element;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { ObjectData, AudioFile } from \"../data/schema\";\nimport AudioScene from \"../audio/AudioScene\";\nimport Audio3D from \"../audio/Audio3D\";\nimport defaultAudioContext from \"../audio/defaultAudioContext\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport CodeBlock from \"./CodeBlock\";\nimport Project from \"./Project\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport enum InteractionType {\n  None = \"No interaction\",\n  PlaySound = \"Play sound\",\n  Teleport = \"Teleport\",\n  CodeBlock = \"Code block\"\n}\n\nexport interface TeleportTarget {\n  roomId: string;\n  spawnId: string;\n}\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioLibrary: AudioLibrary;\n  audioId?: number;\n  audioFile?: AudioFile;\n\n  audio: Audio3D;\n\n  // Interaction specific\n  interactionType = InteractionType.None;\n  interactionAudioId?: number;\n  codeBlock?: CodeBlock;\n  teleportTarget?: TeleportTarget;\n\n  constructor(audioLibrary: AudioLibrary, audioScene: AudioScene) {\n    super(cubeGeometry, cubeMaterial);\n    this.audioLibrary = audioLibrary;\n\n    this.audio = audioScene.createAudio3D();\n    this.add(this.audio);\n  }\n\n  triggerInteraction(project: Project): void {\n    switch (this.interactionType) {\n      case InteractionType.CodeBlock:\n        if (this.codeBlock) {\n          this.codeBlock.execute(this, project, project.activeRoom.roomState);\n        }\n        break;\n      case InteractionType.Teleport:\n        if (this.teleportTarget) {\n          const { roomId, spawnId } = this.teleportTarget;\n          project.teleportPlayer(roomId, spawnId);\n        }\n        if (this.interactionAudioId != null) {\n          this.playAudio(this.interactionAudioId);\n        }\n        break;\n      case InteractionType.PlaySound:\n        if (this.interactionAudioId != null) {\n          this.playAudio(this.interactionAudioId);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async playAudio(id: number, loop: boolean = false): Promise<void> {\n    this.audioId = id;\n    this.audioFile = await this.audioLibrary.get(id);\n    if (this.audioFile) {\n      const buffer = await defaultAudioContext.decodeAudioData(\n        this.audioFile.data.slice(0)\n      );\n      this.audio.setBuffer(buffer);\n      this.audio.setLoop(loop);\n      this.audio.play();\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  toData(): ObjectData {\n    return {\n      uuid: this.uuid,\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray().slice(0, 3),\n      audioId: this.audioId,\n      interactionType: this.interactionType,\n      interactionAudioId: this.interactionAudioId,\n      codeBlockSource: this.codeBlock && this.codeBlock.source,\n      teleportTarget: this.teleportTarget\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.uuid = data.uuid != null ? data.uuid : this.uuid;\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n\n    if (data.audioId != null) {\n      this.playAudio(data.audioId, true);\n    }\n\n    this.interactionType = data.interactionType || InteractionType.None;\n    this.interactionAudioId = data.interactionAudioId;\n    if (data.codeBlockSource) {\n      this.codeBlock = new CodeBlock(data.codeBlockSource);\n    }\n    this.teleportTarget = data.teleportTarget;\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { AudioFile } from \"../data/schema\";\nimport {\n  saveAudio,\n  loadAudio,\n  deleteAudio,\n  saveAudioMap,\n  iterateProjectAudios\n} from \"../data/db\";\nimport { wrapIteratorAsync } from \"../utils/iter\";\n\nexport default class AudioLibrary {\n  projectId?: number;\n  audioMap = new Map<number, AudioFile>();\n  nextId = 0;\n\n  async add(entry: AudioFile): Promise<number> {\n    if (this.projectId != null) {\n      await saveAudio({\n        ...entry,\n        projectId: this.projectId,\n        audioId: this.nextId\n      });\n    } else {\n      this.audioMap.set(this.nextId, entry);\n    }\n    return this.nextId++;\n  }\n\n  async get(id: number): Promise<AudioFile | undefined> {\n    if (this.projectId != null) {\n      return await loadAudio(this.projectId, id);\n    }\n    return this.audioMap.get(id);\n  }\n\n  async set(id: number, entry: AudioFile): Promise<void> {\n    if (this.projectId != null) {\n      await loadAudio(this.projectId, id);\n    } else {\n      this.audioMap.set(id, entry);\n    }\n  }\n\n  async delete(id: number): Promise<void> {\n    if (this.projectId != null) {\n      await deleteAudio(this.projectId, id);\n    } else {\n      this.audioMap.delete(id);\n    }\n  }\n\n  async saveToProject(projectId: number): Promise<void> {\n    this.projectId = projectId;\n    await saveAudioMap(projectId, this.audioMap);\n    this.audioMap.clear();\n  }\n\n  entries(): AsyncIterableIterator<[number, AudioFile]> {\n    if (this.projectId != null) {\n      return iterateProjectAudios(this.projectId);\n    }\n    return wrapIteratorAsync(this.audioMap.entries());\n  }\n}\n","import GameObject from \"./GameObject\";\nimport Project from \"./Project\";\n\n/**\n * @author Niklas Korz\n */\nexport default class CodeBlock {\n  source: string;\n  func?: Function;\n\n  constructor(source: string = \"\") {\n    this.source = source;\n  }\n\n  update(source: string): void {\n    this.source = source;\n    this.func = undefined;\n  }\n\n  execute(\n    object: GameObject,\n    project: Project,\n    roomState: Map<string, any>\n  ): void {\n    try {\n      if (!this.func) {\n        this.func = new Function(\n          \"game\",\n          \"playerState\",\n          \"roomState\",\n          this.source\n        );\n      }\n      // The first parameter is the \"this\" object\n      this.func.call(object, project, project.playerState, roomState);\n    } catch (ex) {\n      console.error(\n        \"Execution of code block failed with error:\",\n        ex,\n        \"object:\",\n        object,\n        \"project:\",\n        project,\n        \"roomState:\",\n        roomState\n      );\n    }\n  }\n}\n","/**\n * Useful utility functions related to mathematics\n * @author Niklas Korz\n */\n\n// Converts radiant angles to degrees\nexport const radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nexport const degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\nexport const roundToPrecision = (value: number, precision: number): number =>\n  Math.round(value / precision) * precision;\n","/**\n * @author Niklas Korz, Leon Erath\n */\nimport { Vector3 } from \"three\";\nimport BinauralFIR from \"binauralfir\";\nimport { radToDeg } from \"../../utils/math\";\nimport BinauralScene from \"./BinauralScene\";\n\nexport default class BinauralSource {\n  position = new Vector3();\n  orientation = new Vector3();\n  scene: BinauralScene;\n  binauralFIR: BinauralFIR;\n\n  get input(): AudioNode {\n    return this.binauralFIR.input;\n  }\n\n  constructor(scene: BinauralScene) {\n    this.scene = scene;\n    this.binauralFIR = new BinauralFIR({ audioContext: scene.audioContext });\n    this.binauralFIR.HRTFDataset = scene.hrtfDataset;\n    this.binauralFIR.connect(scene.audioContext.destination);\n  }\n\n  update(): void {\n    const listenerAzimuth = Math.atan2(\n      this.scene.listenerOrientation.x,\n      this.scene.listenerOrientation.z\n    );\n\n    const distance = this.binauralFIR.distance(\n      this.position,\n      this.scene.listenerPosition\n    );\n\n    const deltaZ = this.position.z - this.scene.listenerPosition.z;\n    const azimuth = radToDeg(\n      listenerAzimuth + deltaZ &&\n        Math.atan((this.position.x - this.scene.listenerPosition.x) / deltaZ)\n    );\n\n    const elevation =\n      distance &&\n      radToDeg(\n        Math.asin((this.position.y - this.scene.listenerPosition.y) / distance)\n      );\n\n    this.binauralFIR.setPosition(azimuth, elevation, distance);\n  }\n}\n","/**\n * @author Niklas Korz, Leon Erath\n */\n\nimport { Vector3 } from \"three\";\nimport { HRTF } from \"binauralfir\";\nimport defaultAudioContext from \"../defaultAudioContext\";\nimport BinauralSource from \"./BinauralSource\";\n\nconst dummyHRTFDataset: HRTF[] = [\n  {\n    azimuth: 1,\n    elevation: 1,\n    distance: 1,\n    buffer: defaultAudioContext.createBuffer(\n      2,\n      512,\n      defaultAudioContext.sampleRate\n    )\n  }\n];\n\nexport default class BinauralScene {\n  listenerPosition = new Vector3(0, 0, 0);\n  listenerOrientation = new Vector3(0, 0, 0);\n  sources: BinauralSource[] = [];\n  audioContext: AudioContext;\n  hrtfDataset: HRTF[];\n\n  constructor(\n    audioContext: AudioContext,\n    hrtfDataset: HRTF[] = dummyHRTFDataset\n  ) {\n    this.audioContext = audioContext;\n    this.hrtfDataset = hrtfDataset;\n  }\n\n  createSource(): BinauralSource {\n    const source = new BinauralSource(this);\n    this.sources.push(source);\n    return source;\n  }\n\n  setHRTFDataset(hrtfDataset: HRTF[]): void {\n    this.hrtfDataset = hrtfDataset;\n    for (const source of this.sources) {\n      source.binauralFIR.HRTFDataset = hrtfDataset;\n    }\n  }\n\n  update(): void {\n    for (const source of this.sources) {\n      source.update();\n    }\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { Object3D, Vector3, Quaternion } from \"three\";\nimport { ResonanceAudio } from \"resonance-audio\";\nimport BinauralSource from \"./binaural/BinauralSource\";\nimport DistanceModel from \"./DistanceModel\";\n\n/**\n * Class extends Object3D in order to work with the three.js scene graph.\n * The idea is to override the updateWorldMatrix method and change the audio nodes\n * accordingly.\n */\nexport default class Audio3D extends Object3D {\n  webAudioContext: AudioContext;\n  binauralAudioContext: AudioContext;\n  resonanceAudioContext: AudioContext;\n\n  webAudioPannerNode: PannerNode;\n  binauralSource: BinauralSource;\n  resonanceSource: ResonanceAudio.Source;\n\n  webAudioBufferSource: AudioBufferSourceNode;\n  binauralBufferSource: AudioBufferSourceNode;\n  resonanceBufferSource: AudioBufferSourceNode;\n\n  hasStarted = false;\n  isPlaying = false;\n\n  constructor(\n    webAudioContext: AudioContext,\n    binauralAudioContext: AudioContext,\n    resonanceAudioContext: AudioContext,\n    webAudioPannerNode: PannerNode,\n    binauralSource: BinauralSource,\n    resonanceSource: ResonanceAudio.Source\n  ) {\n    super();\n\n    this.webAudioContext = webAudioContext;\n    this.binauralAudioContext = binauralAudioContext;\n    this.resonanceAudioContext = resonanceAudioContext;\n\n    this.webAudioPannerNode = webAudioPannerNode;\n    this.binauralSource = binauralSource;\n    this.resonanceSource = resonanceSource;\n\n    this.webAudioBufferSource = webAudioContext.createBufferSource();\n    this.binauralBufferSource = binauralAudioContext.createBufferSource();\n    this.resonanceBufferSource = resonanceAudioContext.createBufferSource();\n\n    this.webAudioBufferSource.connect(webAudioPannerNode);\n    this.binauralBufferSource.connect(binauralSource.input);\n    this.resonanceBufferSource.connect(resonanceSource.input);\n\n    this.webAudioPannerNode.connect(webAudioContext.destination);\n\n    this.webAudioBufferSource.onended = this.onAudioEnded;\n  }\n\n  setDistanceModel(distanceModel: DistanceModel): void {\n    this.webAudioPannerNode.distanceModel = distanceModel;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    this.matrixWorld.decompose(position, quaternion, scale);\n    const orientation = new Vector3(0, 0, 1).applyQuaternion(quaternion);\n\n    this.webAudioPannerNode.setPosition(position.x, position.y, position.z);\n    this.webAudioPannerNode.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z\n    );\n\n    this.binauralSource.position.copy(position);\n    this.binauralSource.orientation.copy(orientation);\n    this.binauralSource.update();\n\n    this.resonanceSource.setFromMatrix(this.matrixWorld);\n  }\n\n  onAudioEnded = () => {\n    this.isPlaying = false;\n  };\n\n  setBuffer(buffer: AudioBuffer): void {\n    if (this.webAudioBufferSource.buffer) {\n      // Chrome does not allow \"resetting\" the buffer and throws an error\n      // with this message: Cannot set buffer to non-null after it has been already been set to a non-null buffer\n      // To circumvent this, we have to create a new buffer source\n\n      this.stop();\n\n      this.webAudioBufferSource = this.webAudioContext.createBufferSource();\n      this.binauralBufferSource = this.binauralAudioContext.createBufferSource();\n      this.resonanceBufferSource = this.resonanceAudioContext.createBufferSource();\n\n      this.webAudioBufferSource.connect(this.webAudioPannerNode);\n      this.binauralBufferSource.connect(this.binauralSource.input);\n      this.resonanceBufferSource.connect(this.resonanceSource.input);\n\n      this.webAudioBufferSource.onended = this.onAudioEnded;\n    }\n\n    this.webAudioBufferSource.buffer = buffer;\n    this.binauralBufferSource.buffer = buffer;\n    this.resonanceBufferSource.buffer = buffer;\n\n    this.hasStarted = false;\n    this.isPlaying = false;\n  }\n\n  setLoop(loop: boolean): void {\n    this.webAudioBufferSource.loop = loop;\n    this.binauralBufferSource.loop = loop;\n    this.resonanceBufferSource.loop = loop;\n  }\n\n  play(): void {\n    if (this.webAudioBufferSource.buffer) {\n      if (this.hasStarted) {\n        // A buffer source node can only be played once, unfortunately.\n        // We have to \"reset\" the node by creating a new one and reusing the buffer.\n        this.setBuffer(this.webAudioBufferSource.buffer);\n      }\n\n      this.webAudioBufferSource.start();\n      this.binauralBufferSource.start();\n      this.resonanceBufferSource.start();\n\n      this.hasStarted = true;\n      this.isPlaying = true;\n    }\n  }\n\n  stop(): void {\n    if (this.hasStarted) {\n      this.webAudioBufferSource.stop();\n      this.binauralBufferSource.stop();\n      this.resonanceBufferSource.stop();\n\n      this.webAudioBufferSource.disconnect();\n      this.binauralBufferSource.disconnect();\n      this.resonanceBufferSource.disconnect();\n    }\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { Object3D, Vector3, Quaternion } from \"three\";\nimport { ResonanceAudio } from \"resonance-audio\";\nimport BinauralScene from \"./binaural/BinauralScene\";\n\nexport default class Listener3D extends Object3D {\n  webAudioListener: AudioListener;\n  binauralScene: BinauralScene;\n  resonanceScene: ResonanceAudio;\n\n  constructor(\n    webAudioListener: AudioListener,\n    binauralScene: BinauralScene,\n    resonanceScene: ResonanceAudio\n  ) {\n    super();\n    this.webAudioListener = webAudioListener;\n    this.binauralScene = binauralScene;\n    this.resonanceScene = resonanceScene;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    this.matrixWorld.decompose(position, quaternion, scale);\n    const orientation = new Vector3(0, 0, 1).applyQuaternion(quaternion);\n\n    orientation.x = -orientation.x;\n    orientation.z = -orientation.z;\n\n    this.webAudioListener.setPosition(position.x, position.y, position.z);\n    this.webAudioListener.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n\n    this.binauralScene.listenerPosition.copy(position);\n    this.binauralScene.listenerOrientation.copy(orientation);\n    this.binauralScene.update();\n\n    this.resonanceScene.setListenerFromMatrix(this.matrixWorld);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { HRTF } from \"binauralfir\";\nimport defaultAudioContext from \"../defaultAudioContext\";\n\n/**\n * Takes two arrays of floats and turns them into a stereo audio buffer.\n * @param firCoeffsLeft The data to be used for the left audio channel\n * @param firCoeffsRight The data to be used for the right audio channel\n */\nconst firCoefficientsToAudioBuffer = (\n  firCoeffsLeft: number[],\n  firCoeffsRight: number[]\n): AudioBuffer => {\n  const buffer = defaultAudioContext.createBuffer(\n    2, // Stereo\n    512, // Samples\n    defaultAudioContext.sampleRate // Sample rate - unfortunately, we _have_ to use the system's sample rate here as Chrome does not allow any other values\n  );\n  buffer.copyToChannel(new Float32Array(firCoeffsLeft), 0);\n  buffer.copyToChannel(new Float32Array(firCoeffsRight), 1);\n  return buffer;\n};\n\n/**\n * Asynchronously loads and returns a BinauralFIR compatible HRTF dataset\n */\nexport const loadHRTFDataset = async (): Promise<HRTF[]> => {\n  const resp = await fetch(\"data/ircam-hrtf.json\");\n  const dataset = await resp.json();\n\n  return dataset.map((hrtf: any) => ({\n    azimuth: hrtf.azimuth,\n    elevation: hrtf.elevation,\n    distance: hrtf.distance,\n    buffer: firCoefficientsToAudioBuffer(\n      hrtf.fir_coeffs_left,\n      hrtf.fir_coeffs_right\n    )\n  }));\n};\n","/**\n * @author Niklas Korz\n * @author Leon Erath\n */\nimport { ResonanceAudio, RoomMaterials, RoomDimensions } from \"resonance-audio\";\nimport { HRTF } from \"binauralfir\";\nimport BinauralScene from \"./binaural/BinauralScene\";\nimport Audio3D from \"./Audio3D\";\nimport AudioImplementation from \"./AudioImplementation\";\nimport Listener3D from \"./Listener3D\";\nimport { loadHRTFDataset } from \"./binaural/hrtf\";\n\ninterface Options {\n  materials?: RoomMaterials;\n  dimensions?: RoomDimensions;\n}\n\nexport default class AudioScene {\n  audioImplementation: AudioImplementation = AudioImplementation.WebAudio;\n\n  webAudioContext = new AudioContext();\n  binauralAudioContext = new AudioContext();\n  resonanceAudioContext = new AudioContext();\n\n  binauralScene = new BinauralScene(this.binauralAudioContext);\n  resonanceScene = new ResonanceAudio(this.resonanceAudioContext);\n\n  binauralHRTFDataset: HRTF[] | null = null;\n  isLoadingBinauralHRTFDataset = false;\n\n  listener3D = new Listener3D(\n    this.webAudioContext.listener,\n    this.binauralScene,\n    this.resonanceScene\n  );\n\n  constructor(options: Options) {\n    this.resonanceScene.setRoomProperties(\n      options.dimensions || ResonanceAudio.Utils.DEFAULT_ROOM_DIMENSIONS,\n      options.materials || ResonanceAudio.Utils.DEFAULT_ROOM_MATERIALS\n    );\n    this.resonanceScene.output.connect(this.resonanceAudioContext.destination);\n\n    this.suspend();\n  }\n\n  createAudio3D(): Audio3D {\n    const audio = new Audio3D(\n      this.webAudioContext,\n      this.binauralAudioContext,\n      this.resonanceAudioContext,\n      this.webAudioContext.createPanner(),\n      this.binauralScene.createSource(),\n      this.resonanceScene.createSource()\n    );\n\n    return audio;\n  }\n\n  close(): void {\n    this.webAudioContext.close();\n    this.binauralAudioContext.close();\n    this.resonanceAudioContext.close();\n  }\n\n  suspend(): void {\n    this.webAudioContext.suspend();\n    this.binauralAudioContext.suspend();\n    this.resonanceAudioContext.suspend();\n  }\n\n  resume(): void {\n    switch (this.audioImplementation) {\n      case AudioImplementation.WebAudio:\n        this.webAudioContext.resume();\n        break;\n      case AudioImplementation.Binaural:\n        this.binauralAudioContext.resume();\n        break;\n      case AudioImplementation.ResonanceAudio:\n        this.resonanceAudioContext.resume();\n        break;\n    }\n  }\n\n  selectAudioImplementation(audioImplementation: AudioImplementation): void {\n    if (\n      audioImplementation === AudioImplementation.Binaural &&\n      !this.binauralHRTFDataset &&\n      !this.isLoadingBinauralHRTFDataset\n    ) {\n      this.loadBinauralHRTFDataset();\n    }\n\n    this.suspend();\n    this.audioImplementation = audioImplementation;\n    this.resume();\n  }\n\n  async loadBinauralHRTFDataset(): Promise<void> {\n    this.isLoadingBinauralHRTFDataset = true;\n    try {\n      this.binauralHRTFDataset = await loadHRTFDataset();\n      this.binauralScene.setHRTFDataset(this.binauralHRTFDataset);\n    } catch (ex) {\n      console.error(\"Failed loading BinauralFIR HRTF dataset:\", ex);\n    }\n    this.isLoadingBinauralHRTFDataset = false;\n  }\n\n  setRoomProperties(\n    roomDimensions: RoomDimensions,\n    roomMaterials: RoomMaterials\n  ): void {\n    this.resonanceScene.setRoomProperties(roomDimensions, roomMaterials);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { SpawnData } from \"../data/schema\";\n\nconst spawnGeometry = new BoxGeometry(1, 0.1, 1);\nconst spawnMaterial = new MeshLambertMaterial({\n  color: 0x00ff00\n});\n\nconst directionGeometry = new BoxGeometry(0.1, 0.1, 0.5);\n\nexport default class SpawnMarker extends Mesh implements Serializable {\n  constructor() {\n    super(spawnGeometry, spawnMaterial);\n    this.position.set(0, 0.05, 2);\n\n    const directionMarker = new Mesh(directionGeometry, spawnMaterial);\n    directionMarker.position.z = -0.5;\n    this.add(directionMarker);\n  }\n\n  toData(): SpawnData {\n    return {\n      uuid: this.uuid,\n      name: this.name,\n      position: [this.position.x, this.position.z],\n      rotation: this.rotation.y\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.uuid = data.uuid;\n    this.name = data.name;\n    this.position.set(data.position[0], 0.05, data.position[1]);\n    this.rotation.set(0, data.rotation, 0);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n * @author Daniel Salomon\n */\nimport { RoomDimensions, ResonanceAudio, RoomMaterials } from \"resonance-audio\";\nimport {\n  AmbientLight,\n  BoxGeometry,\n  GridHelper,\n  Mesh,\n  MeshLambertMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PointLight,\n  Scene,\n  Vector3\n} from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { RoomData } from \"../data/schema\";\nimport AudioScene from \"../audio/AudioScene\";\nimport Audio3D from \"../audio/Audio3D\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport SpawnMarker from \"./SpawnMarker\";\n\nconst wallGeometry = new BoxGeometry(1, 1, 1);\nconst wallMaterial = new MeshLambertMaterial();\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  audioLibrary: AudioLibrary;\n  roomDimensions: RoomDimensions;\n  roomMaterials: RoomMaterials;\n\n  grid: GridHelper;\n  wallNorth = new Mesh(wallGeometry, wallMaterial);\n  wallEast = new Mesh(wallGeometry, wallMaterial);\n  wallSouth = new Mesh(wallGeometry, wallMaterial);\n  wallWest = new Mesh(wallGeometry, wallMaterial);\n  camera = new PerspectiveCamera(60, 1, 0.1, 1000);\n\n  collisionAudio: Audio3D; // Audio3D Objects for playing collision/footstep/interaction sounds, needed per room.\n  footstepAudio: Audio3D;\n  interactAvailAudio: Audio3D;\n\n  roomState = new Map<string, any>(); // Needed by runtime\n\n  audioScene: AudioScene;\n  spawns: SpawnMarker[] = [];\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.audioScene.setRoomProperties(dimensions, this.roomMaterials);\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.updateWalls();\n  }\n\n  get materials(): RoomMaterials {\n    return this.roomMaterials;\n  }\n\n  set materials(materials: RoomMaterials) {\n    this.roomMaterials = materials;\n    this.audioScene.setRoomProperties(this.roomDimensions, materials);\n  }\n\n  constructor(\n    audioLibrary: AudioLibrary,\n    name: string = \"\",\n    dimensions: RoomDimensions = { width: 15, depth: 15, height: 3 },\n    materials: RoomMaterials = ResonanceAudio.Utils.DEFAULT_ROOM_MATERIALS\n  ) {\n    super();\n\n    this.audioLibrary = audioLibrary;\n    this.name = name;\n    this.roomDimensions = dimensions;\n    this.roomMaterials = materials;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n    this.add(this.grid);\n\n    this.updateWalls();\n    this.add(this.wallNorth);\n    this.add(this.wallEast);\n    this.add(this.wallSouth);\n    this.add(this.wallWest);\n\n    this.camera.position.z = 4;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 1, 0));\n\n    // Audio setup\n    this.audioScene = new AudioScene({\n      dimensions: dimensions,\n      materials: materials\n    });\n\n    this.camera.add(this.audioScene.listener3D);\n\n    //Init audio objects for collision/footstep/... sounds\n    this.collisionAudio = this.audioScene.createAudio3D();\n    this.footstepAudio = this.audioScene.createAudio3D();\n    this.interactAvailAudio = this.audioScene.createAudio3D();\n\n    //Add audio objects for collision/footstep/... sounds to their parents\n    this.camera.add(this.footstepAudio);\n    this.add(this.collisionAudio);\n    this.add(this.interactAvailAudio);\n  }\n\n  addSpawn(): SpawnMarker {\n    const marker = new SpawnMarker();\n    marker.name = \"New spawn\";\n    this.spawns.push(marker);\n    this.add(marker);\n    return marker;\n  }\n\n  addObject(): GameObject {\n    const object = new GameObject(this.audioLibrary, this.audioScene);\n    object.position.y += 0.5;\n    object.name = \"New object\";\n\n    this.add(object);\n    return object;\n  }\n\n  updateWalls(): void {\n    const { width, depth, height } = this.roomDimensions;\n\n    this.wallNorth.scale.set(width, height, 0.25);\n    this.wallEast.scale.set(0.25, height, depth);\n    this.wallSouth.scale.set(width, height, 0.25);\n    this.wallWest.scale.set(0.25, height, depth);\n\n    this.wallNorth.position.set(0, height / 2, depth / 2);\n    this.wallEast.position.set(width / 2, height / 2, 0);\n    this.wallSouth.position.set(0, height / 2, -depth / 2);\n    this.wallWest.position.set(-width / 2, height / 2, 0);\n  }\n\n  toData(): RoomData {\n    return {\n      uuid: this.uuid,\n      name: this.name,\n      dimensions: this.dimensions,\n      materials: this.materials,\n      spawns: this.spawns.map(s => s.toData()),\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.uuid = data.uuid != null ? data.uuid : this.uuid;\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n    if (data.materials) {\n      this.materials = data.materials;\n    }\n\n    if (data.spawns) {\n      this.spawns = data.spawns.map((s: SerializedData) =>\n        new SpawnMarker().fromData(s)\n      );\n      this.add(...this.spawns);\n    } else {\n      this.addSpawn();\n    }\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary, this.audioScene).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  BackSide,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  Vector3\n} from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport { ProjectData, AudioFile } from \"../data/schema\";\nimport { saveProject } from \"../data/db\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\nimport DistanceModel from \"../audio/DistanceModel\";\nimport defaultAudioContext from \"../audio/defaultAudioContext\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\nimport SpawnMarker from \"./SpawnMarker\";\n\nexport interface ProjectEvents {\n  onSelectSpawn(spawnMarker: SpawnMarker | null): void;\n  onSelectObject(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = (): void => {\n  /* no operation */\n};\n\nconst defaultEvents: ProjectEvents = {\n  onSelectSpawn: noop,\n  onSelectObject: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  events: ProjectEvents;\n  audioLibrary = new AudioLibrary();\n\n  id?: number;\n  name = \"New project\";\n  distanceModel = DistanceModel.Inverse;\n\n  rooms: Room[] = [];\n  audioType: number = 1;\n\n  playerHeight = 1.8; // 1.80m player height, eyes are ~10cm lower\n  playerState = new Map<string, any>(); // Needed by runtime\n\n  collisionAudioID?: number; //Audio IDs, Files and buffer for collision/footstep/interaction sounds\n  footstepAudioID?: number;\n  interactAvailAudioID?: number;\n  collisionAudioFile?: AudioFile;\n  footstepAudioFile?: AudioFile;\n  interactAvailAudioFile?: AudioFile;\n  collisionAudioBuffer?: AudioBuffer;\n  footstepAudioBuffer?: AudioBuffer;\n  interactAvailAudioBuffer?: AudioBuffer;\n\n  activeAudioImplementation = AudioImplementation.WebAudio;\n  activeRoom: Room;\n  activeSpawn: SpawnMarker | null = null;\n  activeObject: GameObject | null = null;\n\n  outlineMesh = new Mesh();\n\n  get camera(): PerspectiveCamera {\n    return this.activeRoom.camera;\n  }\n\n  constructor(events: ProjectEvents = defaultEvents) {\n    this.events = events;\n\n    const firstRoom = new Room(this.audioLibrary, \"First room\");\n    firstRoom.addSpawn();\n    firstRoom.addObject();\n    this.rooms.push(firstRoom);\n    this.activeRoom = firstRoom;\n\n    this.outlineMesh.material = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    (window as any).p = this;\n  }\n\n  close(): void {\n    for (const room of this.rooms) {\n      room.audioScene.close();\n    }\n  }\n\n  suspend(): void {\n    this.activeRoom.audioScene.suspend();\n  }\n\n  addRoom(): Room {\n    const room = new Room(this.audioLibrary, \"New room\");\n    room.addSpawn();\n    room.addObject();\n    if (this.collisionAudioBuffer)\n      room.collisionAudio.setBuffer(this.collisionAudioBuffer);\n    if (this.footstepAudioBuffer)\n      room.footstepAudio.setBuffer(this.footstepAudioBuffer);\n    if (this.interactAvailAudioBuffer)\n      room.interactAvailAudio.setBuffer(this.interactAvailAudioBuffer);\n    this.rooms.push(room);\n    this.selectRoom(room);\n    return room;\n  }\n\n  selectDistanceModel(distanceModel: DistanceModel): void {\n    for (const room of this.rooms) {\n      for (const obj of room.children) {\n        if (obj instanceof GameObject) {\n          obj.audio.setDistanceModel(distanceModel);\n        }\n      }\n    }\n    this.distanceModel = distanceModel;\n  }\n\n  selectAudioImplementation(audioImplementation: AudioImplementation): void {\n    this.activeAudioImplementation = audioImplementation;\n    this.activeRoom.audioScene.selectAudioImplementation(audioImplementation);\n  }\n\n  selectRoom(room: Room): void {\n    this.activeRoom.audioScene.suspend();\n    room.audioScene.selectAudioImplementation(this.activeAudioImplementation);\n    room.camera.aspect = this.activeRoom.camera.aspect;\n    room.camera.updateProjectionMatrix();\n    this.activeRoom = room;\n    this.unselect();\n  }\n\n  unselect(): void {\n    if (this.activeSpawn) {\n      this.activeSpawn.remove(this.outlineMesh);\n      this.activeSpawn = null;\n      this.events.onSelectSpawn(null);\n    }\n    if (this.activeObject) {\n      this.activeObject.remove(this.outlineMesh);\n      this.activeObject = null;\n      this.events.onSelectObject(null);\n    }\n  }\n\n  selectSpawn(s: SpawnMarker): void {\n    this.unselect();\n\n    this.outlineMesh.geometry = s.geometry;\n    s.add(this.outlineMesh);\n\n    this.activeSpawn = s;\n    this.events.onSelectSpawn(s);\n  }\n\n  selectObject(o: GameObject): void {\n    this.unselect();\n\n    this.outlineMesh.geometry = o.geometry;\n    o.add(this.outlineMesh);\n\n    this.activeObject = o;\n    this.events.onSelectObject(o);\n  }\n\n  teleportPlayer(roomId: string, spawnId: string): void {\n    const room = this.rooms.find(r => r.uuid === roomId);\n    if (room) {\n      this.selectRoom(room);\n      const spawn = room.spawns.find(s => s.uuid === spawnId) || room.spawns[0];\n      room.camera.position.set(\n        spawn.position.x,\n        this.playerHeight - 0.1,\n        spawn.position.z\n      );\n      room.camera.rotation.set(0, spawn.rotation.y, 0);\n    } else {\n      console.log(\"Target room not found, not teleporting\");\n    }\n  }\n\n  // Serialize instance to a plain JavaScript object\n  toData(): ProjectData {\n    return {\n      savedAt: new Date(),\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData()),\n      nextAudioId: this.audioLibrary.nextId\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData, projectId?: number): this {\n    this.id = projectId;\n    this.audioLibrary.projectId = projectId;\n    this.audioLibrary.nextId = data.nextAudioId || 0;\n\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n    this.activeRoom = this.rooms[0];\n\n    // Disable audio in all inactive rooms\n    for (let i = 1; i < this.rooms.length; i++) {\n      this.rooms[i].audioScene.suspend();\n    }\n\n    return this;\n  }\n\n  async save(): Promise<void> {\n    const id = await saveProject(this);\n    if (this.id == null) {\n      this.id = id;\n      await this.audioLibrary.saveToProject(id);\n    }\n  }\n\n  async setCollisionAudio(id: number): Promise<void> {\n    this.collisionAudioID = id;\n    this.collisionAudioFile = await this.audioLibrary.get(id);\n    if (this.collisionAudioFile) {\n      this.collisionAudioBuffer = await defaultAudioContext.decodeAudioData(\n        this.collisionAudioFile.data.slice(0)\n      );\n      for (const room of this.rooms) {\n        room.collisionAudio.setBuffer(this.collisionAudioBuffer);\n        room.collisionAudio.setLoop(false);\n      }\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  async setFootstepAudio(id: number): Promise<void> {\n    this.footstepAudioID = id;\n    this.footstepAudioFile = await this.audioLibrary.get(id);\n    if (this.footstepAudioFile) {\n      this.footstepAudioBuffer = await defaultAudioContext.decodeAudioData(\n        this.footstepAudioFile.data.slice(0)\n      );\n      for (const room of this.rooms) {\n        room.footstepAudio.setBuffer(this.footstepAudioBuffer);\n        room.footstepAudio.setLoop(false);\n      }\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n\n  async setInteractAvailAudio(id: number): Promise<void> {\n    this.interactAvailAudioID = id;\n    this.interactAvailAudioFile = await this.audioLibrary.get(id);\n    if (this.interactAvailAudioFile) {\n      this.interactAvailAudioBuffer = await defaultAudioContext.decodeAudioData(\n        this.interactAvailAudioFile.data.slice(0)\n      );\n      for (const room of this.rooms) {\n        room.interactAvailAudio.setBuffer(this.interactAvailAudioBuffer);\n        room.interactAvailAudio.setLoop(false);\n      }\n    } else {\n      console.log(\n        \"Audio with id\",\n        id,\n        \"could not be found and can't be played\"\n      );\n    }\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\n// Options for configuring the file modal\nexport interface OpenFileDialogOptions {\n  accept?: string;\n}\n\n/**\n * Opens a file dialog and lets the user select a file\n * @returns The selected file\n */\nexport const openFileDialog = (\n  options: OpenFileDialogOptions = {}\n): Promise<File> =>\n  new Promise(resolve => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    if (options.accept) {\n      input.accept = options.accept;\n    }\n    input.onchange = () => {\n      if (input.files) {\n        resolve(input.files[0]);\n      }\n    };\n    input.click();\n  });\n\nexport const readFileAsArrayBuffer = (file: File): Promise<ArrayBuffer> =>\n  new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.result) {\n        resolve(reader.result as ArrayBuffer);\n      }\n    };\n    reader.onerror = () => {\n      console.error(\"Error:\", reader.error);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n","/**\n * @author Niklas Korz\n * This module defines functions for loading and importing projects from the local filesystem.\n */\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\nimport { openFileDialog } from \"../utils/files\";\n\n/**\n * Decompresses the given zip file, loads the included JSON metadata and reads all\n * included audio files as binary array buffers.\n * @param blob The blob to read from, usually a file returned by a FileReader instance.\n * @returns The project recreated from the data found in the zip\n */\nexport const loadZip = async (blob: Blob): Promise<Project> => {\n  const zip = await Zip.loadAsync(blob);\n  const metadata = JSON.parse(await zip.file(\"metadata.json\").async(\"text\"));\n\n  const audioLibrary = JSON.parse(\n    await zip.file(\"audioLibrary.json\").async(\"text\")\n  );\n  const audioFolder = zip.folder(\"audio\");\n  const project = new Project();\n  for (const { id, name, type } of audioLibrary) {\n    const data = await audioFolder.file(id.toString()).async(\"arraybuffer\");\n    project.audioLibrary.set(id, { name, type, data });\n\n    if (id >= project.audioLibrary.nextId) {\n      project.audioLibrary.nextId = id + 1;\n    }\n  }\n\n  project.fromData(metadata);\n  return project;\n};\n\n/**\n * Opens a file dialog and lets the user select a zip file that will be parsed\n * and loaded as a project.\n * @returns The project found in the zip\n */\nexport const openZip = async (): Promise<Project> => {\n  const file = await openFileDialog({ accept: \"application/zip\" });\n  return await loadZip(file);\n};\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.15; //Inaccuracy of gamepads (tested XBOX One S gamepad up to 0.11 - Daniel)\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n\n  getButtonStatus(index: number): boolean {\n    const gamepads = navigator.getGamepads();\n\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (gamepad.buttons[index].pressed) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Daniel Salomon\n */\nimport { Raycaster, Vector3, WebGLRenderer, Object3D, Mesh, Box3 } from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport Project from \"../project/Project\";\nimport GameObject, { InteractionType } from \"../project/GameObject\";\nimport SpawnMarker from \"../project/SpawnMarker\";\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class Runtime {\n  target: HTMLElement | null = null;\n  project: Project;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n  lastCollisionSound = 0; //Timestamp, when the last sound for collision was played\n  lastKnownButtonStatus = false; //Variable to check whether or not the button[0] was pressed in the last update() or not (to prevent multiple clicks)\n\n  shouldRender = true; //Should the visuals be rendered or should it be audio-only?\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n\n  raycaster = new Raycaster();\n\n  dummyCamera = new Object3D();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n\n  constructor(project: Project) {\n    this.project = project;\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n\n    const room = this.project.rooms[0];\n    this.project.selectRoom(room);\n    const spawn = room.spawns[0];\n    this.project.camera.position.set(\n      spawn.position.x,\n      this.project.playerHeight - 0.1,\n      spawn.position.z\n    );\n    this.project.camera.rotation.set(0, spawn.rotation.y, 0);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.project.camera.aspect = offsetWidth / offsetHeight;\n    this.project.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    if (this.shouldRender) {\n      this.renderer.render(this.project.activeRoom, this.project.camera);\n    } else {\n      // When we are not actively rendering, position updates are not passed down\n      // to children in the scene graph automatically.\n      // To enforce this update, we have to update the scene graphs root manually\n      // (i.e., the scene itself), which will in turn update all nodes contained in the\n      // scene graph.\n      // As the camera is not a part of the scene graph, it has to be updated\n      // manually as well.\n      this.project.activeRoom.updateMatrixWorld();\n      this.project.activeRoom.camera.updateMatrixWorld(false);\n    }\n  };\n\n  toggleRendering(): void {\n    this.shouldRender = this.shouldRender ? false : true;\n    this.renderer.clear();\n  }\n\n  // Helper method to check if a number (check) is between or equal to two boundaries (from, to). E.g.: isBetween(2, 1, 5)==true, isBetween(6, 1, 5)==false\n  isBetween(check: number, from: number, to: number): boolean {\n    const min = Math.min.apply(Math, [from, to]),\n      max = Math.max.apply(Math, [from, to]);\n    return check >= min && check <= max;\n  }\n\n  invokeInteraction(): boolean {\n    const toInteractWith = this.project.activeObject;\n    if (toInteractWith != null) {\n      toInteractWith.triggerInteraction(this.project);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  update(dt: number): void {\n    const { camera } = this.project;\n    this.dummyCamera.position.copy(camera.position); //Copy values of the real camera object to the dummy camera, to be used later on for collision detection\n    this.dummyCamera.rotation.copy(camera.rotation);\n\n    let moveX = 0;\n    let moveZ = 0;\n    let rotateY = 0;\n\n    //Sidenote on movement: We really wanted to implement the possibility to look up and down, but it turned out to be way too complex for us to implement in this project.\n    //All tries resulted in either a buggy camera or a buggy movement through the environment, which we were not fine with.\n\n    //Keyboard actions (W/A/S/D to move, Left&Right arrows to rotate)\n    if (this.keys.isPressed(\"w\")) {\n      const newZ = -2 * dt;\n      moveZ = Math.abs(moveZ) < Math.abs(newZ) ? newZ : moveZ;\n    }\n    if (this.keys.isPressed(\"s\")) {\n      const newZ = 2 * dt;\n      moveZ = Math.abs(moveZ) < Math.abs(newZ) ? newZ : moveZ;\n    }\n    if (this.keys.isPressed(\"a\")) {\n      const newX = -2 * dt;\n      moveX = Math.abs(moveX) < Math.abs(newX) ? newX : moveX;\n    }\n    if (this.keys.isPressed(\"d\")) {\n      const newX = 2 * dt;\n      moveX = Math.abs(moveX) < Math.abs(newX) ? newX : moveX;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      const newY = dt;\n      rotateY = Math.abs(rotateY) < Math.abs(newY) ? newY : rotateY;\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      const newY = -dt;\n      rotateY = Math.abs(rotateY) < Math.abs(newY) ? newY : rotateY;\n    }\n\n    //Collect necessary information from the gamepad API, supports analog sticks (slower and faster movement)\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2)\n    };\n    if (gamepadAxes.x) {\n      const newX = 2 * dt * gamepadAxes.x;\n      moveX = Math.abs(moveX) < Math.abs(newX) ? newX : moveX;\n    }\n    if (gamepadAxes.y) {\n      const newZ = 2 * dt * gamepadAxes.y;\n      moveZ = Math.abs(moveZ) < Math.abs(newZ) ? newZ : moveZ;\n    }\n    if (gamepadAxes.rX) {\n      const newY = -dt * gamepadAxes.rX;\n      rotateY = Math.abs(rotateY) < Math.abs(newY) ? newY : rotateY;\n    }\n\n    // Executing the rotation/movement after all keys are evaluated prevents the issue of double movement speed when both, keyboard and gamepad, is used at the same time.\n    camera.rotateOnWorldAxis(axes.y, rotateY); // Rotate left & right\n    //Apply movement to dummy object first to check if a collision is happening. If not, apply to actual camera.\n    this.dummyCamera.translateOnAxis(axes.z, moveZ); // Move forwards & backwards\n    this.dummyCamera.translateOnAxis(axes.x, moveX); // Move left & right\n\n    //Values to check for collision\n    const newX = this.dummyCamera.position.x;\n    const newZ = this.dummyCamera.position.z;\n\n    //Check for collision\n    let collided = false;\n    for (const i of this.project.activeRoom.children) {\n      if (!(i instanceof Mesh) || i instanceof SpawnMarker) {\n        continue;\n      }\n      const thresholdMovement = 0.25; //Minimum allowed distance to an object\n      const thresholdHeight = 0.05; //Minimum allowed distance to an object below or above the player (player height is 1,80[m])\n\n      var bbox = new Box3().setFromObject(i); //Bounding box to take rotation of the object into account.\n      const bboxposition = bbox.getCenter(new Vector3());\n      const bboxscale = bbox.getSize(new Vector3());\n\n      //Estimate boundaries of all (visible) objects in the current room\n      const boundX1 = bboxposition.x + bboxscale.x / 2 + thresholdMovement;\n      const boundX2 = bboxposition.x - bboxscale.x / 2 - thresholdMovement;\n      const boundY1 = bboxposition.y + bboxscale.y / 2 + thresholdHeight;\n      const boundY2 = bboxposition.y - bboxscale.y / 2 - thresholdHeight;\n      const boundZ1 = bboxposition.z + bboxscale.z / 2 + thresholdMovement;\n      const boundZ2 = bboxposition.z - bboxscale.z / 2 - thresholdMovement;\n\n      //Check if the next position of the camera collides with the bondaries or the object (and effectively if a collision is about to happen)\n      if (\n        this.isBetween(newX, boundX2, boundX1) &&\n        this.isBetween(newZ, boundZ2, boundZ1) &&\n        (this.isBetween(boundY1, 0, this.project.playerHeight) ||\n          this.isBetween(boundY2, 0, this.project.playerHeight) ||\n          (this.isBetween(this.project.playerHeight, boundY2, boundY1) &&\n            this.isBetween(0, boundY2, boundY1)))\n      ) {\n        collided = true;\n      }\n    }\n\n    // Move to new position if no collision occured, otherwise play a collision sound\n    if (!collided) {\n      camera.position.copy(this.dummyCamera.position);\n    } else if (this.lastCollisionSound + 1000 < Date.now()) {\n      //TODO - Play sound\n      this.lastCollisionSound = Date.now();\n    }\n\n    //Check for an object to interact with. If found, mark it as active (mostly for debugging and visual help for possible spectators)\n    //The raycaster helps to check for objects in sight. To ensure that objects on the bottom and top of sight are interactable too, the raycasting is called multiple times\n    //That way, objects from the middle top of the sight to the middle bottom of the screen are scanned and checked for their distance.\n    let nearestDist = Infinity;\n    let nearestObj: GameObject | null = null;\n\n    for (let i = 1; i >= -1; i -= 0.1) {\n      //From top (1) to middle(0) to bottom (-1)\n      this.raycaster.setFromCamera({ x: 0, y: i }, camera);\n      const intersections = this.raycaster.intersectObjects(\n        //perform raycasting with the given settings, originating from the main camera\n        this.project.activeRoom.children\n      );\n\n      for (const intersection of intersections) {\n        //Check, if the intersecting objects are actual GameObjects and if they are closer than the current closest intersecting GameObject\n        const o = intersection.object;\n        if (o instanceof GameObject && intersection.distance < nearestDist) {\n          nearestDist = intersection.distance;\n          nearestObj = o;\n        }\n      }\n    }\n\n    if (\n      nearestDist <= 1.5 &&\n      nearestObj != null &&\n      nearestObj.interactionType !== InteractionType.None\n    ) {\n      //If the clostest GameObject is closer or equal than 1.5m (and not null for safety), select it\n      this.project.selectObject(nearestObj);\n    } else {\n      //Otherwise, unselect all\n      this.project.unselect();\n    }\n\n    //Interact with nearest (selected) object\n    if (\n      // Is the button or key clicked\n      (this.gamepads.getButtonStatus(0) || this.keys.isPressed(\"e\")) &&\n      //Prevent multiple actions on button hold\n      !this.lastKnownButtonStatus\n    ) {\n      this.lastKnownButtonStatus = true;\n      this.invokeInteraction();\n    } else if (!this.gamepads.getButtonStatus(0) && !this.keys.isPressed(\"e\")) {\n      this.lastKnownButtonStatus = false; //Last known button status was unpressed, so clear the value\n    }\n\n    //TODO - sounds for footsteps\n  }\n}\n","/**\n * @author Daniel Salomon\n */\nimport styled, { css } from \"styled-components\";\n\nexport const FocusedLabel = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  pointer-events: none;\n`;\n\nexport const RunningLabel = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  font-size: 25px;\n`;\n\nexport const RunningHeadline = styled.p`\n  color: #fff;\n  font-size: 15px;\n  margin: 12px 10px 5px 10px;\n  font-weight: bold;\n`;\n\nexport const RunningButtonContainer = styled.div`\n  display: flex;\n  justify-content: left;\n`;\n\ninterface RunningButtonProps {\n  selected?: boolean;\n}\n\nexport const RunningButton = styled.div<RunningButtonProps>`\n  padding: 10px 15px;\n  margin: 5px;\n  color: #fff;\n  font-size: 15px;\n  border-radius: 3px;\n  background: hsla(0, 0%, 100%, 0.2);\n  ${props =>\n    props.selected &&\n    css`\n      box-shadow: 0px 0px 10px #00ff00;\n      background: #19611c;\n    `}\n\n  border: 1px solid hsl(210, 15%, 40%);\n  text-align: center;\n  cursor: pointer;\n\n  :hover {\n    ${props =>\n      !props.selected &&\n      css`\n        background: hsla(0, 0%, 100%, 0.4);\n      `}\n  }\n`;\n\nexport const ControlsTable = styled.table`\n  border: 0px solid transparent;\n  border-collapse: collapse;\n  font-size: 15px;\n  width: 100%;\n`;\n\nexport const Main = styled.main`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-color: black;\n\n  :focus-within > ${FocusedLabel} {\n    display: block;\n  }\n`;\n","/**\n * @author Daniel Salomon\n */\nimport React from \"react\";\nimport Project from \"../project/Project\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\nimport Runtime from \"./Runtime\";\nimport {\n  Main,\n  FocusedLabel,\n  RunningLabel,\n  RunningHeadline,\n  RunningButton,\n  RunningButtonContainer,\n  ControlsTable\n} from \"./styled\";\n\ninterface Props {\n  project: Project;\n  onExit(): void;\n}\ninterface State {\n  audioImplementation: AudioImplementation;\n}\n\nexport default class RuntimeContainer extends React.Component<Props> {\n  targetRef = React.createRef<HTMLDivElement>();\n  runtime = new Runtime(this.props.project);\n  activeButtonRef: HTMLElement | null = null;\n\n  state: State = { audioImplementation: AudioImplementation.WebAudio };\n\n  constructor(props: Props) {\n    super(props);\n    this.state.audioImplementation = this.props.project.activeAudioImplementation;\n  }\n\n  componentDidMount(): void {\n    if (this.targetRef.current) {\n      this.runtime.attach(this.targetRef.current);\n      this.runtime.focus();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.runtime.detach();\n  }\n\n  onExit = () => {\n    this.runtime.detach();\n    this.props.onExit();\n  };\n\n  onVisualToggle = () => {\n    this.runtime.toggleRendering();\n  };\n\n  onChangeAudio = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    audio: AudioImplementation\n  ) => {\n    this.props.project.selectAudioImplementation(audio);\n    this.setState({ audioImplementation: audio });\n  };\n\n  render(): React.ReactNode {\n    const { audioImplementation } = this.state;\n\n    return (\n      <Main ref={this.targetRef}>\n        <RunningLabel>\n          Audio3D\n          <RunningHeadline>Menu</RunningHeadline>\n          <RunningButtonContainer>\n            <RunningButton onClick={this.onExit}>Exit</RunningButton>\n            <RunningButton onClick={this.onVisualToggle}>\n              Toggle visuals\n            </RunningButton>\n          </RunningButtonContainer>\n          <RunningHeadline>Audio implementation</RunningHeadline>\n          <RunningButtonContainer>\n            <RunningButton\n              onClick={e => this.onChangeAudio(e, AudioImplementation.WebAudio)}\n              selected={audioImplementation === AudioImplementation.WebAudio}\n            >\n              Web Audio API\n            </RunningButton>\n            <RunningButton\n              selected={audioImplementation === AudioImplementation.Binaural}\n              onClick={e => this.onChangeAudio(e, AudioImplementation.Binaural)}\n            >\n              BinauralFIR\n            </RunningButton>\n            <RunningButton\n              selected={\n                audioImplementation === AudioImplementation.ResonanceAudio\n              }\n              onClick={e =>\n                this.onChangeAudio(e, AudioImplementation.ResonanceAudio)\n              }\n            >\n              Resonance Audio\n            </RunningButton>\n          </RunningButtonContainer>\n          <RunningHeadline>Controls</RunningHeadline>\n          <ControlsTable>\n            <tbody>\n              <tr>\n                <td>Move</td>\n                <td>W/A/S/D or left stick</td>\n              </tr>\n              <tr>\n                <td>View</td>\n                <td>Arrow keys or right stick</td>\n              </tr>\n              <tr>\n                <td>Interact</td>\n                <td>E or A (XBOX)</td>\n              </tr>\n            </tbody>\n          </ControlsTable>\n        </RunningLabel>\n        <FocusedLabel>Focused</FocusedLabel>\n      </Main>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  max-width: 600px;\n  color: #fff;\n  background: hsl(210, 29%, 29%);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n`;\n\nconst TitleBar = styled.div`\n  padding: 10px 15px;\n  background: hsl(210, 29%, 15%);\n`;\n\nconst Content = styled.div`\n  padding: 10px 15px;\n`;\n\nexport const ActionGroup = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Action = styled.button`\n  display: block;\n  appearance: none;\n  border: none;\n  background: hsl(210, 29%, 20%);\n  color: #fff;\n  cursor: pointer;\n  border-radius: 3px;\n  padding: 8px 12px;\n  margin-left: 10px;\n  font-size: 0.9em;\n\n  transition: 0.2s background-color, 0.2s box-shadow;\n\n  :hover,\n  :active {\n    background: hsl(210, 29%, 35%);\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.2);\n  }\n\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\ninterface Props {\n  title: string;\n  onDismiss?(): void;\n}\n\nexport default class Modal extends React.Component<Props> {\n  onBackdropClick: React.MouseEventHandler = e => {\n    if (e.currentTarget === e.target && this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <Backdrop onClick={this.onBackdropClick}>\n        <Container>\n          <TitleBar>{this.props.title}</TitleBar>\n          <Content>{this.props.children}</Content>\n        </Container>\n      </Backdrop>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\nimport { AudioEntry } from \"./types\";\n\ninterface Props {\n  audioEntry: AudioEntry;\n  onDelete(audioEntry: AudioEntry): void;\n  onExport(audioEntry: AudioEntry): void;\n  onDismiss(): void;\n  onCancel(): void;\n}\n\nexport default class AudioFileModal extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { audioEntry } = this.props;\n    return (\n      <Modal title=\"Audio File\" onDismiss={this.props.onDismiss}>\n        <p>\n          <b>ID:</b> {audioEntry.id}\n        </p>\n        <p>\n          <b>Name:</b> {audioEntry.name}\n        </p>\n        <p>\n          <b>Type:</b> {audioEntry.type}\n        </p>\n        <p>\n          <b>Size:</b> {Math.ceil(audioEntry.data.byteLength / 1024)} KiB\n        </p>\n        <ActionGroup>\n          <Action onClick={() => this.props.onDelete(audioEntry)}>\n            Delete\n          </Action>\n          <Action onClick={() => this.props.onExport(audioEntry)}>\n            Export\n          </Action>\n          <Action onClick={this.props.onCancel}>Back</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { saveAs } from \"file-saver\";\nimport styled from \"styled-components\";\nimport AudioLibrary from \"../project/AudioLibrary\";\nimport { openFileDialog, readFileAsArrayBuffer } from \"../utils/files\";\nimport AudioFileModal from \"./AudioFileModal\";\nimport Modal, { Action, ActionGroup } from \"./Modal\";\nimport { AudioEntry } from \"./types\";\n\nconst AudioList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 0 -5px;\n`;\n\nconst AudioItem = styled.div`\n  flex: 1 1 150px;\n  margin: 5px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  cursor: pointer;\n  background: hsl(210, 29%, 20%);\n  transition: 0.2s background-color, 0.2s box-shadow;\n\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  :hover,\n  :active {\n    background: hsl(210, 29%, 35%);\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.2);\n  }\n`;\n\ninterface Props {\n  audioLibrary: AudioLibrary;\n  onDismiss(): void;\n  onSelect?(entry: AudioEntry): void;\n}\n\ninterface State {\n  entries: AudioEntry[];\n  selectedEntry: AudioEntry | null;\n}\n\nexport default class AudioLibraryModal extends React.Component<Props, State> {\n  previewAudio = new Audio();\n  state: State = { entries: [], selectedEntry: null };\n\n  openAudioFileDialog = async () => {\n    const file = await openFileDialog({ accept: \"audio/*\" });\n    const data = await readFileAsArrayBuffer(file);\n    const audioFile = { name: file.name, type: file.type, data };\n    const id = await this.props.audioLibrary.add(audioFile);\n    this.setState(({ entries }) => ({\n      entries: [\n        ...entries,\n        {\n          id,\n          ...audioFile\n        }\n      ]\n    }));\n  };\n\n  previewEntry(entry: AudioEntry): void {\n    this.previewAudio.src = URL.createObjectURL(new Blob([entry.data]));\n    this.previewAudio.loop = true;\n    this.previewAudio.play();\n  }\n\n  stopPreview = () => {\n    this.previewAudio.pause();\n    URL.revokeObjectURL(this.previewAudio.src);\n  };\n\n  dismiss = () => {\n    this.setState({ selectedEntry: null });\n    this.props.onDismiss();\n    this.stopPreview();\n  };\n\n  selectEntry(audioEntry: AudioEntry): void {\n    if (this.props.onSelect) {\n      this.props.onSelect(audioEntry);\n    } else {\n      this.setState({ selectedEntry: audioEntry });\n    }\n  }\n\n  unselectEntry = () => {\n    this.setState({ selectedEntry: null });\n    this.stopPreview();\n  };\n\n  deleteAudio = ({ id }: AudioEntry) => {\n    this.props.audioLibrary.delete(id);\n    this.setState(({ entries }) => ({\n      entries: entries.filter(e => e.id !== id),\n      selectedEntry: null\n    }));\n  };\n\n  exportAudio = ({ name, type, data }: AudioEntry) => {\n    saveAs(new Blob([data], { type }), name);\n  };\n\n  async updateEntries(): Promise<void> {\n    const entries: AudioEntry[] = [];\n    for await (const [id, audioFile] of this.props.audioLibrary.entries()) {\n      entries.push({ ...audioFile, id });\n    }\n    this.setState({\n      entries: entries.sort((a, b) => a.id - b.id)\n    });\n  }\n\n  async componentDidMount(): Promise<void> {\n    await this.updateEntries();\n  }\n\n  async componentDidUpdate(prevProps: Props): Promise<void> {\n    if (prevProps.audioLibrary !== this.props.audioLibrary) {\n      // The project and therefore the audio library to be rendered has changed\n      await this.updateEntries();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.previewAudio.pause();\n    URL.revokeObjectURL(this.previewAudio.src);\n  }\n\n  render(): React.ReactNode {\n    const { entries, selectedEntry } = this.state;\n\n    if (selectedEntry) {\n      return (\n        <AudioFileModal\n          audioEntry={selectedEntry}\n          onDelete={this.deleteAudio}\n          onExport={this.exportAudio}\n          onCancel={this.unselectEntry}\n          onDismiss={this.dismiss}\n        />\n      );\n    }\n\n    return (\n      <Modal\n        title={this.props.onSelect ? \"Select Audio\" : \"Audio Library\"}\n        onDismiss={this.dismiss}\n      >\n        <AudioList>\n          {entries.length > 0 &&\n            entries.map(e => (\n              <AudioItem\n                key={e.id}\n                title={e.name}\n                onClick={() => this.selectEntry(e)}\n                onMouseEnter={() => this.previewEntry(e)}\n                onMouseLeave={this.stopPreview}\n              >\n                {e.name} <br />\n                {e.type} <br />\n                {Math.ceil(e.data.byteLength / 1024)} KiB\n              </AudioItem>\n            ))}\n        </AudioList>\n        {!entries.length && <div>You haven't added any audio files yet</div>}\n        <ActionGroup>\n          <Action onClick={this.openAudioFileDialog}>Add audio file</Action>\n          <Action onClick={this.dismiss}>Cancel</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\n\nconst Container = styled.div`\n  flex: 0 0 auto;\n  background: hsl(210, 29%, 15%);\n  color: #fff;\n  font-size: 0.9em;\n  padding: 0 10px;\n  user-select: none;\n\n  :focus {\n    outline: none;\n  }\n`;\n\ninterface MenubarItemProps {\n  isActive?: boolean;\n  alignRight?: boolean;\n}\n\nconst MenubarItem = styled.div<MenubarItemProps>`\n  position: relative;\n  display: inline-block;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 25%, 20%);\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      background: hsl(210, 25%, 20%);\n    `}\n\n  ${props =>\n    props.alignRight &&\n    css`\n      float: right;\n    `}\n`;\n\nconst MenubarItemLabel = styled.label`\n  cursor: pointer;\n`;\n\nconst Menu = styled.div`\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  top: 100%;\n  background: hsl(210, 25%, 20%);\n  padding: 5px 0;\n  min-width: 200px;\n  font-size: 0.95em;\n  box-shadow: 5px 5px 8px rgba(0, 0, 0, 0.5);\n\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  cursor: default;\n`;\n\nconst MenuItem = styled.div`\n  white-space: nowrap;\n  padding: 8px 20px;\n  margin: 2px 0;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 15%);\n  }\n`;\n\nconst MenuDivider = styled.div`\n  height: 0;\n  margin: 5px;\n  border-bottom: 1px solid hsl(210, 15%, 35%);\n`;\n\ninterface Props {\n  audioImplementation: AudioImplementation;\n\n  onNewProject(): void;\n  onLoadProject(): void;\n  onSaveProject(): void;\n  onImportProject(): void;\n  onExportProject(): void;\n  onShowSettings(): void;\n\n  onAddObject(): void;\n  onDeleteObject(): void;\n  onAddSpawn(): void;\n  onDeleteSpawn(): void;\n  onAddRoom(): void;\n  onDeleteRoom(): void;\n\n  onShowAudioLibrary(): void;\n  onShowProjectManager(): void;\n\n  onAudioChange(audioImplementation: AudioImplementation): void;\n  onRunProject(): void;\n}\n\nenum MenuType {\n  FileMenu,\n  EditMenu,\n  AudioMenu,\n  ViewMenu,\n  HelpMenu\n}\n\ninterface State {\n  activeMenu: MenuType | null;\n}\n\nexport default class MenuBar extends React.Component<Props, State> {\n  state: State = {\n    activeMenu: null\n  };\n\n  toggleMenu(menuType: MenuType): void {\n    this.setState(state => ({\n      activeMenu: state.activeMenu === menuType ? null : menuType\n    }));\n  }\n\n  closeMenu(): void {\n    this.setState({ activeMenu: null });\n  }\n\n  render(): React.ReactNode {\n    const { audioImplementation, onAudioChange } = this.props;\n    const { activeMenu } = this.state;\n\n    return (\n      <Container tabIndex={-1} onBlur={() => this.closeMenu()}>\n        <MenubarItem\n          isActive={activeMenu === MenuType.FileMenu}\n          onClick={() => this.toggleMenu(MenuType.FileMenu)}\n        >\n          <MenubarItemLabel>File</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.FileMenu}>\n            <MenuItem onClick={this.props.onNewProject}>New project</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onLoadProject}>Load project</MenuItem>\n            <MenuItem onClick={this.props.onImportProject}>\n              Import project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onSaveProject}>Save project</MenuItem>\n            <MenuItem onClick={this.props.onExportProject}>\n              Export project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onShowSettings}>Settings</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.EditMenu}\n          onClick={() => this.toggleMenu(MenuType.EditMenu)}\n        >\n          <MenubarItemLabel>Edit</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.EditMenu}>\n            <MenuItem onClick={this.props.onAddObject}>Add object</MenuItem>\n            <MenuItem onClick={this.props.onDeleteObject}>\n              Delete object\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddSpawn}>Add spawn</MenuItem>\n            <MenuItem onClick={this.props.onDeleteSpawn}>Delete spawn</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddRoom}>Add room</MenuItem>\n            <MenuItem onClick={this.props.onDeleteRoom}>Delete room</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.ViewMenu}\n          onClick={() => this.toggleMenu(MenuType.ViewMenu)}\n        >\n          <MenubarItemLabel>View</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.ViewMenu}>\n            <MenuItem onClick={this.props.onShowAudioLibrary}>\n              Audio Library\n            </MenuItem>\n            <MenuItem onClick={this.props.onShowProjectManager}>\n              Project Manager\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.HelpMenu}\n          onClick={() => this.toggleMenu(MenuType.HelpMenu)}\n        >\n          <MenubarItemLabel>Help</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.HelpMenu}>\n            <MenuItem\n              onClick={() =>\n                window.open(\n                  \"https://github.com/niklaskorz/audio3d/issues\",\n                  \"_blank\"\n                )\n              }\n            >\n              Issues\n            </MenuItem>\n            <MenuItem\n              onClick={() =>\n                window.open(\"https://github.com/niklaskorz/audio3d\", \"_blank\")\n              }\n            >\n              Source Code\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem\n              onClick={() =>\n                window.open(\n                  \"https://github.com/niklaskorz/audio3d/blob/master/README.md\",\n                  \"_blank\"\n                )\n              }\n            >\n              About\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem alignRight onClick={this.props.onRunProject}>\n          <MenubarItemLabel>Run</MenubarItemLabel>\n        </MenubarItem>\n        <MenubarItem\n          alignRight\n          isActive={activeMenu === MenuType.AudioMenu}\n          onClick={() => this.toggleMenu(MenuType.AudioMenu)}\n        >\n          <MenubarItemLabel>Audio: {audioImplementation}</MenubarItemLabel>\n          <Menu hidden={activeMenu !== MenuType.AudioMenu}>\n            <MenuItem\n              onClick={() => onAudioChange(AudioImplementation.WebAudio)}\n            >\n              {AudioImplementation.WebAudio}\n            </MenuItem>\n            <MenuItem\n              onClick={() => onAudioChange(AudioImplementation.Binaural)}\n            >\n              {AudioImplementation.Binaural}\n            </MenuItem>\n\n            <MenuItem\n              onClick={() => onAudioChange(AudioImplementation.ResonanceAudio)}\n            >\n              {AudioImplementation.ResonanceAudio}\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n      </Container>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InnerContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const FocusedLabel = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  pointer-events: none;\n`;\n\nexport const Main = styled.main`\n  position: relative;\n  flex: 1;\n  height: 100%;\n\n  :focus-within > ${FocusedLabel} {\n    display: block;\n  }\n`;\n\nexport const Sidebar = styled.aside`\n  font-size: 0.9em;\n  flex: 0 0 300px;\n  height: 100%;\n  background: hsl(210, 29%, 29%);\n  color: #fff;\n  padding: 0 15px;\n  padding-top: 1.4em;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Group = styled.div`\n  margin: 0;\n  margin-bottom: 1.4em;\n\n  & > & {\n    margin-top: 1.4em;\n    font-size: 0.9em;\n  }\n`;\n\nexport const Hint = styled.p`\n  font-size: 0.9em;\n  color: hsl(210, 20%, 90%);\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: hsl(210, 29%, 24%);\n  border-radius: 0.2em;\n  border: 0.15em solid hsl(210, 29%, 24%);\n  color: #fff;\n  width: 100%;\n  padding: 0.7em 0.85em;\n  margin: 0.35em 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nexport const Select = styled(Input.withComponent(\"select\"))`\n  cursor: pointer;\n`;\n\nexport const CustomInput = styled(Input.withComponent(\"div\"))`\n  cursor: pointer;\n`;\n\nexport const CodeEditor = styled(Input.withComponent(\"textarea\"))`\n  min-height: 200px;\n  font-family: \"Fira Code Retina\", \"Fira Code\", Consolas, Menlo, Monaco,\n    monospace;\n  white-space: pre;\n  line-height: 1.5;\n\n  /* Disable user resizing of width */\n  min-width: 100%;\n  max-width: 100%;\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  > ${Input} {\n    flex: 1;\n    width: auto;\n    min-width: 0;\n\n    margin-right: 5px;\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const RoomList = styled.ol`\n  list-style: none;\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 3px;\n  background: hsl(210, 29%, 24%);\n`;\n\ninterface RoomListItemProps {\n  active?: boolean;\n}\n\nexport const RoomListItem = styled.li<RoomListItemProps>`\n  cursor: pointer;\n  padding: 7px 10px;\n  border-radius: 2px;\n  ${props =>\n    props.active &&\n    css`\n      background: hsl(210, 29%, 20%);\n      border-left: 2px solid #3498db;\n    `};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The control mode is used to determine which planes and axes to enable.\n// While a game object may be moved and scaled arbitrarily, a spawn marker\n// shouldn't be scaleable and only be moveable on the X- and Y-axis.\nexport enum ControlMode {\n  Normal,\n  RestrictedXZ\n}\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nenum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  project: Project;\n\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(project: Project) {\n    super();\n\n    this.project = project;\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  setMode(controlMode: ControlMode): void {\n    if (controlMode === ControlMode.RestrictedXZ) {\n      this.axisY.visible = false;\n      this.planeXY.visible = false;\n      this.planeYZ.visible = false;\n      this.scaleX.visible = false;\n      this.scaleY.visible = false;\n      this.scaleZ.visible = false;\n    } else {\n      this.axisY.visible = true;\n      this.planeXY.visible = true;\n      this.planeYZ.visible = true;\n      this.scaleX.visible = true;\n      this.scaleY.visible = true;\n      this.scaleZ.visible = true;\n    }\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    const target = this.project.activeObject || this.project.activeSpawn;\n    if (!target) {\n      return null;\n    }\n\n    this.position.copy(target.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset.copy(intersection.point).sub(target.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    const target = this.project.activeObject || this.project.activeSpawn;\n    if (this.objectDragDirection === null || !target) {\n      return;\n    }\n\n    const c = target.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // The second parameter of the Plane constructor is called the \"constant\" and\n    // is used for defining the plane in Hessian normal form. It defines\n    // the negative distance from the origin to the plane.\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          target.scale.x = Math.min(\n            Math.max(target.scale.x + (point.x - this.lastPoint.x), 0.1),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          target.scale.y = Math.min(\n            Math.max(target.scale.y + (point.y - this.lastPoint.y), 0.1),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          target.scale.z = Math.min(\n            Math.max(target.scale.z + (point.z - this.lastPoint.z), 0.1),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(target.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          target.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          target.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          target.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          target.position.copy(point);\n      }\n\n      this.project.events.onTranslate(target.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { InteractionType, TeleportTarget } from \"../project/GameObject\";\nimport Room from \"../project/Room\";\nimport {\n  Group,\n  Input,\n  InputGroup,\n  CustomInput,\n  Select,\n  CodeEditor,\n  Hint\n} from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  rooms: Room[];\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateInteractionType(interactionType: InteractionType): void;\n  onUpdateCodeBlockSource(source: string): void;\n  onUpdateTeleportTarget(teleportTarget: TeleportTarget): void;\n  onShowAudioSelection(): void;\n  onShowInteractionAudioSelection(): void;\n}\n\ninterface State {\n  codeError?: string;\n}\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props, State> {\n  codeCheckTimeout: number | null = null;\n  state: State = {};\n\n  checkCode = () => {\n    const { codeBlockSource } = this.props.object;\n    if (codeBlockSource == null) {\n      return;\n    }\n\n    try {\n      // Try to parse the code block source\n      new Function(\"playerState\", \"roomState\", codeBlockSource);\n      this.setState({ codeError: undefined });\n    } catch (ex) {\n      this.setState({ codeError: ex.toString() });\n    }\n  };\n\n  updateCodeBlockSource: React.ChangeEventHandler<HTMLTextAreaElement> = e => {\n    this.props.onUpdateCodeBlockSource(e.currentTarget.value);\n    if (this.codeCheckTimeout != null) {\n      window.clearTimeout(this.codeCheckTimeout);\n    }\n    this.codeCheckTimeout = window.setTimeout(this.checkCode, 2000);\n  };\n\n  updateTeleportTargetRoomId: React.ChangeEventHandler<\n    HTMLSelectElement\n  > = e => {\n    const roomId = e.currentTarget.value;\n    this.props.onUpdateTeleportTarget({ roomId, spawnId: \"\" });\n  };\n\n  updateTeleportTargetSpawnId: React.ChangeEventHandler<\n    HTMLSelectElement\n  > = e => {\n    const { object: o, onUpdateTeleportTarget } = this.props;\n    if (o.teleportTarget) {\n      const spawnId = e.currentTarget.value;\n      onUpdateTeleportTarget({ ...o.teleportTarget, spawnId });\n    }\n  };\n\n  componentDidMount(): void {\n    this.checkCode();\n  }\n\n  componentWillUnmount(): void {\n    if (this.codeCheckTimeout != null) {\n      window.clearTimeout(this.codeCheckTimeout);\n      this.codeCheckTimeout = null;\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      rooms,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale,\n      onUpdateInteractionType,\n      onShowAudioSelection,\n      onShowInteractionAudioSelection\n    } = this.props;\n    const { codeError } = this.state;\n    const teleportTargetRoom =\n      o.teleportTarget && rooms.find(r => r.uuid === o.teleportTarget!.roomId);\n\n    return (\n      <div>\n        <Group>\n          <label>Object Name</label>\n          <Input\n            type=\"text\"\n            placeholder=\"New object\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.y,\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.y.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  o.position.y,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.x).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.y,\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.y).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.z).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  o.rotation.y,\n                  degToRad(e.currentTarget.valueAsNumber % 360)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.x.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  e.currentTarget.valueAsNumber,\n                  o.scale.y,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.y.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  e.currentTarget.valueAsNumber,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.z.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  o.scale.y,\n                  e.currentTarget.valueAsNumber\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Audio</label>\n          <CustomInput onClick={onShowAudioSelection}>\n            {o.audio\n              ? `${o.audio.name} (${Math.ceil(\n                  o.audio.data.byteLength / 1024\n                )} KiB)`\n              : \"No audio selected\"}\n          </CustomInput>\n        </Group>\n        <Group>\n          <label>Interaction</label>\n          <Select\n            value={o.interactionType}\n            onChange={e =>\n              onUpdateInteractionType(e.currentTarget.value as InteractionType)\n            }\n          >\n            {Object.values(InteractionType).map(t => (\n              <option key={t}>{t}</option>\n            ))}\n          </Select>\n          {o.interactionType === InteractionType.CodeBlock && (\n            <>\n              <CodeEditor\n                placeholder=\"// JavaScript\"\n                value={o.codeBlockSource}\n                onChange={this.updateCodeBlockSource}\n              />\n              <Hint>{codeError || \"No syntax errors detected\"}</Hint>\n            </>\n          )}\n          {o.interactionType === InteractionType.Teleport && o.teleportTarget && (\n            <Group>\n              <label>Teleport Target</label>\n              <Select\n                value={o.teleportTarget.roomId}\n                onChange={this.updateTeleportTargetRoomId}\n              >\n                {rooms.map(r => (\n                  <option key={r.uuid} value={r.uuid}>\n                    {r.name || \"Anonymous Room\"}\n                  </option>\n                ))}\n              </Select>\n              {teleportTargetRoom && (\n                <Select\n                  value={o.teleportTarget.spawnId}\n                  onChange={this.updateTeleportTargetSpawnId}\n                >\n                  {teleportTargetRoom.spawns.map(s => (\n                    <option key={s.uuid} value={s.uuid}>\n                      {s.name || \"New spawn\"}\n                    </option>\n                  ))}\n                </Select>\n              )}\n            </Group>\n          )}\n          {o.interactionType !== InteractionType.None &&\n            o.interactionType !== InteractionType.CodeBlock && (\n              <Group>\n                <label>Interaction Sound</label>\n                <CustomInput onClick={onShowInteractionAudioSelection}>\n                  {o.interactionAudio\n                    ? `${o.interactionAudio.name} (${Math.ceil(\n                        o.interactionAudio.data.byteLength / 1024\n                      )} KiB)`\n                    : \"No audio selected\"}\n                </CustomInput>\n              </Group>\n            )}\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Color, Mesh, Raycaster, Vector2, Vector3, WebGLRenderer } from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport SpawnMarker from \"../project/SpawnMarker\";\nimport VisualControls, { ControlMode } from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class EditorCanvas {\n  target!: HTMLElement;\n  project: Project;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  controls: VisualControls;\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(project: Project) {\n    this.project = project;\n\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      delete this.target;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  changeProject(project: Project): void {\n    this.project = project;\n    this.controls.project = project;\n    // Ensure the selected project's camera has the correct aspect ratio\n    this.resize();\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.project.camera.aspect = offsetWidth / offsetHeight;\n    this.project.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.project.camera);\n\n    if (this.project.activeObject || this.project.activeSpawn) {\n      if (this.project.activeObject) {\n        this.controls.setMode(ControlMode.Normal);\n        this.controls.position.copy(this.project.activeObject.position);\n      } else if (this.project.activeSpawn) {\n        this.controls.setMode(ControlMode.RestrictedXZ);\n        this.controls.position.copy(this.project.activeSpawn.position);\n      }\n\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.project.camera);\n    }\n  };\n\n  update(dt: number): void {\n    const { camera } = this.project;\n\n    if (this.keys.isPressed(\"w\")) {\n      camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof SpawnMarker) {\n        this.project.selectSpawn(o);\n        return true;\n      }\n      if (o instanceof GameObject) {\n        this.project.selectObject(o);\n        return true;\n      }\n    }\n\n    this.project.unselect();\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.target.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.target.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.project.camera);\n  }\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.project.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.project.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.project.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions, ResonanceAudio, RoomMaterials } from \"resonance-audio\";\nimport { Group, Input, InputGroup, Select, Hint } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\nconst materials = Object.keys(ResonanceAudio.Utils.ROOM_MATERIAL_COEFFICIENTS);\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n  onUpdateMaterials(materials: RoomMaterials): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  selectMaterialHandler(\n    propertyName: keyof RoomMaterials\n  ): React.ChangeEventHandler<HTMLSelectElement> {\n    return e => {\n      const { room, onUpdateMaterials } = this.props;\n      onUpdateMaterials({\n        ...room.materials,\n        [propertyName]: e.currentTarget.value\n      });\n    };\n  }\n\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    const materialOptions = materials.map(ce => <option key={ce}>{ce}</option>);\n\n    return (\n      <div>\n        <Group>\n          <label>Room Name</label>\n          <Input\n            type=\"text\"\n            placeholder=\"Anonymous Room\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.width}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  width: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.depth}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  depth: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={2}\n              max={10}\n              value={r.dimensions.height}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  height: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Room Materials</label>\n          <Hint>\n            These materials are used for calculating resonance (reverb) in the\n            room. Only supported when using Resonance Audio.\n          </Hint>\n          <Group>\n            <label>Left wall</label>\n            <Select\n              value={r.materials.left}\n              onChange={this.selectMaterialHandler(\"left\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Right wall</label>\n            <Select\n              value={r.materials.right}\n              onChange={this.selectMaterialHandler(\"right\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Front wall</label>\n            <Select\n              value={r.materials.front}\n              onChange={this.selectMaterialHandler(\"front\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Back wall</label>\n            <Select\n              value={r.materials.back}\n              onChange={this.selectMaterialHandler(\"back\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Floor</label>\n            <Select\n              value={r.materials.down}\n              onChange={this.selectMaterialHandler(\"down\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n          <Group>\n            <label>Ceiling</label>\n            <Select\n              value={r.materials.up}\n              onChange={this.selectMaterialHandler(\"up\")}\n            >\n              {materialOptions}\n            </Select>\n          </Group>\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { ProjectData } from \"../data/schema\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\n\ninterface Props {\n  project: ProjectData;\n  onDelete(project: ProjectData): void;\n  onExport(project: ProjectData): void;\n  onDismiss(): void;\n  onCancel(): void;\n}\n\nexport default class ProjectInfoModal extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { project } = this.props;\n    return (\n      <Modal title=\"Project Info\" onDismiss={this.props.onDismiss}>\n        <p>\n          <b>Name:</b> {project.name}\n        </p>\n        <p>\n          <b>Last update:</b> {project.savedAt.toLocaleString()}\n        </p>\n        <p>\n          <b>Rooms:</b> {project.rooms.length}\n        </p>\n        <ActionGroup>\n          <Action onClick={() => this.props.onDelete(project)}>Delete</Action>\n          <Action onClick={() => this.props.onExport(project)}>Export</Action>\n          <Action onClick={this.props.onCancel}>Back</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ProjectData } from \"../data/schema\";\nimport { getAllProjects, deleteProject } from \"../data/db\";\nimport Project from \"../project/Project\";\nimport { saveAsZip } from \"../data/export\";\nimport Modal, { ActionGroup, Action } from \"./Modal\";\nimport ProjectInfoModal from \"./ProjectInfoModal\";\n\nconst TableContainer = styled.div`\n  border: 2px solid hsl(210, 29%, 20%);\n  border-radius: 3px;\n  max-height: 400px;\n  min-width: 500px;\n  overflow-y: auto;\n  padding-bottom: 5px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst TableHead = styled.thead`\n  text-align: left;\n`;\n\nconst TableRow = styled.tr`\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 40%);\n  }\n`;\n\nconst ColumnHead = styled.th`\n  padding: 5px 10px;\n`;\n\nconst ColumnData = styled.td`\n  padding: 5px 10px;\n`;\n\ninterface Props {\n  onNewProject(): void;\n  onDismiss(): void;\n  onSelectProject?(data: ProjectData): void;\n}\n\ninterface State {\n  projects: ProjectData[];\n  selectedProject: ProjectData | null;\n}\n\nexport default class ProjectManagerModal extends React.Component<Props, State> {\n  state: State = { projects: [], selectedProject: null };\n\n  dismiss = () => {\n    this.setState({ selectedProject: null });\n    this.props.onDismiss();\n  };\n\n  selectProject(data: ProjectData): void {\n    if (this.props.onSelectProject) {\n      this.props.onSelectProject(data);\n    } else {\n      this.setState({ selectedProject: data });\n    }\n  }\n\n  unselectProject = () => {\n    this.setState({ selectedProject: null });\n  };\n\n  deleteProject = ({ id }: ProjectData) => {\n    if (!id) {\n      return;\n    }\n    deleteProject(id);\n    this.setState(({ projects }) => ({\n      projects: projects.filter(p => p.id !== id),\n      selectedProject: null\n    }));\n  };\n\n  exportProject = (data: ProjectData) => {\n    const project = new Project().fromData(data, data.id);\n    saveAsZip(project);\n  };\n\n  async componentDidMount(): Promise<void> {\n    const projects = await getAllProjects();\n    this.setState({ projects: projects.reverse() });\n  }\n\n  render(): React.ReactNode {\n    const { projects, selectedProject } = this.state;\n\n    if (selectedProject) {\n      return (\n        <ProjectInfoModal\n          project={selectedProject}\n          onDelete={this.deleteProject}\n          onExport={this.exportProject}\n          onCancel={this.unselectProject}\n          onDismiss={this.dismiss}\n        />\n      );\n    }\n\n    return (\n      <Modal\n        title={this.props.onSelectProject ? \"Load Project\" : \"Project Manager\"}\n        onDismiss={this.dismiss}\n      >\n        {projects.length > 0 && (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <tr>\n                  <ColumnHead>ID</ColumnHead>\n                  <ColumnHead>Name</ColumnHead>\n                  <ColumnHead>Rooms</ColumnHead>\n                  <ColumnHead>Last update</ColumnHead>\n                </tr>\n              </TableHead>\n              <tbody>\n                {projects.map(p => (\n                  <TableRow key={p.id} onClick={() => this.selectProject(p)}>\n                    <ColumnData>{p.id}</ColumnData>\n                    <ColumnData>{p.name}</ColumnData>\n                    <ColumnData>{p.rooms.length}</ColumnData>\n                    <ColumnData>{p.savedAt.toLocaleString()}</ColumnData>\n                  </TableRow>\n                ))}\n              </tbody>\n            </Table>\n          </TableContainer>\n        )}\n        {!projects.length && <p>You don't have any saved projects yet</p>}\n        <ActionGroup>\n          <Action onClick={this.props.onNewProject}>New project</Action>\n          <Action onClick={this.dismiss}>Cancel</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Leon Erath\n * @author Daniel Salomon\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport DistanceModel from \"../audio/DistanceModel\";\nimport Project from \"../project/Project\";\nimport { Group, Select, Hint, CustomInput } from \"./styled\";\nimport Modal, { Action, ActionGroup } from \"./Modal\";\nimport AudioLibraryModal from \"./AudioLibraryModal\";\nimport { AudioEntry } from \"./types\";\n\nconst InnerContainer = styled.div`\n  overflow: auto;\n  max-height: 400px;\n  /* Add some space between content and scrollbar */\n  padding: 0 10px;\n  margin: 0 -10px;\n`;\n\nenum AudioSelectionTarget {\n  Footstep,\n  Collision,\n  InteractAvail\n}\n\ninterface Props {\n  project: Project;\n  onDismiss(): void;\n}\n\ninterface State {\n  distanceModel: DistanceModel;\n  footstepAudio?: AudioEntry;\n  collisionAudio?: AudioEntry;\n  interactAvailAudio?: AudioEntry;\n  audioSelectionTarget?: AudioSelectionTarget;\n}\n\nexport default class SettingsModal extends React.Component<Props, State> {\n  state: State = {\n    distanceModel: DistanceModel.Linear\n  };\n\n  selectDistanceModel = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { project } = this.props;\n    const distanceModel = e.currentTarget.value as DistanceModel;\n    project.selectDistanceModel(distanceModel);\n    this.setState({ distanceModel });\n  };\n\n  componentDidMount(): void {\n    this.onProjectChanged();\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.project !== this.props.project) {\n      this.onProjectChanged();\n    }\n  }\n\n  onProjectChanged(): void {\n    const { project } = this.props;\n    this.setState({\n      distanceModel: project.distanceModel,\n      footstepAudio:\n        project.footstepAudioID != null && project.footstepAudioFile\n          ? {\n              ...project.footstepAudioFile,\n              id: project.footstepAudioID\n            }\n          : undefined,\n      collisionAudio:\n        project.collisionAudioID != null && project.collisionAudioFile\n          ? {\n              ...project.collisionAudioFile,\n              id: project.collisionAudioID\n            }\n          : undefined,\n      interactAvailAudio:\n        project.interactAvailAudioID != null && project.interactAvailAudioFile\n          ? {\n              ...project.interactAvailAudioFile,\n              id: project.interactAvailAudioID\n            }\n          : undefined\n    });\n  }\n\n  hideAudioSelection = () => {\n    this.setState({ audioSelectionTarget: undefined });\n  };\n\n  selectAudio = (entry: AudioEntry) => {\n    const { project } = this.props;\n\n    switch (this.state.audioSelectionTarget) {\n      case AudioSelectionTarget.Footstep:\n        project.setFootstepAudio(entry.id);\n        this.setState({ footstepAudio: entry });\n        break;\n      case AudioSelectionTarget.Collision:\n        project.setCollisionAudio(entry.id);\n        this.setState({ collisionAudio: entry });\n        break;\n      case AudioSelectionTarget.InteractAvail:\n        project.setInteractAvailAudio(entry.id);\n        this.setState({ interactAvailAudio: entry });\n        break;\n    }\n\n    this.hideAudioSelection();\n  };\n\n  render(): React.ReactNode {\n    const { project, onDismiss } = this.props;\n    const {\n      footstepAudio,\n      collisionAudio,\n      interactAvailAudio,\n      audioSelectionTarget\n    } = this.state;\n\n    if (audioSelectionTarget != null) {\n      return (\n        <AudioLibraryModal\n          audioLibrary={project.audioLibrary}\n          onDismiss={this.hideAudioSelection}\n          onSelect={this.selectAudio}\n        />\n      );\n    }\n\n    return (\n      <Modal onDismiss={onDismiss} title=\"Settings\">\n        <InnerContainer>\n          <Group>\n            <label>General</label>\n            <Group>\n              <label>Footstep sound</label>\n              <CustomInput\n                onClick={() =>\n                  this.setState({\n                    audioSelectionTarget: AudioSelectionTarget.Footstep\n                  })\n                }\n              >\n                {footstepAudio\n                  ? `${footstepAudio.name} (${Math.ceil(\n                      footstepAudio.data.byteLength / 1024\n                    )} KiB)`\n                  : \"No audio selected\"}\n              </CustomInput>\n            </Group>\n            <Group>\n              <label>Collision sound</label>\n              <CustomInput\n                onClick={() =>\n                  this.setState({\n                    audioSelectionTarget: AudioSelectionTarget.Collision\n                  })\n                }\n              >\n                {collisionAudio\n                  ? `${collisionAudio.name} (${Math.ceil(\n                      collisionAudio.data.byteLength / 1024\n                    )} KiB)`\n                  : \"No audio selected\"}\n              </CustomInput>\n            </Group>\n            <Group>\n              <label>Interaction available sound</label>\n              <CustomInput\n                onClick={() =>\n                  this.setState({\n                    audioSelectionTarget: AudioSelectionTarget.InteractAvail\n                  })\n                }\n              >\n                {interactAvailAudio\n                  ? `${interactAvailAudio.name} (${Math.ceil(\n                      interactAvailAudio.data.byteLength / 1024\n                    )} KiB)`\n                  : \"No audio selected\"}\n              </CustomInput>\n            </Group>\n          </Group>\n          <Group>\n            <label>Web Audio API</label>\n            <Group>\n              <label>Distance Model</label>\n              <Select\n                value={this.state.distanceModel}\n                onChange={this.selectDistanceModel}\n              >\n                <option value={DistanceModel.Linear}>Linear</option>\n                <option value={DistanceModel.Inverse}>Inverse</option>\n                <option value={DistanceModel.Exponential}>Exponential</option>\n              </Select>\n            </Group>\n          </Group>\n          <Group>\n            <label>Resonance Audio</label>\n          </Group>\n          <Group>\n            <label>BinauralFIR</label>\n            <Hint>\n              There are no settings currently available for the BinauralFIR\n              implementation.\n            </Hint>\n          </Group>\n        </InnerContainer>\n        <ActionGroup>\n          <Action onClick={onDismiss}>Done</Action>\n        </ActionGroup>\n      </Modal>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions, RoomMaterials } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport { openZip } from \"../data/import\";\nimport GameObject, {\n  InteractionType,\n  TeleportTarget\n} from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport { ProjectData } from \"../data/schema\";\nimport AudioImplementation from \"../audio/AudioImplementation\";\nimport RuntimeContainer from \"../runtime/RuntimeContainer\";\nimport DistanceModel from \"../audio/DistanceModel\";\nimport CodeBlock from \"../project/CodeBlock\";\nimport SpawnMarker from \"../project/SpawnMarker\";\nimport AudioLibraryModal from \"./AudioLibraryModal\";\nimport MenuBar from \"./MenuBar\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport EditorCanvas from \"./EditorCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport {\n  Container,\n  FocusedLabel,\n  Group,\n  InnerContainer,\n  Main,\n  RoomList,\n  RoomListItem,\n  Sidebar\n} from \"./styled\";\nimport { EditorObject, EditorRoom, AudioEntry, EditorSpawn } from \"./types\";\nimport ProjectManagerModal from \"./ProjectManagerModal\";\nimport SettingsModal from \"./SettingsModal\";\nimport SpawnEditor from \"./SpawnEditor\";\n\nenum ModalType {\n  AudioLibrary,\n  AudioSelection,\n  ProjectManager,\n  ProjectSelection,\n  Settings\n}\n\nenum AudioSelectionTarget {\n  ObjectAudio,\n  InteractionAudio\n}\n\ninterface State {\n  audioImplementation: AudioImplementation;\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedSpawn: EditorSpawn | null;\n  selectedObject: EditorObject | null;\n  modal: ModalType | null;\n  project: Project;\n  runningProject: Project | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project: Project = new Project();\n  projectCanvas = new EditorCanvas(this.project);\n\n  state: State = {\n    audioImplementation: this.project.activeAudioImplementation,\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions,\n      materials: r.materials\n    })),\n    selectedRoomId: 0,\n    selectedSpawn: null,\n    selectedObject: null,\n    modal: null,\n    project: this.project, // Keep a reference to the project in the UI state as well to react to a project change\n    runningProject: null\n  };\n  audioSelectionTarget = AudioSelectionTarget.ObjectAudio;\n  mainRef = React.createRef<HTMLElement>();\n\n  constructor(props: {}) {\n    super(props);\n\n    this.project.events = {\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n  }\n\n  // Menubar functionality\n\n  newProject = () => {\n    this.project.close();\n    this.project = new Project({\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    });\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      audioImplementation: this.project.activeAudioImplementation,\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions,\n        materials: r.materials\n      })),\n      selectedRoomId: 0,\n      selectedSpawn: null,\n      selectedObject: null,\n      project: this.project,\n      modal: null\n    });\n  };\n\n  showProjectSelection = async () => {\n    this.setState({\n      modal: ModalType.ProjectSelection\n    });\n  };\n\n  saveProject = async () => {\n    if (this.project.id == null) {\n      const name = prompt(\"Project name:\", this.project.name);\n      if (!name) {\n        return;\n      }\n      this.project.name = name;\n    }\n    await this.project.save();\n  };\n\n  importProject = async () => {\n    try {\n      const project = await openZip();\n      this.project.close();\n      this.project = project;\n    } catch (ex) {\n      console.log(\"Opening project zip failed:\", ex);\n      alert(\n        \"The selected project could not be imported, please select a valid project archive.\"\n      );\n      return;\n    }\n\n    this.project.events = {\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      audioImplementation: this.project.activeAudioImplementation,\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions,\n        materials: r.materials\n      })),\n      selectedRoomId: 0,\n      selectedSpawn: null,\n      selectedObject: null,\n      project: this.project,\n      modal: null\n    });\n  };\n\n  exportProject = () => {\n    saveAsZip(this.project);\n  };\n\n  addObject = () => {\n    const object = this.project.activeRoom.addObject();\n    this.project.selectObject(object);\n  };\n\n  deleteObject = () => {\n    if (this.project.activeObject) {\n      this.project.activeRoom.remove(this.project.activeObject);\n      this.project.activeObject.audio.stop();\n      this.project.unselect();\n    }\n  };\n\n  addSpawn = () => {\n    const spawn = this.project.activeRoom.addSpawn();\n    this.project.selectSpawn(spawn);\n  };\n\n  deleteSpawn = () => {\n    const { spawns } = this.project.activeRoom;\n    // Ensure that at least one spawn per room exists, as it is used\n    // as a fallback when a requested spawn does not exist.\n    if (this.project.activeSpawn && spawns.length > 1) {\n      spawns.splice(spawns.indexOf(this.project.activeSpawn));\n      this.project.activeRoom.remove(this.project.activeSpawn);\n      this.project.activeSpawn = null;\n      this.project.unselect();\n    }\n  };\n\n  addRoom = () => {\n    const room = this.project.addRoom();\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions,\n          materials: room.materials\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  deleteRoom = () => {\n    // Ensure the first room cannot be deleted\n    if (this.state.selectedRoomId > 0) {\n      this.project.rooms.splice(this.state.selectedRoomId, 1);\n      this.setState(s => ({\n        rooms: [\n          ...s.rooms.slice(0, s.selectedRoomId),\n          ...s.rooms.slice(s.selectedRoomId + 1)\n        ],\n        selectedRoomId: 0\n      }));\n    }\n  };\n\n  showAudioLibrary = () => {\n    this.setState({ modal: ModalType.AudioLibrary });\n  };\n\n  selectDistanceModel = (distanceModel: DistanceModel) => {\n    this.project.selectDistanceModel(distanceModel);\n  };\n\n  showProjectManager = () => {\n    this.setState({ modal: ModalType.ProjectManager });\n  };\n\n  selectAudioImplementation = (audioImplementation: AudioImplementation) => {\n    this.project.selectAudioImplementation(audioImplementation);\n    this.setState({ audioImplementation });\n  };\n\n  runProject = () => {\n    this.projectCanvas.detach();\n    // Copy project so any changes made during runtime are not persisted\n    const runningProject = new Project().fromData(\n      this.project.toData(),\n      this.project.id\n    );\n    runningProject.audioLibrary = this.project.audioLibrary;\n    runningProject.selectAudioImplementation(\n      this.project.activeAudioImplementation\n    );\n    this.project.suspend();\n    this.setState({ runningProject });\n  };\n\n  showSettings = () => {\n    this.setState({ modal: ModalType.Settings });\n  };\n\n  // Room specific editor functionality\n\n  selectRoom(id: number): void {\n    this.project.selectRoom(this.project.rooms[id]);\n    this.setState({ selectedRoomId: id });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomMaterials = (materials: RoomMaterials) => {\n    this.project.activeRoom.materials = materials;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          materials\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  // Spawn editor functionality\n\n  updateSpawnName = (name: string) => {\n    if (this.project.activeSpawn) {\n      this.project.activeSpawn.name = name;\n    }\n    this.setState(({ selectedSpawn }) => ({\n      selectedSpawn: selectedSpawn && {\n        ...selectedSpawn,\n        name\n      }\n    }));\n  };\n\n  updateSpawnPosition = (x: number, z: number) => {\n    if (this.project.activeSpawn) {\n      this.project.activeSpawn.position.x = x;\n      this.project.activeSpawn.position.z = z;\n    }\n    this.setState(({ selectedSpawn }) => ({\n      selectedSpawn: selectedSpawn && {\n        ...selectedSpawn,\n        position: new Vector3(x, 0, z)\n      }\n    }));\n  };\n\n  updateSpawnRotation = (y: number) => {\n    if (this.project.activeSpawn) {\n      this.project.activeSpawn.rotation.y = y;\n    }\n    this.setState(({ selectedSpawn }) => ({\n      selectedSpawn: selectedSpawn && {\n        ...selectedSpawn,\n        rotation: y\n      }\n    }));\n  };\n\n  // Object editor functionality\n\n  updateObjectName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateObjectScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateObjectPosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateObjectRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateObjectInteractionType = (interactionType: InteractionType) => {\n    const defaultTarget: TeleportTarget = {\n      roomId: this.project.rooms[0].uuid,\n      spawnId: \"\"\n    };\n    if (this.project.activeObject) {\n      this.project.activeObject.interactionType = interactionType;\n      this.project.activeObject.teleportTarget =\n        this.project.activeObject.teleportTarget || defaultTarget;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        interactionType,\n        teleportTarget: selectedObject.teleportTarget || defaultTarget\n      }\n    }));\n  };\n\n  updateObjectCodeBlockSource = (codeBlockSource: string) => {\n    if (this.project.activeObject) {\n      if (this.project.activeObject.codeBlock) {\n        this.project.activeObject.codeBlock.update(codeBlockSource);\n      } else {\n        this.project.activeObject.codeBlock = new CodeBlock(codeBlockSource);\n      }\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        codeBlockSource\n      }\n    }));\n  };\n\n  updateObjectTeleportTarget = (teleportTarget: TeleportTarget) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.teleportTarget = teleportTarget;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        teleportTarget\n      }\n    }));\n  };\n\n  showAudioSelection = () => {\n    this.audioSelectionTarget = AudioSelectionTarget.ObjectAudio;\n    this.setState({\n      modal: ModalType.AudioSelection\n    });\n  };\n\n  showInteractionAudioSelection = () => {\n    this.audioSelectionTarget = AudioSelectionTarget.InteractionAudio;\n    this.setState({\n      modal: ModalType.AudioSelection\n    });\n  };\n\n  // Modal events\n\n  dismissModal = () => {\n    this.setState({ modal: null });\n  };\n\n  selectAudio = (audio: AudioEntry) => {\n    if (this.project.activeObject) {\n      if (this.audioSelectionTarget === AudioSelectionTarget.InteractionAudio) {\n        this.project.activeObject.interactionAudioId = audio.id;\n        this.setState(({ selectedObject }) => ({\n          selectedObject: selectedObject && {\n            ...selectedObject,\n            interactionAudio: audio\n          },\n          modal: null\n        }));\n      } else {\n        this.project.activeRoom.audioScene.resume();\n        this.project.activeObject.playAudio(audio.id, false);\n        this.setState(({ selectedObject }) => ({\n          selectedObject: selectedObject && {\n            ...selectedObject,\n            audio\n          },\n          modal: null\n        }));\n      }\n    }\n  };\n\n  loadProject = (data: ProjectData) => {\n    try {\n      const project = new Project().fromData(data, data.id);\n      this.project.close();\n      this.project = project;\n    } catch (ex) {\n      console.log(\"Loading project failed:\", ex);\n      alert(\"The selected project could not be loaded\");\n    }\n    this.project.events = {\n      onSelectSpawn: this.onSelectSpawn,\n      onSelectObject: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      audioImplementation: this.project.activeAudioImplementation,\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions,\n        materials: r.materials\n      })),\n      selectedRoomId: 0,\n      selectedSpawn: null,\n      selectedObject: null,\n      project: this.project,\n      modal: null\n    });\n  };\n\n  // Project canvas events\n\n  onSelectSpawn = (s: SpawnMarker | null) => {\n    this.setState({\n      selectedSpawn: s && {\n        id: s.id,\n        name: s.name,\n        position: s.position,\n        rotation: s.rotation.y\n      },\n      selectedObject: null\n    });\n  };\n\n  onSelectObject = async (o: GameObject | null) => {\n    const interactionAudio =\n      o && o.interactionAudioId != null\n        ? await this.project.audioLibrary.get(o.interactionAudioId)\n        : undefined;\n    this.setState({\n      selectedSpawn: null,\n      selectedObject: o && {\n        id: o.id,\n        name: o.name,\n        position: o.position,\n        scale: o.scale,\n        rotation: o.rotation,\n        audio:\n          o.audioFile && o.audioId != null\n            ? {\n                ...o.audioFile,\n                id: o.audioId\n              }\n            : undefined,\n        interactionType: o.interactionType,\n        codeBlockSource: o.codeBlock && o.codeBlock.source,\n        teleportTarget: o.teleportTarget,\n        interactionAudio:\n          interactionAudio && o.interactionAudioId != null\n            ? {\n                ...interactionAudio,\n                id: o.interactionAudioId\n              }\n            : undefined\n      }\n    });\n  };\n\n  onTranslateObject = (p: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: p\n      }\n    }));\n  };\n\n  onScaleObject = (s: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        size: {\n          width: s.x,\n          height: s.y,\n          depth: s.z\n        }\n      }\n    }));\n  };\n\n  // Runtime events\n\n  exitRuntime = () => {\n    if (!this.state.runningProject) {\n      return;\n    }\n    const { activeAudioImplementation } = this.state.runningProject;\n    this.state.runningProject.close();\n    this.project.selectAudioImplementation(activeAudioImplementation);\n    this.setState({\n      runningProject: null,\n      audioImplementation: activeAudioImplementation\n    });\n  };\n\n  // React component lifecycle methods\n\n  attachCanvas = (target: HTMLElement | null) => {\n    if (target != null) {\n      this.projectCanvas.attach(target);\n      this.projectCanvas.focus();\n    } else {\n      this.projectCanvas.detach();\n    }\n  };\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  render(): React.ReactNode {\n    const { modal, runningProject, audioImplementation } = this.state;\n    const { selectedSpawn: s, selectedObject: o } = this.state;\n\n    if (runningProject) {\n      return (\n        <RuntimeContainer project={runningProject} onExit={this.exitRuntime} />\n      );\n    }\n\n    return (\n      <Container>\n        {(modal === ModalType.AudioLibrary ||\n          modal === ModalType.AudioSelection) && (\n          <AudioLibraryModal\n            audioLibrary={this.project.audioLibrary}\n            onDismiss={this.dismissModal}\n            onSelect={\n              modal === ModalType.AudioSelection ? this.selectAudio : undefined\n            }\n          />\n        )}\n        {(modal === ModalType.ProjectManager ||\n          modal === ModalType.ProjectSelection) && (\n          <ProjectManagerModal\n            onNewProject={this.newProject}\n            onDismiss={this.dismissModal}\n            onSelectProject={\n              modal === ModalType.ProjectSelection\n                ? this.loadProject\n                : undefined\n            }\n          />\n        )}\n        {modal === ModalType.Settings && (\n          <SettingsModal project={this.project} onDismiss={this.dismissModal} />\n        )}\n        <MenuBar\n          audioImplementation={audioImplementation}\n          onAudioChange={this.selectAudioImplementation}\n          onNewProject={this.newProject}\n          onLoadProject={this.showProjectSelection}\n          onSaveProject={this.saveProject}\n          onImportProject={this.importProject}\n          onExportProject={this.exportProject}\n          onShowSettings={this.showSettings}\n          onAddObject={this.addObject}\n          onDeleteObject={this.deleteObject}\n          onAddSpawn={this.addSpawn}\n          onDeleteSpawn={this.deleteSpawn}\n          onAddRoom={this.addRoom}\n          onDeleteRoom={this.deleteRoom}\n          onShowAudioLibrary={this.showAudioLibrary}\n          onShowProjectManager={this.showProjectManager}\n          onRunProject={this.runProject}\n        />\n        <InnerContainer>\n          <Sidebar>\n            <Group>\n              <label>Rooms</label>\n              <RoomList>\n                {this.state.rooms.map((r, i) => (\n                  <RoomListItem\n                    key={r.id}\n                    onClick={() => this.selectRoom(i)}\n                    active={i === this.state.selectedRoomId}\n                  >\n                    {r.name || \"Anonymous Room\"}\n                  </RoomListItem>\n                ))}\n              </RoomList>\n            </Group>\n            {!(s || o) && (\n              <RoomEditor\n                room={this.state.rooms[this.state.selectedRoomId]}\n                onUpdateName={this.updateRoomName}\n                onUpdateDimensions={this.updateRoomDimensions}\n                onUpdateMaterials={this.updateRoomMaterials}\n              />\n            )}\n            {s && (\n              <SpawnEditor\n                spawn={s}\n                onUpdateName={this.updateSpawnName}\n                onUpdatePosition={this.updateSpawnPosition}\n                onUpdateRotation={this.updateSpawnRotation}\n              />\n            )}\n            {o && (\n              <ObjectEditor\n                object={o}\n                rooms={this.project.rooms}\n                onUpdateName={this.updateObjectName}\n                onUpdatePosition={this.updateObjectPosition}\n                onUpdateRotation={this.updateObjectRotation}\n                onUpdateScale={this.updateObjectScale}\n                onUpdateInteractionType={this.updateObjectInteractionType}\n                onUpdateCodeBlockSource={this.updateObjectCodeBlockSource}\n                onUpdateTeleportTarget={this.updateObjectTeleportTarget}\n                onShowAudioSelection={this.showAudioSelection}\n                onShowInteractionAudioSelection={\n                  this.showInteractionAudioSelection\n                }\n              />\n            )}\n          </Sidebar>\n          <Main ref={this.attachCanvas}>\n            <FocusedLabel>Focused</FocusedLabel>\n          </Main>\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorSpawn } from \"./types\";\n\ninterface Props {\n  spawn: EditorSpawn;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, z: number): void;\n  onUpdateRotation(y: number): void;\n}\n\n// UI component for editing properties specific to spawns inside a room\nexport default class SpawnEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const {\n      spawn: s,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Spawn Name</label>\n          <Input\n            type=\"text\"\n            placeholder=\"New spawn\"\n            value={s.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={s.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  s.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={s.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  s.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (y)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(s.rotation).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(degToRad(e.currentTarget.valueAsNumber % 360))\n              }\n            />\n          </InputGroup>\n        </Group>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Safari does not yet support the Web Audio API without a prefix\nif (!window.AudioContext && window.webkitAudioContext) {\n  window.AudioContext = window.webkitAudioContext;\n}\n\n// Check if we're running as a desktop app through NW.js\nif (window.nw) {\n  const nw = window.nw;\n  const w = nw.Window.get();\n  // Maximize the window on start\n  w.maximize();\n  w.focus();\n  // Ensure external links open in the OS' browser instead of a\n  // new window in the app.\n  w.on(\"new-win-policy\", (frame, url, policy) => {\n    if (policy && url) {\n      policy.ignore();\n      nw.Shell.openExternal(url);\n    }\n  });\n  // Ask the user for confirmation when closing the window,\n  // to ensure there are no unsaved changes.\n  w.on(\"close\", () => {\n    if (\n      confirm(\"Do you really want to quit? There might be unsaved changes.\")\n    ) {\n      // Finally, force close to avoid this event being triggered again\n      w.close(true);\n    }\n  });\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  // If we are running in the production environment, make sure the user\n  // does not close the editor unintentionally.\n  window.addEventListener(\"beforeunload\", e => e.preventDefault());\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}