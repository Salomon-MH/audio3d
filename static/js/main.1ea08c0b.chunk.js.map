{"version":3,"sources":["project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["AudioLibrary","nextId","data","this","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","audioLibrary","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","Room","arguments","length","undefined","roomDimensions","width","height","depth","grid","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","addCube","dimensions","remove","cube","y","objects","children","filter","c","map","go","toData","_this2","gameObjects","o","fromData","apply","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","activeRoom","activeObject","r","ObjectDragDirection","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","radToDeg","rad","PI","degToRad","deg","ObjectEditor","onAudioFileSelected","e","files","currentTarget","file","item","console","log","size","reader","FileReader","onload","result","props","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","react_default","a","createElement","type","value","onChange","step","x","valueAsNumber","z","toFixed","min","accept","React","Component","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","mapping","axis","axes","abs","v1","buttons","err","return","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","key","onKeyUp","delete","onClick","button","shiftKey","document","has","MouseButton","VisualControls","project","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","focus","cancelAnimationFrame","removeChild","stop","geometry","previousAudio","getObjectByName","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","selectObject","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","room","onUpdateDimensions","Editor","setState","selectedObject","s","_ref2","projectCanvas","state","selectedRoomId","mainRef","createRef","updateRoomName","_ref3","concat","slice","updateRoomDimensions","_ref4","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","push","onAddCubeClick","current","attach","detach","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ea08c0b.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): this {\n    this.set(this.nextId, data);\n    this.nextId++;\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray()\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport { AmbientLight, GridHelper, Object3D, PointLight, Scene } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.addCube();\n  }\n\n  addCube(): void {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    // this.selectMesh(cube);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Vector3 } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n  rooms: Room[] = [\n    new Room(this.audioLibrary, \"First room\", {\n      width: 15,\n      depth: 10,\n      height: 3\n    })\n  ];\n\n  activeRoom: Room = this.rooms[0];\n  activeObject: GameObject | null = null;\n\n  constructor(public events: ProjectEvents = defaultEvents) {}\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n\n    return this;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nexport const Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: #2c3e50;\n  border-radius: 3px;\n  border: 2px solid #2c3e50;\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { Group, Input } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// Converts radiant angles to degrees\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nconst degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.x}\n            onChange={e =>\n              onUpdatePosition(\n                e.currentTarget.valueAsNumber,\n                o.position.y,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.y}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                e.currentTarget.valueAsNumber,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.z}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                o.position.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.x).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.y,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.y).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.z).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                o.rotation.y,\n                degToRad(e.currentTarget.valueAsNumber)\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.x}\n            onChange={e =>\n              onUpdateScale(e.currentTarget.valueAsNumber, o.scale.y, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.y}\n            onChange={e =>\n              onUpdateScale(o.scale.x, e.currentTarget.valueAsNumber, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.z}\n            onChange={e =>\n              onUpdateScale(o.scale.x, o.scale.y, e.currentTarget.valueAsNumber)\n            }\n          />\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  controls: VisualControls;\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.project.activeObject) {\n      this.project.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.project.activeObject = o;\n    this.project.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n\n    const previousAudio = this.project.activeObject.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.project.activeObject.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.selectObject(o);\n        return true;\n      }\n    }\n\n    this.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Group, Input } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.width}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                width: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.depth}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                depth: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={3}\n            max={50}\n            value={r.dimensions.height}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                height: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport { Container, Main, Sidebar } from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project = new Project({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            scale: o.scale,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  selectRoom(id: number): void {\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = this.project.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\", {\n      width: 10,\n      depth: 10,\n      height: 3\n    });\n    this.project.rooms.push(room);\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = room;\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          <div>\n            <button onClick={this.onAddRoomClick}>Add room</button>\n            <button onClick={this.onAddCubeClick}>Add cube</button>\n          </div>\n          <ol>\n            {this.state.rooms.map((r, i) => (\n              <li\n                key={r.id}\n                onClick={() => this.selectRoom(i)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {r.name}\n              </li>\n            ))}\n          </ol>\n          {!o && (\n            <RoomEditor\n              room={this.state.rooms[this.state.selectedRoomId]}\n              onUpdateName={this.updateRoomName}\n              onUpdateDimensions={this.updateRoomDimensions}\n            />\n          )}\n          {o && (\n            <ObjectEditor\n              object={o}\n              onUpdateName={this.updateName}\n              onUpdatePosition={this.updatePosition}\n              onUpdateRotation={this.updateRotation}\n              onUpdateScale={this.updateScale}\n              onUpdateAudio={this.updateAudio}\n            />\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}