{"version":3,"sources":["3d/SceneCanvas.tsx","3d/KeyboardListener.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["MouseButton","KeyboardListener","_this","this","target","arguments","length","undefined","document","Object","classCallCheck","keysPressed","Set","onKeyDown","e","preventDefault","add","key","onKeyUp","delete","addEventListener","removeEventListener","has","directions","up","Vector3","down","left","right","forwards","backwards","f","time","orbitalPeriod","radius","Math","sin","PI","cos","Container","styled","div","_templateObject","SceneCanvas","props","possibleConstructorReturn","getPrototypeOf","call","containerRef","React","rafHandle","previousTimestamp","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","grid","GridHelper","smallCube","Mesh","outlineMesh","keys","isDraggingCamera","resize","current","_this$containerRef$cu","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setSize","animate","t","window","requestAnimationFrame","dt","rotation","x","y","position","copy","isPressed","translateOnAxis","rotateOnWorldAxis","rotateOnAxis","render","onClick","button","Primary","size","getSize","Vector2","pageX","currentTarget","offsetLeft","pageY","offsetTop","console","log","raycaster","Raycaster","setFromCamera","intersections","intersectObjects","children","remove","i","object","geometry","onWheel","delta","deltaY","deltaMode","translateZ","onMouseDown","Secondary","requestPointerLock","onMouseUp","exitPointerLock","onMouseMove","movementX","movementY","BoxGeometry","material","MeshNormalMaterial","cube","z","lookAt","outlineMaterial","MeshBasicMaterial","color","side","BackSide","scale","multiplyScalar","toJSON","listen","appendChild","domElement","focus","stop","cancelAnimationFrame","react","tabIndex","ref","onContextMenu","Editor_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Editor","react_default","a","createElement","Editor_Container","SceneCanvas_SceneCanvas","Component","Boolean","location","hostname","match","ReactDOM","Editor_Editor","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70cf396e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BackSide,\n  BoxGeometry,\n  GridHelper,\n  Mesh,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport KeyboardListener from \"./KeyboardListener\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class SceneCanvas extends React.Component {\n  containerRef = React.createRef<HTMLDivElement>();\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  target: Mesh | null = null;\n\n  scene = new Scene();\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  grid = new GridHelper(10, 10);\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  keys = new KeyboardListener();\n  isDraggingCamera = false;\n\n  constructor(props: any) {\n    super(props);\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    /* const material = new MeshBasicMaterial({\n      color: 0xffffff,\n      wireframe: true\n    }); */\n    const material = new MeshNormalMaterial();\n    const cube = new Mesh(geometry, material);\n    cube.position.y += 0.5;\n\n    this.smallCube.geometry = new BoxGeometry(0.25, 0.25, 0.25);\n    this.smallCube.material = material;\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    this.camera.position.x = -2;\n    this.camera.position.y = 2;\n    this.camera.position.z = 3;\n    this.camera.lookAt(this.scene.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0x00ff00,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n  }\n\n  componentDidMount(): void {\n    this.keys.listen();\n    this.containerRef.current!.appendChild(this.renderer.domElement);\n\n    this.containerRef.current!.focus();\n    this.resize();\n    this.animate(0);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  componentWillUnmount(): void {\n    this.keys.stop();\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = (): void => {\n    if (!this.containerRef.current) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.containerRef.current;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    // this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n\n    this.smallCube.rotation.x += 0.01;\n    this.smallCube.rotation.y += 0.01;\n    this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  onClick: React.MouseEventHandler<HTMLElement> = e => {\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    const size = this.renderer.getSize(new Vector2());\n    const x = ((e.pageX - e.currentTarget.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - e.currentTarget.offsetTop) / size.y) * 2 + 1;\n    console.log(size, x, y);\n\n    const raycaster = new Raycaster();\n    raycaster.setFromCamera({ x, y }, this.camera);\n    const intersections = raycaster.intersectObjects(this.scene.children, true);\n    if (this.target) {\n      this.target.remove(this.outlineMesh);\n      this.target = null;\n    }\n    for (let i = 0; i < intersections.length && !this.target; i++) {\n      if (intersections[i].object !== this.grid) {\n        this.target = intersections[i].object as Mesh;\n        this.outlineMesh.geometry = this.target.geometry;\n        this.target.add(this.outlineMesh);\n      }\n    }\n  };\n\n  onWheel: React.WheelEventHandler = e => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta);\n  };\n\n  onMouseDown: React.MouseEventHandler = e => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.containerRef.current!.requestPointerLock();\n    }\n  };\n\n  onMouseUp: React.MouseEventHandler = e => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      document.exitPointerLock();\n      this.isDraggingCamera = false;\n    }\n  };\n\n  onMouseMove: React.MouseEventHandler = e => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <Container\n        tabIndex={-1}\n        ref={this.containerRef}\n        onClick={this.onClick}\n        onWheel={this.onWheel}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onMouseMove={this.onMouseMove}\n        onContextMenu={e => e.preventDefault()}\n      />\n    );\n  }\n}\n","export default class KeyboardListener {\n  keysPressed = new Set<string>();\n\n  constructor(private target: Document = document) {}\n\n  listen(): void {\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.add(e.key);\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #666;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport default class Editor extends React.Component {\n  render(): React.ReactNode {\n    return (\n      <Container>\n        <Sidebar>Sidebar</Sidebar>\n        <Main>\n          <SceneCanvas />\n        </Main>\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}