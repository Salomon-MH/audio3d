{"version":3,"sources":["data/export.ts","project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["createZip","project","metadata","toData","zip","Zip","file","JSON","stringify","audioFolder","folder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","audioLibrary","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","toString","err","return","generateAsync","type","saveAsZip","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","sent","saveAs","stop","this","_x","apply","arguments","AudioLibrary","nextId","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","Room","length","roomDimensions","width","height","depth","grid","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","addCube","dimensions","remove","cube","y","objects","children","filter","c","map","go","_this2","gameObjects","o","fromData","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","activeRoom","activeObject","r","ObjectDragDirection","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","radToDeg","rad","PI","degToRad","deg","ObjectEditor","onAudioFileSelected","e","files","currentTarget","item","console","log","size","reader","FileReader","onload","result","props","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","react_default","createElement","onChange","step","x","valueAsNumber","z","toFixed","min","accept","React","Component","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","onKeyUp","delete","onClick","button","shiftKey","document","has","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","focus","cancelAnimationFrame","removeChild","geometry","previousAudio","getObjectByName","slice","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","selectObject","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","room","onUpdateDimensions","Editor","setState","selectedObject","s","projectCanvas","state","selectedRoomId","mainRef","createRef","updateRoomName","concat","updateRoomDimensions","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","push","onAddCubeClick","onExportClick","current","attach","detach","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89ad16b2.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioFolder = zip.folder(\"audio\");\n  for (const [key, value] of project.audioLibrary.entries()) {\n    audioFolder.file(key.toString(), value);\n  }\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project) => {\n  const data = await createZip(project);\n  saveAs(data, \"audio3d-project.zip\");\n};\n","/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): number {\n    this.set(this.nextId, data);\n    return this.nextId++;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray(),\n      audioId: this.audioId\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport { AmbientLight, GridHelper, Object3D, PointLight, Scene } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.addCube();\n  }\n\n  addCube(): void {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    // this.selectMesh(cube);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Vector3 } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n  rooms: Room[] = [\n    new Room(this.audioLibrary, \"First room\", {\n      width: 15,\n      depth: 10,\n      height: 3\n    })\n  ];\n\n  activeRoom: Room = this.rooms[0];\n  activeObject: GameObject | null = null;\n\n  constructor(public events: ProjectEvents = defaultEvents) {}\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n\n    return this;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nexport const Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: #2c3e50;\n  border-radius: 3px;\n  border: 2px solid #2c3e50;\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { Group, Input } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// Converts radiant angles to degrees\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nconst degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.x}\n            onChange={e =>\n              onUpdatePosition(\n                e.currentTarget.valueAsNumber,\n                o.position.y,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.y}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                e.currentTarget.valueAsNumber,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.z}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                o.position.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.x).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.y,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.y).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.z).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                o.rotation.y,\n                degToRad(e.currentTarget.valueAsNumber)\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.x}\n            onChange={e =>\n              onUpdateScale(e.currentTarget.valueAsNumber, o.scale.y, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.y}\n            onChange={e =>\n              onUpdateScale(o.scale.x, e.currentTarget.valueAsNumber, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.z}\n            onChange={e =>\n              onUpdateScale(o.scale.x, o.scale.y, e.currentTarget.valueAsNumber)\n            }\n          />\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  controls: VisualControls;\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.project.activeObject) {\n      this.project.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.project.activeObject = o;\n    this.project.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n\n    const previousAudio = this.project.activeObject.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.project.activeObject.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    if (this.project.activeObject.audioId) {\n      this.project.audioLibrary.delete(this.project.activeObject.audioId);\n    }\n\n    this.project.activeObject.audioData = data.slice(0);\n    this.project.activeObject.audioId = this.project.audioLibrary.add(\n      this.project.activeObject.audioData\n    );\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.selectObject(o);\n        return true;\n      }\n    }\n\n    this.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Group, Input } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.width}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                width: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.depth}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                depth: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={3}\n            max={50}\n            value={r.dimensions.height}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                height: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport { Container, Main, Sidebar } from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project = new Project({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            scale: o.scale,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  selectRoom(id: number): void {\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = this.project.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\", {\n      width: 10,\n      depth: 10,\n      height: 3\n    });\n    this.project.rooms.push(room);\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = room;\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  onExportClick = () => {\n    saveAsZip(this.project);\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          <div>\n            <button onClick={this.onAddRoomClick}>Add room</button>\n            <button onClick={this.onAddCubeClick}>Add cube</button>\n            <button onClick={this.onExportClick}>Export project</button>\n          </div>\n          <ol>\n            {this.state.rooms.map((r, i) => (\n              <li\n                key={r.id}\n                onClick={() => this.selectRoom(i)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {r.name}\n              </li>\n            ))}\n          </ol>\n          {!o && (\n            <RoomEditor\n              room={this.state.rooms[this.state.selectedRoomId]}\n              onUpdateName={this.updateRoomName}\n              onUpdateDimensions={this.updateRoomDimensions}\n            />\n          )}\n          {o && (\n            <ObjectEditor\n              object={o}\n              onUpdateName={this.updateName}\n              onUpdatePosition={this.updatePosition}\n              onUpdateRotation={this.updateRotation}\n              onUpdateScale={this.updateScale}\n              onUpdateAudio={this.updateAudio}\n            />\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}