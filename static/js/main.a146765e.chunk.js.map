{"version":3,"sources":["3d/SceneCanvas.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["MouseButton","directions","up","Vector3","down","left","right","forwards","backwards","f","time","orbitalPeriod","radius","Math","sin","PI","cos","Container","styled","div","_templateObject","SceneCanvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","containerRef","React","rafHandle","previousTimestamp","target","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","grid","GridHelper","cube","cube2","keysPressed","Set","isDraggingCamera","resize","current","_this$containerRef$cu","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setSize","animate","t","window","requestAnimationFrame","dt","rotation","x","y","position","copy","isKeyPressed","translateOnAxis","rotateOnWorldAxis","rotateOnAxis","render","onClick","e","button","Primary","size","getSize","Vector2","pageX","currentTarget","offsetLeft","pageY","offsetTop","console","log","raycaster","Raycaster","setFromCamera","intersections","intersectObjects","children","material","color","set","i","length","object","onWheel","preventDefault","delta","deltaY","deltaMode","translateZ","onMouseDown","Secondary","requestPointerLock","onMouseUp","document","exitPointerLock","onMouseMove","movementX","movementY","onKeyDown","add","key","onKeyUp","delete","geometry","BoxGeometry","MeshBasicMaterial","wireframe","Mesh","geometry2","material2","translateX","z","lookAt","toJSON","appendChild","domElement","focus","addEventListener","cancelAnimationFrame","removeEventListener","has","react","tabIndex","ref","onContextMenu","Editor_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Editor","react_default","a","createElement","Editor_Container","SceneCanvas_SceneCanvas","Component","Boolean","location","hostname","match","ReactDOM","Editor_Editor","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a146765e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BoxGeometry,\n  GridHelper,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n\n  :focus {\n    border-left: 2px solid blue;\n  }\n`;\n\nexport default class SceneCanvas extends React.Component {\n  containerRef = React.createRef<HTMLDivElement>();\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  target: Mesh | null = null;\n\n  scene = new Scene();\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  grid = new GridHelper(10, 10);\n  cube: Mesh;\n  cube2: Mesh;\n\n  keysPressed = new Set<string>();\n  isDraggingCamera = false;\n\n  constructor(props: any) {\n    super(props);\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    const material = new MeshBasicMaterial({\n      color: 0xffffff,\n      wireframe: true\n    });\n    this.cube = new Mesh(geometry, material);\n\n    const geometry2 = new BoxGeometry(0.25, 0.25, 0.25);\n    const material2 = new MeshBasicMaterial({\n      color: 0xffffff\n    });\n    this.cube2 = new Mesh(geometry2, material2);\n    this.cube2.translateX(1);\n\n    this.scene.add(this.cube2);\n    this.scene.add(this.cube);\n    this.scene.add(this.grid);\n\n    this.camera.position.y = 10;\n    this.camera.position.z = 5;\n    this.camera.lookAt(0, 0, 0);\n\n    console.log(this.scene.toJSON());\n  }\n\n  componentDidMount(): void {\n    this.containerRef.current!.appendChild(this.renderer.domElement);\n\n    this.containerRef.current!.focus();\n    this.resize();\n    this.animate(0);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  componentWillUnmount(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = (): void => {\n    if (!this.containerRef.current) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.containerRef.current;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    // this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n\n    this.cube2.rotation.x += 0.01;\n    this.cube2.rotation.y += 0.01;\n    this.cube2.position.copy(f(t, 10000, 2));\n\n    if (this.isKeyPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.isKeyPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.isKeyPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.isKeyPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.isKeyPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.isKeyPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.isKeyPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.isKeyPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.isKeyPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.isKeyPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  isKeyPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  onClick: React.MouseEventHandler<HTMLElement> = e => {\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    const size = this.renderer.getSize(new Vector2());\n    const x = ((e.pageX - e.currentTarget.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - e.currentTarget.offsetTop) / size.y) * 2 + 1;\n    console.log(size, x, y);\n\n    const raycaster = new Raycaster();\n    raycaster.setFromCamera({ x, y }, this.camera);\n    const intersections = raycaster.intersectObjects(this.scene.children, true);\n    if (this.target) {\n      (this.target.material as MeshBasicMaterial).color.set(0xffffff);\n      this.target = null;\n    }\n    for (let i = 0; i < intersections.length && !this.target; i++) {\n      if (intersections[i].object !== this.grid) {\n        this.target = intersections[i].object as Mesh;\n        console.log(this.target);\n        (this.target.material as MeshBasicMaterial).color.set(0xff0000);\n      }\n    }\n  };\n\n  onWheel: React.WheelEventHandler = e => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta);\n  };\n\n  onMouseDown: React.MouseEventHandler = e => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.containerRef.current!.requestPointerLock();\n    }\n  };\n\n  onMouseUp: React.MouseEventHandler = e => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      document.exitPointerLock();\n      this.isDraggingCamera = false;\n    }\n  };\n\n  onMouseMove: React.MouseEventHandler = e => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    }\n  };\n\n  onKeyDown: React.KeyboardEventHandler = e => {\n    e.preventDefault();\n    this.keysPressed.add(e.key);\n    // console.log(e.key);\n  };\n\n  onKeyUp: React.KeyboardEventHandler = e => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n  };\n\n  render(): React.ReactNode {\n    return (\n      <Container\n        tabIndex={-1}\n        ref={this.containerRef}\n        onClick={this.onClick}\n        onWheel={this.onWheel}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onMouseMove={this.onMouseMove}\n        onKeyDown={this.onKeyDown}\n        onKeyUp={this.onKeyUp}\n        onContextMenu={e => e.preventDefault()}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #666;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport default class Editor extends React.Component {\n  render(): React.ReactNode {\n    return (\n      <Container>\n        <Sidebar>Sidebar</Sidebar>\n        <Main>\n          <SceneCanvas />\n        </Main>\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}