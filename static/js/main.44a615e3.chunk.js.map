{"version":3,"sources":["data/export.ts","project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","utils/openFileDialog.ts","data/import.ts","editor/MenuBar.tsx","utils/math.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","audio/ResAudio.ts","audio/ResListener.ts","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["createZip","project","metadata","toData","zip","Zip","file","JSON","stringify","audioFolder","folder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","audioLibrary","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","toString","err","return","generateAsync","type","saveAsZip","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","sent","saveAs","stop","this","_x","apply","arguments","AudioLibrary","nextId","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","Room","length","roomDimensions","width","height","depth","grid","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","dimensions","remove","cube","y","objects","children","filter","c","map","go","_this2","gameObjects","o","fromData","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","audioType","activeRoom","activeObject","firstRoom","addCube","push","r","openFileDialog","options","Promise","resolve","input","document","createElement","accept","onchange","files","click","getFilesInFolder","forEach","loadZip","_ref","_name","_file","loadAsync","t0","async","t1","parse","parseInt","isNaN","t2","t3","t4","t5","finish","abrupt","openZip","_callee2","_context2","MenuType","Container","styled","div","_templateObject","MenubarItem","_templateObject2","props","isActive","css","_templateObject3","Menu","_templateObject4","MenuItem","_templateObject5","MenuDivider","_templateObject6","MenuBar","state","activeMenu","menuType","setState","react_default","tabIndex","onBlur","closeMenu","FileMenu","onClick","toggleMenu","hidden","onImportProject","onExportProject","EditMenu","onAddObject","onAddRoom","ViewMenu","HelpMenu","React","Component","radToDeg","rad","PI","degToRad","deg","roundToPrecision","precision","round","ObjectDragDirection","styled_templateObject","InnerContainer","styled_templateObject2","Sidebar","aside","styled_templateObject3","Main","main","styled_templateObject4","Group","styled_templateObject5","Input","styled_templateObject6","InputGroup","_templateObject7","RoomList","ol","_templateObject8","RoomListItem","li","_templateObject9","active","_templateObject10","ObjectEditor","onAudioFileSelected","e","currentTarget","item","console","log","size","reader","FileReader","onload","result","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","onChange","step","x","toFixed","valueAsNumber","z","min","ResAudio","audioScene","audioContext","audioSource","source","isPlaying","createBufferSource","loop","createSource","Float32Array","forward","connect","force","prototype","Vector3","quaternion","Quaternion","orientation","matrixWorld","decompose","applyQuaternion","setPosition","setOrientation","up","src","warn","fetch","resp","arrayBuffer","decodeAudioData","buffer","start","Object3D","Listener","setListenerPosition","setListenerOrientation","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","onKeyUp","delete","button","shiftKey","has","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","AudioContext","listener","AudioListener","ResonanceAudio","resListener","ResListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","output","destination","autoClear","setClearColor","Color","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","cancelAnimationFrame","removeChild","focus","selectObject","geometry","previousAudio","getObjectByName","slice","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","room","onUpdateDimensions","Editor","projectCanvas","selectedRoomId","selectedObject","mainRef","createRef","onSelectObject","onTranslateObject","onScaleObject","s","updateRoomName","concat","updateRoomDimensions","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","onAddCubeClick","onImportClick","changeProject","onExportClick","current","attach","detach","styled_Container","MenuBar_MenuBar","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44a615e3.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioFolder = zip.folder(\"audio\");\n  for (const [key, value] of project.audioLibrary.entries()) {\n    audioFolder.file(key.toString(), value);\n  }\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project) => {\n  const data = await createZip(project);\n  saveAs(data, \"audio3d-project.zip\");\n};\n","/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): number {\n    this.set(this.nextId, data);\n    return this.nextId++;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray(),\n      audioId: this.audioId\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport { AmbientLight, GridHelper, Object3D, PointLight, Scene } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  addCube(): GameObject {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    return cube;\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Vector3 } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n\n  rooms: Room[] = [];\n  audioType: number = 1;\n\n  activeRoom: Room;\n  activeObject: GameObject | null = null;\n\n  constructor(public events: ProjectEvents = defaultEvents) {\n    const firstRoom = new Room(this.audioLibrary, \"First room\", {\n      width: 15,\n      depth: 10,\n      height: 3\n    });\n    firstRoom.addCube();\n    this.rooms.push(firstRoom);\n    this.activeRoom = firstRoom;\n  }\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n    this.activeRoom = this.rooms[0];\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\n// Options for configuring the file modal\nexport interface OpenFileDialogOptions {\n  accept?: string;\n}\n\n/**\n * Opens a file dialog and lets the user select a file\n * @returns The selected file\n */\nexport const openFileDialog = (\n  options: OpenFileDialogOptions = {}\n): Promise<File> =>\n  new Promise(resolve => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    if (options.accept) {\n      input.accept = options.accept;\n    }\n    input.onchange = () => {\n      if (input.files) {\n        resolve(input.files[0]);\n      }\n    };\n    input.click();\n  });\n","/**\n * @author Niklas Korz\n * This module defines functions for loading and importing projects from the local filesystem.\n */\nimport Zip, { JSZipObject } from \"jszip\";\nimport Project from \"../project/Project\";\nimport { openFileDialog } from \"../utils/openFileDialog\";\n\ninterface FolderItem {\n  name: string;\n  file: JSZipObject;\n}\n\n/**\n * Iterates over all files at the root of a zip folder and returns them as an array.\n */\nconst getFilesInFolder = (folder: Zip): FolderItem[] => {\n  const files: FolderItem[] = [];\n  folder.forEach((name, file) => files.push({ name, file }));\n  return files;\n};\n\n/**\n * Decompresses the given zip file, loads the included JSON metadata and reads all\n * included audio files as binary array buffers.\n * @param data The blob to read from, usually a file returned by a FileReader instance.\n * @returns The project recreated from the data found in the zip\n */\nexport const loadZip = async (data: Blob): Promise<Project> => {\n  const zip = await Zip.loadAsync(data);\n  const metadata = JSON.parse(await zip.file(\"metadata.json\").async(\"text\"));\n\n  const audioFolder = zip.folder(\"audio\");\n  const project = new Project();\n  for (const { name, file } of getFilesInFolder(audioFolder)) {\n    const id = parseInt(name, 10);\n    // Only load files in the audio folder which have a valid id as name\n    if (!isNaN(id)) {\n      project.audioLibrary.set(id, await file.async(\"arraybuffer\"));\n\n      if (id >= project.audioLibrary.nextId) {\n        project.audioLibrary.nextId = id + 1;\n      }\n    }\n  }\n\n  project.fromData(metadata);\n\n  return project;\n};\n\n/**\n * Opens a file dialog and lets the user select a zip file that will be parsed\n * and loaded as a project.\n * @returns The project found in the zip\n */\nexport const openZip = async (): Promise<Project> => {\n  const file = await openFileDialog({ accept: \"application/zip\" });\n  return await loadZip(file);\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 0 0 auto;\n  background: hsl(210, 29%, 15%);\n  color: #fff;\n  font-size: 0.9em;\n  padding: 0 10px;\n  user-select: none;\n\n  :focus {\n    outline: none;\n  }\n`;\n\ninterface MenubarItemProps {\n  isActive?: boolean;\n}\n\nexport const MenubarItem = styled.div<MenubarItemProps>`\n  position: relative;\n  display: inline-block;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 25%, 20%);\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      background: hsl(210, 25%, 20%);\n    `}\n`;\n\nexport const Menu = styled.div`\n  position: absolute;\n  left: 0;\n  top: 100%;\n  background: hsl(210, 25%, 20%);\n  padding: 5px 0;\n  min-width: 200px;\n  font-size: 0.95em;\n  box-shadow: 5px 5px 8px rgba(0, 0, 0, 0.5);\n\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  cursor: default;\n`;\n\nexport const MenuItem = styled.div`\n  white-space: nowrap;\n  padding: 8px 20px;\n  margin: 2px 0;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 15%);\n  }\n`;\n\nexport const MenuDivider = styled.div`\n  height: 0;\n  margin: 5px;\n  border-bottom: 1px solid hsl(210, 15%, 35%);\n`;\n\ninterface Props {\n  onImportProject(): void;\n  onExportProject(): void;\n\n  onAddObject(): void;\n  onAddRoom(): void;\n}\n\nenum MenuType {\n  FileMenu,\n  EditMenu,\n  ViewMenu,\n  HelpMenu\n}\n\ninterface State {\n  activeMenu: MenuType | null;\n}\n\nexport default class MenuBar extends React.Component<Props, State> {\n  state: State = {\n    activeMenu: null\n  };\n\n  toggleMenu(menuType: MenuType): void {\n    this.setState(state => ({\n      activeMenu: state.activeMenu === menuType ? null : menuType\n    }));\n  }\n\n  closeMenu(): void {\n    this.setState({ activeMenu: null });\n  }\n\n  render(): React.ReactNode {\n    const { activeMenu } = this.state;\n\n    return (\n      <Container tabIndex={-1} onBlur={() => this.closeMenu()}>\n        <MenubarItem\n          isActive={activeMenu === MenuType.FileMenu}\n          onClick={() => this.toggleMenu(MenuType.FileMenu)}\n        >\n          File\n          <Menu hidden={activeMenu !== MenuType.FileMenu}>\n            <MenuItem>New project</MenuItem>\n            <MenuDivider />\n            <MenuItem>Load project</MenuItem>\n            <MenuItem onClick={this.props.onImportProject}>\n              Import project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>Save project</MenuItem>\n            <MenuItem onClick={this.props.onExportProject}>\n              Export project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>Settings</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.EditMenu}\n          onClick={() => this.toggleMenu(MenuType.EditMenu)}\n        >\n          Edit\n          <Menu hidden={activeMenu !== MenuType.EditMenu}>\n            <MenuItem onClick={this.props.onAddObject}>Add object</MenuItem>\n            <MenuItem>Delete object</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddRoom}>Add room</MenuItem>\n            <MenuItem>Delete room</MenuItem>\n            <MenuDivider />\n            <MenuItem>Release the kraken</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.ViewMenu}\n          onClick={() => this.toggleMenu(MenuType.ViewMenu)}\n        >\n          View\n          <Menu hidden={activeMenu !== MenuType.ViewMenu}>\n            <MenuItem>Audio Library</MenuItem>\n            <MenuItem>Project Manager</MenuItem>\n            <MenuDivider />\n            <MenuItem>Toggle Fullscreen</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.HelpMenu}\n          onClick={() => this.toggleMenu(MenuType.HelpMenu)}\n        >\n          Help\n          <Menu hidden={activeMenu !== MenuType.HelpMenu}>\n            <MenuItem>Issues</MenuItem>\n            <MenuItem>Source Code</MenuItem>\n            <MenuDivider />\n            <MenuItem>About</MenuItem>\n          </Menu>\n        </MenubarItem>\n      </Container>\n    );\n  }\n}\n","/**\n * Useful utility functions related to mathematics\n * @author Niklas Korz\n */\n\n// Converts radiant angles to degrees\nexport const radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nexport const degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\nexport const roundToPrecision = (value: number, precision: number) =>\n  Math.round(value / precision) * precision;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InnerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Sidebar = styled.aside`\n  flex: 0 0 300px;\n  height: 100%;\n  background: hsl(210, 29%, 29%);\n  color: #fff;\n  padding: 0 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: hsl(210, 29%, 24%);\n  border-radius: 3px;\n  border: 2px solid hsl(210, 29%, 24%);\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  > ${Input} {\n    flex: 1;\n    width: auto;\n    min-width: 0;\n\n    margin-right: 5px;\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const RoomList = styled.ol`\n  list-style: none;\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 3px;\n  background: hsl(210, 29%, 24%);\n`;\n\ninterface RoomListItemProps {\n  active?: boolean;\n}\n\nexport const RoomListItem = styled.li<RoomListItemProps>`\n  cursor: pointer;\n  padding: 7px 10px;\n  border-radius: 2px;\n  ${props =>\n    props.active &&\n    css`\n      background: hsl(210, 29%, 20%);\n      border-left: 2px solid #3498db;\n    `};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(public project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Object Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.y,\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.y.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  o.position.y,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.x).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.y,\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.y).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.z).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  o.rotation.y,\n                  degToRad(e.currentTarget.valueAsNumber % 360)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.x.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  e.currentTarget.valueAsNumber,\n                  o.scale.y,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.y.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  e.currentTarget.valueAsNumber,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.z.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  o.scale.y,\n                  e.currentTarget.valueAsNumber\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Leon Erath / https://leonerath.de/\n */\n\nimport { ResonanceAudio } from \"resonance-audio\";\nimport { Object3D, Quaternion, Vector3 } from \"three\";\n\n/**\n * Class extends Object3D in order to work with the SceneCanvas.\n * The Idea ist to override the positionChange-Methods and change the ResonanceAudio\n * accordingly.\n */\n\nexport default class ResAudio extends Object3D {\n  audioSource: AudioBufferSourceNode;\n  source: ResonanceAudio.Source;\n  isPlaying: boolean;\n\n  constructor(audioScene: ResonanceAudio, private audioContext: AudioContext) {\n    super();\n    this.audioSource = audioContext.createBufferSource();\n    this.audioSource.loop = true;\n    this.source = audioScene.createSource({\n      position: new Float32Array([0, 1, 3]),\n      forward: new Float32Array([1, 0, 0])\n    });\n    this.audioSource.connect(this.source.input);\n    this.isPlaying = false;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n\n    this.matrixWorld.decompose(position, quaternion, scale);\n\n    console.log(position.x, position.y, position.z);\n\n    orientation.set(0, 0, 1).applyQuaternion(quaternion);\n\n    this.source.setPosition(position.x, position.y, position.z);\n    this.source.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n  }\n\n  async play(src: string): Promise<void> {\n    if (this.isPlaying === true) {\n      console.warn(\"ResAudio: Audio is already playing.\");\n      return;\n    }\n    const resp = await fetch(src);\n    const data = await resp.arrayBuffer();\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    this.audioSource.buffer = buffer;\n    this.audioSource.start();\n    this.isPlaying = true;\n  }\n\n  pause(): void {\n    this.audioSource.stop();\n    this.isPlaying = false;\n  }\n\n  stop(): void {\n    this.audioSource.stop();\n    this.isPlaying = false;\n    this.audioSource.buffer = null;\n  }\n}\n","/**\n * @author Leon Erath / https://leonerath.de/\n */\n\nimport { ResonanceAudio } from \"resonance-audio\";\nimport { Object3D, Quaternion, Vector3 } from \"three\";\n\nexport default class Listener extends Object3D {\n  constructor(private audioScene: ResonanceAudio) {\n    super();\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n\n    this.matrixWorld.decompose(position, quaternion, scale);\n\n    orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n    this.audioScene.setListenerPosition(position.x, position.y, position.z);\n    this.audioScene.setListenerOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport { ResonanceAudio } from \"resonance-audio\";\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport ResAudio from \"../audio/ResAudio\";\nimport ResListener from \"../audio/ResListener\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n  audioType = 1;\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  audioScene = new ResonanceAudio(this.audioContext);\n  resListener = new ResListener(this.audioScene);\n\n  controls: VisualControls;\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.audioScene.output.connect(this.audioContext.destination);\n\n    this.audioType = project.audioType;\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n    this.camera.add(this.resListener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  changeProject(project: Project): void {\n    this.project = project;\n    this.controls.project = project;\n    this.selectObject(null);\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.project.activeObject) {\n      this.project.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.project.activeObject = o;\n    this.project.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n    let audio;\n    if (this.audioType === 0) {\n      const previousAudio = this.project.activeObject.getObjectByName(\n        \"audio\"\n      ) as PositionalAudio;\n      if (previousAudio) {\n        this.project.activeObject.remove(previousAudio);\n        previousAudio.stop();\n      }\n\n      if (this.project.activeObject.audioId) {\n        this.project.audioLibrary.delete(this.project.activeObject.audioId);\n      }\n\n      this.project.activeObject.audioData = data.slice(0);\n      this.project.activeObject.audioId = this.project.audioLibrary.add(\n        this.project.activeObject.audioData\n      );\n\n      const buffer = await this.audioContext.decodeAudioData(data);\n\n      audio = new PositionalAudio(this.listener);\n      audio.name = \"audio\";\n      audio.setBuffer(buffer);\n      audio.setLoop(true);\n      audio.play();\n    } else {\n      audio = new ResAudio(this.audioScene, this.audioContext);\n      audio.play(\"/audio/breakbeat.wav\");\n    }\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.selectObject(o);\n        return true;\n      }\n    }\n\n    this.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Room Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.width}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  width: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.depth}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  depth: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={3}\n              max={50}\n              value={r.dimensions.height}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  height: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n          </InputGroup>\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport { openZip } from \"../data/import\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport MenuBar from \"./MenuBar\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport {\n  Container,\n  Group,\n  InnerContainer,\n  Main,\n  RoomList,\n  RoomListItem,\n  Sidebar\n} from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project: Project = new Project();\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  constructor(props: {}) {\n    super(props);\n\n    this.project.events = {\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n  }\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n      this.projectCanvas.focus();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  onSelectObject = (o: GameObject | null) => {\n    if (o) {\n      this.setState({\n        selectedObject: {\n          id: o.id,\n          name: o.name,\n          position: o.position,\n          scale: o.scale,\n          rotation: o.rotation\n        }\n      });\n    } else {\n      this.setState({ selectedObject: null });\n    }\n  };\n\n  onTranslateObject = (p: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: p\n      }\n    }));\n  };\n\n  onScaleObject = (s: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        size: {\n          width: s.x,\n          height: s.y,\n          depth: s.z\n        }\n      }\n    }));\n  };\n\n  selectRoom(id: number): void {\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = this.project.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\", {\n      width: 10,\n      depth: 10,\n      height: 3\n    });\n    this.project.rooms.push(room);\n    this.project.activeRoom = room;\n    this.projectCanvas.selectObject(room.addCube());\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  onImportClick = async () => {\n    this.project = await openZip();\n    this.project.events = {\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions\n      })),\n      selectedRoomId: 0,\n      selectedObject: null\n    });\n  };\n\n  onExportClick = () => {\n    saveAsZip(this.project);\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <MenuBar\n          onImportProject={this.onImportClick}\n          onExportProject={this.onExportClick}\n          onAddObject={this.onAddCubeClick}\n          onAddRoom={this.onAddRoomClick}\n        />\n        <InnerContainer>\n          <Sidebar>\n            <Group>\n              <label>Rooms</label>\n              <RoomList>\n                {this.state.rooms.map((r, i) => (\n                  <RoomListItem\n                    key={r.id}\n                    onClick={() => this.selectRoom(i)}\n                    active={i === this.state.selectedRoomId}\n                  >\n                    {r.name}\n                  </RoomListItem>\n                ))}\n              </RoomList>\n            </Group>\n            {!o && (\n              <RoomEditor\n                room={this.state.rooms[this.state.selectedRoomId]}\n                onUpdateName={this.updateRoomName}\n                onUpdateDimensions={this.updateRoomDimensions}\n              />\n            )}\n            {o && (\n              <ObjectEditor\n                object={o}\n                onUpdateName={this.updateName}\n                onUpdatePosition={this.updatePosition}\n                onUpdateRotation={this.updateRotation}\n                onUpdateScale={this.updateScale}\n                onUpdateAudio={this.updateAudio}\n              />\n            )}\n          </Sidebar>\n          <Main ref={this.mainRef} />\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}