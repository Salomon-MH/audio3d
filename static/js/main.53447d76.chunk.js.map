{"version":3,"sources":["3d/ControlsScene.ts","3d/SceneCanvas.ts","3d/KeyboardListener.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["ObjectDragDirection","MouseButton","ControlsScene","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","activeMesh","objectDragDirection","dragOffset","Vector3","plane","Plane","axisX","axisY","axisZ","planeYZ","planeXZ","planeXY","axisGeometry","BoxGeometry","Mesh","MeshBasicMaterial","color","position","set","rotation","y","Math","PI","userData","direction","AxisX","x","AxisY","AxisZ","add","planeGeometry","PlaneGeometry","side","DoubleSide","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","intersection","value","o","object","hasOwnProperty","point","sub","err","return","getControlFromRaycaster","onMove","ray","_ref","c","p","altPlane","z","abs","distanceToPoint","origin","intersectPlane","Scene","KeyboardListener","target","keysPressed","Set","lastKeyUp","Map","reset","clear","onKeyDown","e","preventDefault","timeStamp","get","key","onKeyUp","delete","onClick","button","shiftKey","addEventListener","document","removeEventListener","has","directions","up","down","left","right","forwards","backwards","SceneCanvas","options","rafHandle","previousTimestamp","scene","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","grid","GridHelper","smallCube","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setSize","animate","t","window","requestAnimationFrame","dt","isPressed","translateOnAxis","rotateOnWorldAxis","rotateOnAxis","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","movementY","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","tabIndex","stopPropagation","geometry","material","MeshNormalMaterial","cube","name","translateX","lookAt","outlineMaterial","BackSide","scale","multiplyScalar","console","log","toJSON","listen","appendChild","focus","cancelAnimationFrame","stop","removeChild","remove","isMesh","onSelect","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Editor","state","selectedObject","mainRef","React","createRef","sceneCanvas","setState","id","onTranslate","objectSpread","attach","current","detach","_ref2","_ref3","_this2","react_default","a","createElement","type","onChange","updateName","currentTarget","updatePosition","valueAsNumber","ref","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","Editor_Editor","getElementById","URL","process","href","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.53447d76.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  Vector3\n} from \"three\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class ControlsScene extends Scene {\n  activeMesh: Mesh | null = null;\n  objectDragDirection: ObjectDragDirection | null = null;\n  dragOffset = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor() {\n    super();\n\n    // Setup visual controls for transformation\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0xff0000 })\n    );\n    this.axisX.position.set(0.25, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0x00ff00 })\n    );\n    this.axisY.position.set(0.0, 0.25, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0x0000ff })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.25);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // The YZ, XZ, XY planes, represented as... planes. :)\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0x00ffff, side: DoubleSide })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xff00ff, side: DoubleSide })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xffff00, side: DoubleSide })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.activeMesh) {\n      return null;\n    }\n\n    this.position.copy(this.activeMesh.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        this.dragOffset.copy(intersection.point).sub(this.activeMesh.position);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.activeMesh) {\n      return;\n    }\n\n    const c = this.activeMesh.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n    point.sub(this.dragOffset);\n\n    // If we are operating on an axis instead of a plane, ensure only the relevant\n    // coordinate is changed.\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        this.activeMesh.position.x = point.x;\n        break;\n      case ObjectDragDirection.AxisY:\n        this.activeMesh.position.y = point.y;\n        break;\n      case ObjectDragDirection.AxisZ:\n        this.activeMesh.position.z = point.z;\n        break;\n      default:\n        // The selected direction is a plane, so we can just copy the\n        // intersection point.\n        this.activeMesh.position.copy(point);\n    }\n  }\n}\n","import {\n  BackSide,\n  BoxGeometry,\n  DoubleSide,\n  GridHelper,\n  LineBasicMaterial,\n  LineDashedMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  PerspectiveCamera,\n  PlaneHelper,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport ControlsScene from \"./ControlsScene\";\nimport KeyboardListener from \"./KeyboardListener\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\ninterface Options {\n  onSelect(object: Mesh | null): void;\n  onTranslate(position: Vector3): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  scene = new Scene();\n  controls = new ControlsScene();\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  grid = new GridHelper(10, 10);\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  isDraggingCamera = false;\n\n  constructor(private options: Options) {\n    this.renderer.autoClear = false;\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    const material = new MeshNormalMaterial();\n    const cube = new Mesh(geometry, material);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.smallCube.geometry = new BoxGeometry(0.25, 0.25, 0.25);\n    this.smallCube.material = material;\n    this.smallCube.translateX(2);\n    this.smallCube.name = \"Small cube\";\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(cube.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    this.keys.stop();\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    // this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n\n    this.smallCube.rotation.x += 0.01;\n    this.smallCube.rotation.y += 0.01;\n    // this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.controls.activeMesh) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      // this.controls.position.copy(this.controls.activeMesh.position);\n      this.controls.position.copy(this.controls.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    if (this.controls.activeMesh) {\n      this.controls.activeMesh.remove(this.outlineMesh);\n      this.controls.activeMesh = null;\n    }\n\n    const intersections = raycaster.intersectObjects(this.scene.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.controls.activeMesh = o;\n        this.outlineMesh.geometry = this.controls.activeMesh.geometry;\n        this.controls.activeMesh.add(this.outlineMesh);\n\n        this.options.onSelect(o);\n        return true;\n      }\n    }\n\n    this.options.onSelect(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","export default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","import React, { KeyboardEventHandler } from \"react\";\nimport styled from \"styled-components\";\nimport { Euler, Mesh, Vector3 } from \"three\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\ninterface WorldObject {\n  id: number;\n  name: string;\n  position: Vector3;\n  rotation: Euler;\n}\n\ninterface State {\n  selectedObject: WorldObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  state: State = { selectedObject: null };\n  mainRef = React.createRef<HTMLElement>();\n  sceneCanvas = new SceneCanvas({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: {\n          ...selectedObject!,\n          position: p\n        }\n      }));\n    }\n  });\n\n  componentDidMount(): void {\n    this.sceneCanvas.attach(this.mainRef.current!);\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  updateName(name: string): void {\n    this.sceneCanvas.controls.activeMesh!.name = name;\n    this.setState(({ selectedObject }) => ({\n      selectedObject: {\n        ...selectedObject!,\n        name\n      }\n    }));\n  }\n\n  updatePosition(x: number, y: number, z: number): void {\n    this.sceneCanvas.controls.activeMesh!.position.set(x, y, z);\n    this.setState(({ selectedObject }) => ({\n      selectedObject: {\n        ...selectedObject!,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  }\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          {o && (\n            <div>\n              Selected object with id {o.id}\n              <div>\n                <input\n                  type=\"text\"\n                  value={o.name}\n                  onChange={e => this.updateName(e.currentTarget.value)}\n                />\n              </div>\n              <div>\n                <input\n                  type=\"number\"\n                  value={o.position.x}\n                  onChange={e =>\n                    this.updatePosition(\n                      e.currentTarget.valueAsNumber,\n                      o.position.y,\n                      o.position.z\n                    )\n                  }\n                />\n                <input\n                  type=\"number\"\n                  value={o.position.y}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      e.currentTarget.valueAsNumber,\n                      o.position.z\n                    )\n                  }\n                />\n                <input\n                  type=\"number\"\n                  value={o.position.z}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      o.position.y,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </div>\n              {/*<div>\n                <input type=\"number\" value={o.rotation.x} />\n                <input type=\"number\" value={o.rotation.y} />\n                <input type=\"number\" value={o.rotation.z} />\n              </div>*/}\n            </div>\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}