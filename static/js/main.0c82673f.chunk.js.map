{"version":3,"sources":["3d/SceneCanvas.tsx","3d/KeyboardListener.ts","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["MouseButton","ObjectDragDirection","KeyboardListener","target","_this","this","Object","classCallCheck","keysPressed","Set","lastKeyUp","Map","reset","clear","onKeyDown","e","preventDefault","Math","abs","timeStamp","get","key","add","onKeyUp","delete","set","onClick","button","shiftKey","addEventListener","removeEventListener","has","directions","up","Vector3","down","left","right","forwards","backwards","SceneCanvas","options","rafHandle","previousTimestamp","activeMesh","scene","Scene","controlsScene","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","grid","GridHelper","smallCube","Mesh","outlineMesh","keys","domElement","isDraggingCamera","objectDragDirection","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setSize","animate","t","window","requestAnimationFrame","dt","rotation","x","y","isPressed","translateOnAxis","position","rotateOnWorldAxis","rotateOnAxis","render","copy","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","raycaster","Raycaster","setFromCamera","checkControlsClick","checkSceneClick","onMouseUp","document","exitPointerLock","onMouseMove","movementX","movementY","q","Quaternion","getWorldQuaternion","d","applyQuaternion","divideScalar","AxisX","z","AxisY","AxisZ","PlaneYZ","PlaneXZ","PlaneXY","onTranslate","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","tabIndex","stopPropagation","axisGeometry","BoxGeometry","axisX","MeshBasicMaterial","color","PI","userData","direction","axisY","axisZ","planeGeometry","PlaneGeometry","planeYZ","side","DoubleSide","planeXZ","planeXY","geometry","material","MeshNormalMaterial","cube","name","translateX","lookAt","outlineMaterial","BackSide","scale","multiplyScalar","console","log","toJSON","listen","appendChild","focus","cancelAnimationFrame","stop","removeChild","intersections","intersectObjects","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","o","value","object","hasOwnProperty","err","return","remove","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","isMesh","onSelect","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Editor","state","selectedObject","mainRef","React","createRef","sceneCanvas","setState","id","p","_ref","objectSpread","attach","current","detach","_ref2","_ref3","_this2","react_default","a","createElement","type","onChange","updateName","currentTarget","updatePosition","valueAsNumber","ref","Component","Boolean","location","hostname","match","ReactDOM","Editor_Editor","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c82673f.chunk.js","sourcesContent":["import {\n  ArrowHelper,\n  BackSide,\n  BoxGeometry,\n  Color,\n  DoubleSide,\n  GridHelper,\n  Group,\n  Line3,\n  LineBasicMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  PerspectiveCamera,\n  Plane,\n  PlaneGeometry,\n  Quaternion,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport KeyboardListener from \"./KeyboardListener\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nenum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\nconst directions = {\n  up: new Vector3(0, 1, 0),\n  down: new Vector3(0, -1, 0),\n  left: new Vector3(-1, 0, 0),\n  right: new Vector3(1, 0, 0),\n  forwards: new Vector3(0, 0, -1),\n  backwards: new Vector3(0, 0, 1)\n};\n\n// Circular position based on timestamp\nconst f = (time: number, orbitalPeriod: number, radius: number) =>\n  new Vector3(\n    radius * Math.sin((time / orbitalPeriod) * 2 * Math.PI),\n    0.5,\n    radius * Math.cos((time / orbitalPeriod) * 2 * Math.PI)\n  );\n\ninterface Options {\n  onSelect(object: Mesh | null): void;\n  onTranslate(position: Vector3): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  activeMesh: Mesh | null = null;\n\n  scene = new Scene();\n  controlsScene = new Scene();\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  grid = new GridHelper(10, 10);\n  smallCube = new Mesh();\n  outlineMesh = new Mesh();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  isDraggingCamera = false;\n  objectDragDirection: ObjectDragDirection | null = null;\n\n  constructor(private options: Options) {\n    this.renderer.autoClear = false;\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup controls for active mesh\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n    const axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0xff0000 })\n    );\n    axisX.position.set(0.25, 0.0, 0.0);\n    axisX.rotation.y = Math.PI / 2;\n    axisX.userData.direction = ObjectDragDirection.AxisX;\n    const axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0x00ff00 })\n    );\n    axisY.position.set(0.0, 0.25, 0.0);\n    axisY.rotation.x = Math.PI / 2;\n    axisY.userData.direction = ObjectDragDirection.AxisY;\n    const axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({ color: 0x0000ff })\n    );\n    axisZ.position.set(0.0, 0.0, 0.25);\n    axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n    const planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0x00ffff, side: DoubleSide })\n    );\n    planeYZ.position.set(0.0, 0.25, 0.25);\n    planeYZ.rotation.y = Math.PI / 2;\n    planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n    const planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xff00ff, side: DoubleSide })\n    );\n    planeXZ.position.set(0.25, 0.0, 0.25);\n    planeXZ.rotation.x = Math.PI / 2;\n    planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n    const planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ color: 0xffff00, side: DoubleSide })\n    );\n    planeXY.position.set(0.25, 0.25, 0.0);\n    planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.controlsScene.add(axisX);\n    this.controlsScene.add(axisY);\n    this.controlsScene.add(axisZ);\n\n    this.controlsScene.add(planeYZ);\n    this.controlsScene.add(planeXZ);\n    this.controlsScene.add(planeXY);\n\n    // Setup scene\n\n    const geometry = new BoxGeometry(1, 1, 1);\n    const material = new MeshNormalMaterial();\n    const cube = new Mesh(geometry, material);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.smallCube.geometry = new BoxGeometry(0.25, 0.25, 0.25);\n    this.smallCube.material = material;\n    this.smallCube.translateX(2);\n    this.smallCube.name = \"Small cube\";\n\n    this.scene.add(cube);\n    this.scene.add(this.smallCube);\n    this.scene.add(this.grid);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(cube.position);\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    console.log(this.scene.toJSON());\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    this.keys.stop();\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    // this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n\n    this.smallCube.rotation.x += 0.01;\n    this.smallCube.rotation.y += 0.01;\n    // this.smallCube.position.copy(f(t, 10000, 2));\n\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(directions.forwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(directions.backwards, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(directions.left, 2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(directions.right, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, 1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(new Vector3(1, 0, 0), dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(new Vector3(-1, 0, 0), dt);\n    }\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.activeMesh) {\n      this.controlsScene.position.copy(this.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controlsScene, this.camera);\n    }\n  };\n\n  checkControlsClick(raycaster: Raycaster): boolean {\n    if (!this.activeMesh) {\n      return false;\n    }\n\n    const intersections = raycaster.intersectObjects(\n      this.controlsScene.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        this.objectDragDirection = o.userData.direction;\n        this.canvas.requestPointerLock();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    if (this.activeMesh) {\n      this.activeMesh.remove(this.outlineMesh);\n      this.activeMesh = null;\n    }\n\n    const intersections = raycaster.intersectObjects(this.scene.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.activeMesh = o;\n        this.outlineMesh.geometry = this.activeMesh.geometry;\n        this.activeMesh.add(this.outlineMesh);\n\n        this.options.onSelect(o);\n        return true;\n      }\n    }\n\n    this.options.onSelect(null);\n    return false;\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    const size = this.renderer.getSize(new Vector2());\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // console.log(size, x, y);\n\n    const raycaster = new Raycaster();\n    raycaster.setFromCamera({ x, y }, this.camera);\n    if (!this.checkControlsClick(raycaster)) {\n      this.checkSceneClick(raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n    }\n    if (e.button === MouseButton.Primary && this.objectDragDirection !== null) {\n      this.objectDragDirection = null;\n    }\n    if (!this.isDraggingCamera && this.objectDragDirection === null) {\n      document.exitPointerLock();\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(new Vector3(0, -1, 0), e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(new Vector3(-1, 0, 0), e.movementY / 100);\n      }\n    }\n    if (this.objectDragDirection !== null && this.activeMesh) {\n      const q = new Quaternion();\n      this.camera.getWorldQuaternion(q);\n\n      const d = new Vector3(e.movementX, -e.movementY, 0);\n      d.applyQuaternion(q);\n      d.divideScalar(50);\n\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          d.y = d.z = 0;\n          break;\n        case ObjectDragDirection.AxisY:\n          d.x = d.z = 0;\n          break;\n        case ObjectDragDirection.AxisZ:\n          d.x = d.y = 0;\n          break;\n        case ObjectDragDirection.PlaneYZ:\n          d.x = 0;\n          break;\n        case ObjectDragDirection.PlaneXZ:\n          d.y = 0;\n          break;\n        case ObjectDragDirection.PlaneXY:\n          d.z = 0;\n          break;\n      }\n\n      this.activeMesh.position.add(d);\n      this.options.onTranslate(this.activeMesh.position);\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta);\n  };\n}\n","export default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    this.target.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    this.target.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","import React, { KeyboardEventHandler } from \"react\";\nimport styled from \"styled-components\";\nimport { Euler, Mesh, Vector3 } from \"three\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nconst Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n`;\n\nconst Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\ninterface WorldObject {\n  id: number;\n  name: string;\n  position: Vector3;\n  rotation: Euler;\n}\n\ninterface State {\n  selectedObject: WorldObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  state: State = { selectedObject: null };\n  mainRef = React.createRef<HTMLElement>();\n  sceneCanvas = new SceneCanvas({\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: {\n          ...selectedObject!,\n          position: p\n        }\n      }));\n    }\n  });\n\n  componentDidMount(): void {\n    this.sceneCanvas.attach(this.mainRef.current!);\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  updateName(name: string): void {\n    this.sceneCanvas.activeMesh!.name = name;\n    this.setState(({ selectedObject }) => ({\n      selectedObject: {\n        ...selectedObject!,\n        name\n      }\n    }));\n  }\n\n  updatePosition(x: number, y: number, z: number): void {\n    this.sceneCanvas.activeMesh!.position.set(x, y, z);\n    this.setState(({ selectedObject }) => ({\n      selectedObject: {\n        ...selectedObject!,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  }\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          {o && (\n            <div>\n              Selected object with id {o.id}\n              <div>\n                <input\n                  type=\"text\"\n                  value={o.name}\n                  onChange={e => this.updateName(e.currentTarget.value)}\n                />\n              </div>\n              <div>\n                <input\n                  type=\"number\"\n                  value={o.position.x}\n                  onChange={e =>\n                    this.updatePosition(\n                      e.currentTarget.valueAsNumber,\n                      o.position.y,\n                      o.position.z\n                    )\n                  }\n                />\n                <input\n                  type=\"number\"\n                  value={o.position.y}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      e.currentTarget.valueAsNumber,\n                      o.position.z\n                    )\n                  }\n                />\n                <input\n                  type=\"number\"\n                  value={o.position.z}\n                  onChange={e =>\n                    this.updatePosition(\n                      o.position.x,\n                      o.position.y,\n                      e.currentTarget.valueAsNumber\n                    )\n                  }\n                />\n              </div>\n              {/*<div>\n                <input type=\"number\" value={o.rotation.x} />\n                <input type=\"number\" value={o.rotation.y} />\n                <input type=\"number\" value={o.rotation.z} />\n              </div>*/}\n            </div>\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}