{"version":3,"sources":["3d/VisualControls.ts","3d/GameObject.ts","3d/Room.ts","input/GamepadListener.ts","input/KeyboardListener.ts","3d/SceneCanvas.ts","editor/styled.ts","editor/ObjectEditor.tsx","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["ObjectDragDirection","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","position","toArray","scale","rotation","data","set","Mesh","Room","_this","arguments","length","undefined","roomDimensions","width","height","depth","grid","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","addCube","dimensions","remove","cube","y","objects","children","filter","c","map","go","toData","gameObjects","o","fromData","apply","toConsumableArray","Scene","GamepadListener","onGamepadConnected","e","console","log","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","mapping","axis","axes","abs","v1","buttons","err","return","KeyboardListener","target","keysPressed","Set","lastKeyUp","Map","reset","clear","onKeyDown","preventDefault","timeStamp","get","key","onKeyUp","delete","onClick","button","shiftKey","document","has","MouseButton","VisualControls","events","activeMesh","objectDragDirection","isScaling","dragOffset","Vector3","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","PI","userData","direction","AxisX","x","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","object","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","_ref","p","altPlane","z","distanceToPoint","origin","intersectPlane","min","onScale","onTranslate","SceneCanvas","room","rafHandle","previousTimestamp","audioContext","AudioContext","listener","AudioListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","autoClear","setClearColor","Color","tabIndex","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","focus","cancelAnimationFrame","removeChild","stop","geometry","onSelect","previousAudio","getObjectByName","decodeAudioData","buffer","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","isMesh","selectMesh","size","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","Container","styled","div","_templateObject","Sidebar","aside","_templateObject2","Main","main","_templateObject3","Group","_templateObject4","Input","input","_templateObject5","radToDeg","rad","degToRad","deg","ObjectEditor","onAudioFileSelected","files","currentTarget","file","item","reader","FileReader","onload","result","props","onUpdateAudio","error","readAsArrayBuffer","_this$props","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","react_default","a","createElement","type","onChange","step","valueAsNumber","toFixed","accept","React","Component","RoomEditor","r","onUpdateDimensions","Editor","rooms","sceneCanvas","setState","selectedObject","id","s","_ref2","state","selectedRoomId","mainRef","createRef","updateRoomName","_ref3","concat","slice","updateRoomDimensions","_ref4","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","push","onAddCubeClick","current","attach","detach","_this2","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5356217f.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\nexport interface VisualControlsEvents {\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  activeMesh: Mesh | null = null;\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(private events: VisualControlsEvents) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.activeMesh) {\n      return null;\n    }\n\n    this.position.copy(this.activeMesh.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset.copy(intersection.point).sub(this.activeMesh.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.activeMesh) {\n      return;\n    }\n\n    const c = this.activeMesh.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.activeMesh.scale.x = Math.min(\n            Math.max(\n              this.activeMesh.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.activeMesh.scale.y = Math.min(\n            Math.max(\n              this.activeMesh.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.activeMesh.scale.z = Math.min(\n            Math.max(\n              this.activeMesh.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.events.onScale(this.activeMesh.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.activeMesh.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.activeMesh.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.activeMesh.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.activeMesh.position.copy(point);\n      }\n\n      this.events.onTranslate(this.activeMesh.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  constructor() {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray()\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport { AmbientLight, GridHelper, Object3D, PointLight, Scene } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport GameObject from \"./GameObject\";\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n  }\n\n  constructor(\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.addCube();\n  }\n\n  addCube(): void {\n    const cube = new GameObject();\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    // this.selectMesh(cube);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject().fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport Room from \"./Room\";\nimport VisualControls, { VisualControlsEvents } from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\ninterface Events extends VisualControlsEvents {\n  onSelect(object: Mesh | null): void;\n}\n\nexport default class SceneCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  controls = new VisualControls({\n    onTranslate: this.events.onTranslate,\n    onScale: this.events.onScale\n  });\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(public room: Room, public events: Events) {\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n    this.canvas.focus();\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  selectMesh(o: Mesh | null): void {\n    if (this.controls.activeMesh) {\n      this.controls.activeMesh.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.controls.activeMesh = o;\n    this.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.controls.activeMesh) {\n      return;\n    }\n\n    const previousAudio = this.controls.activeMesh.getObjectByName(\n      \"audio\"\n    ) as PositionalAudio;\n    if (previousAudio) {\n      this.controls.activeMesh.remove(previousAudio);\n      previousAudio.stop();\n    }\n\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    const audio = new PositionalAudio(this.listener);\n    audio.name = \"audio\";\n    audio.setBuffer(buffer);\n    audio.setLoop(true);\n    audio.play();\n\n    this.controls.activeMesh.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.room, this.camera);\n\n    if (this.controls.activeMesh) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.controls.activeMesh.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(this.room.children);\n    for (const intersection of intersections) {\n      const o = intersection.object as Mesh;\n      if (o.isMesh) {\n        this.selectMesh(o);\n        return true;\n      }\n    }\n\n    this.selectMesh(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.canvas.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.canvas.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n`;\n\nexport const Sidebar = styled.aside`\n  width: 250px;\n  height: 100%;\n  background: #34495e;\n  color: #fff;\n  padding: 10px 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const Main = styled.main`\n  flex: 1;\n  height: 100%;\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: #2c3e50;\n  border-radius: 3px;\n  border: 2px solid #2c3e50;\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { Group, Input } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// Converts radiant angles to degrees\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nconst degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.x}\n            onChange={e =>\n              onUpdatePosition(\n                e.currentTarget.valueAsNumber,\n                o.position.y,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.y}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                e.currentTarget.valueAsNumber,\n                o.position.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            value={o.position.z}\n            onChange={e =>\n              onUpdatePosition(\n                o.position.x,\n                o.position.y,\n                e.currentTarget.valueAsNumber\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.x).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.y,\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.y).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                degToRad(e.currentTarget.valueAsNumber),\n                o.rotation.z\n              )\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            value={radToDeg(o.rotation.z).toFixed(0)}\n            onChange={e =>\n              onUpdateRotation(\n                o.rotation.x,\n                o.rotation.y,\n                degToRad(e.currentTarget.valueAsNumber)\n              )\n            }\n          />\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.x}\n            onChange={e =>\n              onUpdateScale(e.currentTarget.valueAsNumber, o.scale.y, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.y}\n            onChange={e =>\n              onUpdateScale(o.scale.x, e.currentTarget.valueAsNumber, o.scale.z)\n            }\n          />\n          <Input\n            type=\"number\"\n            step=\"any\"\n            min={0.1}\n            max={10}\n            value={o.scale.z}\n            onChange={e =>\n              onUpdateScale(o.scale.x, o.scale.y, e.currentTarget.valueAsNumber)\n            }\n          />\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Group, Input } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.width}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                width: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={5}\n            max={50}\n            value={r.dimensions.depth}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                depth: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n          <Input\n            type=\"number\"\n            step={1}\n            min={3}\n            max={50}\n            value={r.dimensions.height}\n            onChange={e =>\n              onUpdateDimensions({\n                ...r.dimensions,\n                height: e.currentTarget.valueAsNumber\n              })\n            }\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport Room from \"../3d/Room\";\nimport SceneCanvas from \"../3d/SceneCanvas\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport RoomEditor from \"./RoomEditor\";\nimport { Container, Main, Sidebar } from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  rooms: Room[] = [new Room(\"First room\", { width: 15, depth: 10, height: 3 })];\n  sceneCanvas = new SceneCanvas(this.rooms[0], {\n    onSelect: o => {\n      if (o) {\n        this.setState({\n          selectedObject: {\n            id: o.id,\n            name: o.name,\n            position: o.position,\n            scale: o.scale,\n            rotation: o.rotation\n          }\n        });\n      } else {\n        this.setState({ selectedObject: null });\n      }\n    },\n    onTranslate: p => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          position: p\n        }\n      }));\n    },\n    onScale: s => {\n      this.setState(({ selectedObject }) => ({\n        selectedObject: selectedObject && {\n          ...selectedObject,\n          size: {\n            width: s.x,\n            height: s.y,\n            depth: s.z\n          }\n        }\n      }));\n    }\n  });\n\n  state: State = {\n    rooms: this.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.sceneCanvas.attach(this.mainRef.current);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.sceneCanvas.detach();\n  }\n\n  selectRoom(id: number): void {\n    this.sceneCanvas.selectMesh(null);\n    this.sceneCanvas.room = this.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.sceneCanvas.room.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.sceneCanvas.room.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.sceneCanvas.controls.activeMesh) {\n      this.sceneCanvas.controls.activeMesh.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.sceneCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(\"New room\", { width: 10, depth: 10, height: 3 });\n    this.rooms.push(room);\n    this.sceneCanvas.selectMesh(null);\n    this.sceneCanvas.room = room;\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.sceneCanvas.room.addCube();\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <Sidebar>\n          <p>Sidebar</p>\n          <div>\n            <button onClick={this.onAddRoomClick}>Add room</button>\n            <button onClick={this.onAddCubeClick}>Add cube</button>\n          </div>\n          <ol>\n            {this.state.rooms.map((r, i) => (\n              <li\n                key={r.id}\n                onClick={() => this.selectRoom(i)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {r.name}\n              </li>\n            ))}\n          </ol>\n          {!o && (\n            <RoomEditor\n              room={this.state.rooms[this.state.selectedRoomId]}\n              onUpdateName={this.updateRoomName}\n              onUpdateDimensions={this.updateRoomDimensions}\n            />\n          )}\n          {o && (\n            <ObjectEditor\n              object={o}\n              onUpdateName={this.updateName}\n              onUpdatePosition={this.updatePosition}\n              onUpdateRotation={this.updateRotation}\n              onUpdateScale={this.updateScale}\n              onUpdateAudio={this.updateAudio}\n            />\n          )}\n        </Sidebar>\n        <Main ref={this.mainRef} />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}