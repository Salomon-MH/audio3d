{"version":3,"sources":["data/export.ts","project/AudioLibrary.ts","project/GameObject.ts","project/Room.ts","project/Project.ts","utils/openFileDialog.ts","data/import.ts","editor/MenuBar.tsx","utils/math.ts","editor/styled.ts","editor/VisualControls.ts","editor/ObjectEditor.tsx","audio/ResAudio.ts","audio/ResListener.ts","input/GamepadListener.ts","input/KeyboardListener.ts","editor/ProjectCanvas.ts","editor/RoomEditor.tsx","editor/Editor.tsx","serviceWorker.ts","index.tsx"],"names":["createZip","project","metadata","toData","zip","Zip","file","JSON","stringify","audioFolder","folder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","audioLibrary","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","toString","err","return","generateAsync","type","saveAsZip","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","sent","saveAs","stop","this","_x","apply","arguments","AudioLibrary","nextId","set","Map","cubeGeometry","BoxGeometry","cubeMaterial","MeshLambertMaterial","GameObject","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","audioId","audioData","name","position","toArray","scale","rotation","get","Mesh","wallGeometry","wallMaterial","Room","length","roomDimensions","width","height","depth","grid","wallNorth","wallEast","wallSouth","wallWest","ambientLight","AmbientLight","add","light","PointLight","lookAt","gridSize","Math","max","GridHelper","updateWalls","dimensions","remove","cube","y","_this$roomDimensions","objects","children","filter","c","map","go","_this2","gameObjects","o","fromData","toConsumableArray","Scene","noop","defaultEvents","onSelect","onScale","onTranslate","Project","events","id","rooms","audioType","activeRoom","activeObject","firstRoom","addCube","push","r","openFileDialog","options","Promise","resolve","input","document","createElement","accept","onchange","files","click","getFilesInFolder","forEach","loadZip","_ref","_name","_file","loadAsync","t0","async","t1","parse","parseInt","isNaN","t2","t3","t4","t5","finish","abrupt","openZip","_callee2","_context2","MenuType","Container","styled","div","_templateObject","MenubarItem","_templateObject2","props","isActive","css","_templateObject3","Menu","_templateObject4","MenuItem","_templateObject5","MenuDivider","_templateObject6","MenuBar","state","activeMenu","menuType","setState","react_default","tabIndex","onBlur","closeMenu","FileMenu","onClick","toggleMenu","hidden","onImportProject","onExportProject","EditMenu","onAddObject","onAddRoom","alert","ViewMenu","HelpMenu","React","Component","radToDeg","rad","PI","degToRad","deg","roundToPrecision","precision","round","ObjectDragDirection","styled_templateObject","InnerContainer","styled_templateObject2","Sidebar","aside","styled_templateObject3","FocusedLabel","styled_templateObject4","Main","main","styled_templateObject5","Group","styled_templateObject6","Input","_templateObject7","InputGroup","_templateObject8","RoomList","ol","_templateObject9","RoomListItem","li","_templateObject10","active","_templateObject11","ObjectEditor","onAudioFileSelected","e","currentTarget","item","console","log","size","reader","FileReader","onload","result","onUpdateAudio","error","readAsArrayBuffer","_this$props","object","onUpdateName","onUpdatePosition","onUpdateRotation","onUpdateScale","onChange","step","x","toFixed","valueAsNumber","z","min","ResAudio","audioScene","audioContext","audioSource","source","isPlaying","createBufferSource","loop","createSource","Float32Array","forward","connect","force","prototype","Vector3","quaternion","Quaternion","orientation","matrixWorld","decompose","applyQuaternion","setPosition","setOrientation","up","src","warn","fetch","resp","arrayBuffer","decodeAudioData","buffer","start","Object3D","Listener","setListenerPosition","setListenerOrientation","GamepadListener","onGamepadConnected","gamepad","onGamepadDisconnected","window","addEventListener","removeEventListener","index","gamepads","navigator","getGamepads","mapping","axis","axes","abs","v1","buttons","KeyboardListener","target","keysPressed","Set","lastKeyUp","reset","clear","onKeyDown","preventDefault","timeStamp","onKeyUp","delete","button","shiftKey","has","MouseButton","VisualControls","objectDragDirection","isScaling","dragOffset","lastPoint","plane","Plane","axisX","axisY","axisZ","scaleX","scaleY","scaleZ","planeYZ","planeXZ","planeXY","materialConfig","transparent","opacity","side","DoubleSide","axisGeometry","MeshBasicMaterial","objectSpread","color","userData","direction","AxisX","AxisY","AxisZ","scaleGeometry","SphereGeometry","isScale","planeGeometry","PlaneGeometry","PlaneYZ","PlaneXZ","PlaneXY","raycaster","copy","intersections","intersectObjects","intersection","hasOwnProperty","point","sub","getControlFromRaycaster","onMove","ray","p","altPlane","distanceToPoint","origin","intersectPlane","ProjectCanvas","rafHandle","previousTimestamp","AudioContext","listener","AudioListener","ResonanceAudio","resListener","ResListener","controls","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","outlineMesh","Raycaster","keys","domElement","isDraggingCamera","resize","_this$target","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","setSize","animate","t","requestAnimationFrame","dt","update","render","clearDepth","onMouseDown","Secondary","requestPointerLock","Primary","updateRaycaster","style","cursor","checkSceneClick","onMouseUp","exitPointerLock","onMouseMove","movementX","rotateOnWorldAxis","movementY","rotateOnAxis","onWheel","delta","deltaY","deltaMode","translateZ","output","destination","autoClear","setClearColor","Color","stopPropagation","outlineMaterial","BackSide","material","multiplyScalar","listen","appendChild","cancelAnimationFrame","removeChild","focus","selectObject","geometry","previousAudio","getObjectByName","slice","audio","PositionalAudio","setBuffer","setLoop","play","isPressed","translateOnAxis","gamepadAxes","getAxis","getSize","Vector2","pageX","offsetLeft","pageY","offsetTop","setFromCamera","RoomEditor","room","onUpdateDimensions","Editor","projectCanvas","selectedRoomId","selectedObject","mainRef","createRef","onSelectObject","onTranslateObject","onScaleObject","s","updateRoomName","concat","updateRoomDimensions","updateName","_ref5","updateScale","_ref6","updatePosition","_ref7","updateRotation","_ref8","Euler","updateAudio","addAudioToActiveMesh","onAddRoomClick","onAddCubeClick","onImportClick","changeProject","onExportClick","current","attach","detach","styled_Container","MenuBar_MenuBar","i","selectRoom","RoomEditor_RoomEditor","ObjectEditor_ObjectEditor","ref","Boolean","location","hostname","match","global","webkitAudioContext","ReactDOM","Editor_Editor","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b29a5dc2.chunk.js","sourcesContent":["/**\n * @author Niklas Korz\n * This module defines functions for exporting and saving projects to the local filesystem.\n */\nimport { saveAs } from \"file-saver\";\nimport Zip from \"jszip\";\nimport Project from \"../project/Project\";\n\n/**\n * Serializes the given project as JSON and compresses it along its audio\n * data in a ZIP file. The audio data is saved as one file per audio in a\n * dedicated subdirectory \"audio\".\n */\nexport const createZip = (project: Project): Promise<Blob> => {\n  const metadata = project.toData();\n  const zip = new Zip();\n  zip.file(\"metadata.json\", JSON.stringify(metadata));\n\n  const audioFolder = zip.folder(\"audio\");\n  for (const [key, value] of project.audioLibrary.entries()) {\n    audioFolder.file(key.toString(), value);\n  }\n\n  return zip.generateAsync({ type: \"blob\" });\n};\n\n/**\n * Saves the given project, including its audio data, as a zip file on the\n * user's local filesystem\n */\nexport const saveAsZip = async (project: Project) => {\n  const data = await createZip(project);\n  saveAs(data, \"audio3d-project.zip\");\n};\n","/**\n * @author Niklas Korz\n */\n\nexport default class AudioLibrary extends Map<number, ArrayBuffer> {\n  nextId = 0;\n\n  add(data: ArrayBuffer): number {\n    this.set(this.nextId, data);\n    return this.nextId++;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { BoxGeometry, Mesh, MeshLambertMaterial } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\n\nconst cubeGeometry = new BoxGeometry(1, 1, 1);\nconst cubeMaterial = new MeshLambertMaterial();\n\nexport default class GameObject extends Mesh implements Serializable {\n  audioId: number | null = null;\n  audioData: ArrayBuffer | null = null;\n\n  constructor(private audioLibrary: AudioLibrary) {\n    super(cubeGeometry, cubeMaterial);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      position: this.position.toArray(),\n      scale: this.scale.toArray(),\n      rotation: this.rotation.toArray(),\n      audioId: this.audioId\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.position.set(data.position[0], data.position[1], data.position[2]);\n    this.scale.set(data.scale[0], data.scale[1], data.scale[2]);\n    this.rotation.set(data.rotation[0], data.rotation[1], data.rotation[2]);\n    this.audioId = data.audioId;\n\n    if (this.audioId != null) {\n      this.audioData = this.audioLibrary.get(this.audioId) || null;\n    }\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { RoomDimensions } from \"resonance-audio\";\nimport {\n  AmbientLight,\n  BackSide,\n  BoxGeometry,\n  GridHelper,\n  Group,\n  Mesh,\n  MeshLambertMaterial,\n  Object3D,\n  PointLight,\n  Scene\n} from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\n\nconst wallGeometry = new BoxGeometry(1, 1, 1);\nconst wallMaterial = new MeshLambertMaterial();\n\n// A \"room\" is analog to levels of a game.\n// The user will only hear sounds that are part of the current room.\n// Also, this abstraction is necessary to support Resonance Audio as one of many\n// spatial audio implementations.\nexport default class Room extends Scene implements Serializable {\n  grid: GridHelper;\n  wallNorth = new Mesh(wallGeometry, wallMaterial);\n  wallEast = new Mesh(wallGeometry, wallMaterial);\n  wallSouth = new Mesh(wallGeometry, wallMaterial);\n  wallWest = new Mesh(wallGeometry, wallMaterial);\n\n  get dimensions(): RoomDimensions {\n    return this.roomDimensions;\n  }\n\n  set dimensions(dimensions: RoomDimensions) {\n    this.roomDimensions = dimensions;\n\n    this.remove(this.grid);\n\n    const gridSize = Math.max(dimensions.width, dimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n\n    this.add(this.grid);\n\n    this.updateWalls();\n  }\n\n  constructor(\n    private audioLibrary: AudioLibrary,\n    name: string = \"\",\n    private roomDimensions: RoomDimensions = { width: 1, height: 1, depth: 1 }\n  ) {\n    super();\n\n    this.name = name;\n\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.add(ambientLight);\n    const light = new PointLight(0xffffff, 0.5);\n    light.position.set(5, 5, 0);\n    light.lookAt(0, 0, 0);\n    this.add(light);\n\n    const gridSize = Math.max(roomDimensions.width, roomDimensions.depth);\n    this.grid = new GridHelper(gridSize, gridSize, 0xffffff, 0xffffff);\n    this.add(this.grid);\n\n    this.updateWalls();\n    this.add(this.wallNorth);\n    this.add(this.wallEast);\n    this.add(this.wallSouth);\n    this.add(this.wallWest);\n  }\n\n  addCube(): GameObject {\n    const cube = new GameObject(this.audioLibrary);\n    cube.position.y += 0.5;\n    cube.name = \"New cube\";\n\n    this.add(cube);\n    return cube;\n  }\n\n  updateWalls(): void {\n    const { width, depth, height } = this.roomDimensions;\n\n    this.wallNorth.scale.set(width, height, 0.25);\n    this.wallEast.scale.set(0.25, height, depth);\n    this.wallSouth.scale.set(width, height, 0.25);\n    this.wallWest.scale.set(0.25, height, depth);\n\n    this.wallNorth.position.set(0, height / 2, depth / 2);\n    this.wallEast.position.set(width / 2, height / 2, 0);\n    this.wallSouth.position.set(0, height / 2, -depth / 2);\n    this.wallWest.position.set(-width / 2, height / 2, 0);\n  }\n\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      dimensions: this.dimensions,\n      objects: this.children\n        .filter((c: Object3D): c is GameObject => c instanceof GameObject)\n        .map(go => go.toData())\n    };\n  }\n\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.dimensions = data.dimensions;\n\n    const gameObjects = data.objects.map((o: SerializedData) =>\n      new GameObject(this.audioLibrary).fromData(o)\n    );\n    this.add(...gameObjects);\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport { Vector3 } from \"three\";\nimport Serializable, { SerializedData } from \"../data/Serializable\";\nimport AudioLibrary from \"./AudioLibrary\";\nimport GameObject from \"./GameObject\";\nimport Room from \"./Room\";\n\nexport interface ProjectEvents {\n  onSelect(object: GameObject | null): void;\n  onTranslate(position: Vector3): void;\n  onScale(scale: Vector3): void;\n}\n\nconst noop = () => {\n  /* noop */\n};\nconst defaultEvents: ProjectEvents = {\n  onSelect: noop,\n  onScale: noop,\n  onTranslate: noop\n};\n\nexport default class Project implements Serializable {\n  audioLibrary = new AudioLibrary();\n\n  id: number | null = null;\n  name = \"New project\";\n\n  rooms: Room[] = [];\n  audioType: number = 1;\n\n  activeRoom: Room;\n  activeObject: GameObject | null = null;\n\n  constructor(public events: ProjectEvents = defaultEvents) {\n    const firstRoom = new Room(this.audioLibrary, \"First room\", {\n      width: 15,\n      depth: 10,\n      height: 3\n    });\n    firstRoom.addCube();\n    this.rooms.push(firstRoom);\n    this.activeRoom = firstRoom;\n  }\n\n  // Serialize instance to a plain JavaScript object\n  toData(): SerializedData {\n    return {\n      name: this.name,\n      rooms: this.rooms.map(r => r.toData())\n    };\n  }\n\n  // Load data from a plain JavaScript object into this instance\n  fromData(data: SerializedData): this {\n    this.name = data.name;\n    this.rooms = data.rooms.map((r: SerializedData) =>\n      new Room(this.audioLibrary).fromData(r)\n    );\n    this.activeRoom = this.rooms[0];\n\n    return this;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\n// Options for configuring the file modal\nexport interface OpenFileDialogOptions {\n  accept?: string;\n}\n\n/**\n * Opens a file dialog and lets the user select a file\n * @returns The selected file\n */\nexport const openFileDialog = (\n  options: OpenFileDialogOptions = {}\n): Promise<File> =>\n  new Promise(resolve => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    if (options.accept) {\n      input.accept = options.accept;\n    }\n    input.onchange = () => {\n      if (input.files) {\n        resolve(input.files[0]);\n      }\n    };\n    input.click();\n  });\n","/**\n * @author Niklas Korz\n * This module defines functions for loading and importing projects from the local filesystem.\n */\nimport Zip, { JSZipObject } from \"jszip\";\nimport Project from \"../project/Project\";\nimport { openFileDialog } from \"../utils/openFileDialog\";\n\ninterface FolderItem {\n  name: string;\n  file: JSZipObject;\n}\n\n/**\n * Iterates over all files at the root of a zip folder and returns them as an array.\n */\nconst getFilesInFolder = (folder: Zip): FolderItem[] => {\n  const files: FolderItem[] = [];\n  folder.forEach((name, file) => files.push({ name, file }));\n  return files;\n};\n\n/**\n * Decompresses the given zip file, loads the included JSON metadata and reads all\n * included audio files as binary array buffers.\n * @param data The blob to read from, usually a file returned by a FileReader instance.\n * @returns The project recreated from the data found in the zip\n */\nexport const loadZip = async (data: Blob): Promise<Project> => {\n  const zip = await Zip.loadAsync(data);\n  const metadata = JSON.parse(await zip.file(\"metadata.json\").async(\"text\"));\n\n  const audioFolder = zip.folder(\"audio\");\n  const project = new Project();\n  for (const { name, file } of getFilesInFolder(audioFolder)) {\n    const id = parseInt(name, 10);\n    // Only load files in the audio folder which have a valid id as name\n    if (!isNaN(id)) {\n      project.audioLibrary.set(id, await file.async(\"arraybuffer\"));\n\n      if (id >= project.audioLibrary.nextId) {\n        project.audioLibrary.nextId = id + 1;\n      }\n    }\n  }\n\n  project.fromData(metadata);\n\n  return project;\n};\n\n/**\n * Opens a file dialog and lets the user select a zip file that will be parsed\n * and loaded as a project.\n * @returns The project found in the zip\n */\nexport const openZip = async (): Promise<Project> => {\n  const file = await openFileDialog({ accept: \"application/zip\" });\n  return await loadZip(file);\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 0 0 auto;\n  background: hsl(210, 29%, 15%);\n  color: #fff;\n  font-size: 0.9em;\n  padding: 0 10px;\n  user-select: none;\n\n  :focus {\n    outline: none;\n  }\n`;\n\ninterface MenubarItemProps {\n  isActive?: boolean;\n}\n\nexport const MenubarItem = styled.div<MenubarItemProps>`\n  position: relative;\n  display: inline-block;\n  padding: 10px 15px;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 25%, 20%);\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      background: hsl(210, 25%, 20%);\n    `}\n`;\n\nexport const Menu = styled.div`\n  z-index: 1;\n  position: absolute;\n  left: 0;\n  top: 100%;\n  background: hsl(210, 25%, 20%);\n  padding: 5px 0;\n  min-width: 200px;\n  font-size: 0.95em;\n  box-shadow: 5px 5px 8px rgba(0, 0, 0, 0.5);\n\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n\n  cursor: default;\n`;\n\nexport const MenuItem = styled.div`\n  white-space: nowrap;\n  padding: 8px 20px;\n  margin: 2px 0;\n  cursor: pointer;\n\n  :hover {\n    background: hsl(210, 29%, 15%);\n  }\n`;\n\nexport const MenuDivider = styled.div`\n  height: 0;\n  margin: 5px;\n  border-bottom: 1px solid hsl(210, 15%, 35%);\n`;\n\ninterface Props {\n  onImportProject(): void;\n  onExportProject(): void;\n\n  onAddObject(): void;\n  onAddRoom(): void;\n}\n\nenum MenuType {\n  FileMenu,\n  EditMenu,\n  ViewMenu,\n  HelpMenu\n}\n\ninterface State {\n  activeMenu: MenuType | null;\n}\n\nexport default class MenuBar extends React.Component<Props, State> {\n  state: State = {\n    activeMenu: null\n  };\n\n  toggleMenu(menuType: MenuType): void {\n    this.setState(state => ({\n      activeMenu: state.activeMenu === menuType ? null : menuType\n    }));\n  }\n\n  closeMenu(): void {\n    this.setState({ activeMenu: null });\n  }\n\n  render(): React.ReactNode {\n    const { activeMenu } = this.state;\n\n    return (\n      <Container tabIndex={-1} onBlur={() => this.closeMenu()}>\n        <MenubarItem\n          isActive={activeMenu === MenuType.FileMenu}\n          onClick={() => this.toggleMenu(MenuType.FileMenu)}\n        >\n          File\n          <Menu hidden={activeMenu !== MenuType.FileMenu}>\n            <MenuItem>New project</MenuItem>\n            <MenuDivider />\n            <MenuItem>Load project</MenuItem>\n            <MenuItem onClick={this.props.onImportProject}>\n              Import project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>Save project</MenuItem>\n            <MenuItem onClick={this.props.onExportProject}>\n              Export project\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>Settings</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.EditMenu}\n          onClick={() => this.toggleMenu(MenuType.EditMenu)}\n        >\n          Edit\n          <Menu hidden={activeMenu !== MenuType.EditMenu}>\n            <MenuItem onClick={this.props.onAddObject}>Add object</MenuItem>\n            <MenuItem>Delete object</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={this.props.onAddRoom}>Add room</MenuItem>\n            <MenuItem>Delete room</MenuItem>\n            <MenuDivider />\n            <MenuItem onClick={() => alert(\"The kraken shall be released\")}>\n              Release the kraken\n            </MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.ViewMenu}\n          onClick={() => this.toggleMenu(MenuType.ViewMenu)}\n        >\n          View\n          <Menu hidden={activeMenu !== MenuType.ViewMenu}>\n            <MenuItem>Audio Library</MenuItem>\n            <MenuItem>Project Manager</MenuItem>\n            <MenuDivider />\n            <MenuItem>Toggle Fullscreen</MenuItem>\n          </Menu>\n        </MenubarItem>\n        <MenubarItem\n          isActive={activeMenu === MenuType.HelpMenu}\n          onClick={() => this.toggleMenu(MenuType.HelpMenu)}\n        >\n          Help\n          <Menu hidden={activeMenu !== MenuType.HelpMenu}>\n            <MenuItem>Issues</MenuItem>\n            <MenuItem>Source Code</MenuItem>\n            <MenuDivider />\n            <MenuItem>About</MenuItem>\n          </Menu>\n        </MenubarItem>\n      </Container>\n    );\n  }\n}\n","/**\n * Useful utility functions related to mathematics\n * @author Niklas Korz\n */\n\n// Converts radiant angles to degrees\nexport const radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n\n// Converts degree angles to radiants\nexport const degToRad = (deg: number): number => (deg / 180) * Math.PI;\n\nexport const roundToPrecision = (value: number, precision: number) =>\n  Math.round(value / precision) * precision;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: #000;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InnerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Sidebar = styled.aside`\n  flex: 0 0 300px;\n  height: 100%;\n  background: hsl(210, 29%, 29%);\n  color: #fff;\n  padding: 0 15px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nexport const FocusedLabel = styled.div`\n  display: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 3px;\n  background: hsl(210, 25%, 20%);\n  border: 1px solid hsl(210, 15%, 40%);\n  opacity: 0.8;\n  color: #fff;\n  pointer-events: none;\n`;\n\nexport const Main = styled.main`\n  position: relative;\n  flex: 1;\n  height: 100%;\n\n  :focus-within > ${FocusedLabel} {\n    display: block;\n  }\n`;\n\nexport const Group = styled.div`\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  appearance: none;\n  background: hsl(210, 29%, 24%);\n  border-radius: 3px;\n  border: 2px solid hsl(210, 29%, 24%);\n  color: #fff;\n  width: 100%;\n  padding: 10px 12px;\n  margin: 5px 0;\n\n  transition: 0.2s ease border-color;\n  :focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  > ${Input} {\n    flex: 1;\n    width: auto;\n    min-width: 0;\n\n    margin-right: 5px;\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const RoomList = styled.ol`\n  list-style: none;\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 3px;\n  background: hsl(210, 29%, 24%);\n`;\n\ninterface RoomListItemProps {\n  active?: boolean;\n}\n\nexport const RoomListItem = styled.li<RoomListItemProps>`\n  cursor: pointer;\n  padding: 7px 10px;\n  border-radius: 2px;\n  ${props =>\n    props.active &&\n    css`\n      background: hsl(210, 29%, 20%);\n      border-left: 2px solid #3498db;\n    `};\n`;\n","/**\n * @author Niklas Korz\n */\nimport {\n  BoxGeometry,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Plane,\n  PlaneGeometry,\n  Raycaster,\n  Scene,\n  SphereGeometry,\n  Vector3\n} from \"three\";\nimport Project from \"../project/Project\";\n\n// The object drag direction is required for calculating the plane to ray cast\n// against later on. Also, of course, to determine whether the object should be\n// moved on one or two axes.\nexport enum ObjectDragDirection {\n  AxisX,\n  AxisY,\n  AxisZ,\n  PlaneYZ,\n  PlaneXZ,\n  PlaneXY\n}\n\n// Inspired by https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/TransformControls.js\n// As in the example, we are using ray casting for calculating the movements of planes and axes.\n// Everything else in this implementation has resulted either from trial and error or by\n// consulting the Three.js documentation.\n// The controls are grouped as a scene instead of a group object to allow drawing\n// them separately, on top of the main scene, to avoid any controls to be obscured\n// by objects that would theoretically appear in front of them based on their Z coordinate.\n// Furthermore, the scene's position is set to the active mesh's when one is\n// selected. This way, coordinates in the controls scene are always relative to the\n// active mesh.\n// Theoretically, it could also be added as a child node to the active mesh,\n// but this would result in the rotation being copied as well, which is not desirable\n// in this case.\n// Beware though that intersection points are always given in absolute world coordinates.\nexport default class VisualControls extends Scene {\n  objectDragDirection: ObjectDragDirection | null = null;\n  isScaling: boolean = false;\n  // The drag offset is used to determine the distance of the point where the\n  // user started dragging and the center of the object.\n  // This way, the cursor will always have the same relative position to the\n  // object while dragging.\n  dragOffset = new Vector3();\n  lastPoint = new Vector3();\n\n  // In contrast to the Three.js example, we will be using a real plane instead of a\n  // mesh that only represents an area on a plane.\n  // As a consequence, the ray generated by the ray caster will be used directly\n  // for calculating the intersection.\n  plane = new Plane();\n\n  // The visual controls\n  axisX: Mesh;\n  axisY: Mesh;\n  axisZ: Mesh;\n  scaleX: Mesh;\n  scaleY: Mesh;\n  scaleZ: Mesh;\n  planeYZ: Mesh;\n  planeXZ: Mesh;\n  planeXY: Mesh;\n\n  constructor(public project: Project) {\n    super();\n\n    // Setup visual controls for transformation\n\n    const materialConfig = {\n      transparent: true,\n      opacity: 0.75,\n      side: DoubleSide // Needed to make the planes viewable from both sides\n    };\n\n    // The X, Y and Z axes, represented as cuboids\n\n    const axisGeometry = new BoxGeometry(0.05, 0.05, 0.5);\n\n    this.axisX = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0xff0000\n      })\n    );\n    this.axisX.position.set(0.275, 0.0, 0.0);\n    this.axisX.rotation.y = Math.PI / 2;\n    this.axisX.userData.direction = ObjectDragDirection.AxisX;\n\n    this.axisY = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x00ff00\n      })\n    );\n    this.axisY.position.set(0.0, 0.275, 0.0);\n    this.axisY.rotation.x = Math.PI / 2;\n    this.axisY.userData.direction = ObjectDragDirection.AxisY;\n\n    this.axisZ = new Mesh(\n      axisGeometry,\n      new MeshBasicMaterial({\n        ...materialConfig,\n        color: 0x0000ff\n      })\n    );\n    this.axisZ.position.set(0.0, 0.0, 0.275);\n    this.axisZ.userData.direction = ObjectDragDirection.AxisZ;\n\n    this.add(this.axisX);\n    this.add(this.axisY);\n    this.add(this.axisZ);\n\n    // Scaling controls per axis, represented as spheres\n\n    const scaleGeometry = new SphereGeometry(0.05, 16, 16);\n\n    this.scaleX = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff0000 })\n    );\n    this.scaleX.position.set(0.65, 0, 0);\n    this.scaleX.userData.direction = ObjectDragDirection.AxisX;\n    this.scaleX.userData.isScale = true;\n\n    this.scaleY = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ff00 })\n    );\n    this.scaleY.position.set(0, 0.65, 0);\n    this.scaleY.userData.direction = ObjectDragDirection.AxisY;\n    this.scaleY.userData.isScale = true;\n\n    this.scaleZ = new Mesh(\n      scaleGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x0000ff })\n    );\n    this.scaleZ.position.set(0, 0, 0.65);\n    this.scaleZ.userData.direction = ObjectDragDirection.AxisZ;\n    this.scaleZ.userData.isScale = true;\n\n    this.add(this.scaleX);\n    this.add(this.scaleY);\n    this.add(this.scaleZ);\n\n    // The YZ, XZ, XY planes, represented as areas on each plane.\n    // Declaration is ordered by the normal of the plane, i.e.\n    // the axis that will not be moved by it.\n\n    const planeGeometry = new PlaneGeometry(0.25, 0.25);\n\n    this.planeYZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0x00ffff })\n    );\n    this.planeYZ.position.set(0.0, 0.25, 0.25);\n    this.planeYZ.rotation.y = Math.PI / 2;\n    this.planeYZ.userData.direction = ObjectDragDirection.PlaneYZ;\n\n    this.planeXZ = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xff00ff })\n    );\n    this.planeXZ.position.set(0.25, 0.0, 0.25);\n    this.planeXZ.rotation.x = Math.PI / 2;\n    this.planeXZ.userData.direction = ObjectDragDirection.PlaneXZ;\n\n    this.planeXY = new Mesh(\n      planeGeometry,\n      new MeshBasicMaterial({ ...materialConfig, color: 0xffff00 })\n    );\n    this.planeXY.position.set(0.25, 0.25, 0.0);\n    this.planeXY.userData.direction = ObjectDragDirection.PlaneXY;\n\n    this.add(this.planeYZ);\n    this.add(this.planeXZ);\n    this.add(this.planeXY);\n  }\n\n  getControlFromRaycaster(raycaster: Raycaster): Object3D | null {\n    if (!this.project.activeObject) {\n      return null;\n    }\n\n    this.position.copy(this.project.activeObject.position);\n\n    const intersections = raycaster.intersectObjects(this.children);\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o.userData.hasOwnProperty(\"direction\")) {\n        // Save the drag offset by subtracting the absolute position of the cursor\n        // (absolute meaning world coordinates) from the object's absolute position.\n        this.dragOffset\n          .copy(intersection.point)\n          .sub(this.project.activeObject.position);\n        this.lastPoint.copy(intersection.point);\n        return o;\n      }\n    }\n    return null;\n  }\n\n  // As we don't have access to the camera here and to avoid creating the ray caster\n  // twice, we just pass it from the initial mouse click handler and use it here.\n  // The original mouse event and screen coordinates are not required for the functionality\n  // of the controls, so they will not be taken as parameters here.\n  onClick(raycaster: Raycaster): boolean {\n    const o = this.getControlFromRaycaster(raycaster);\n    if (o && o.userData.hasOwnProperty(\"direction\")) {\n      this.objectDragDirection = o.userData.direction;\n      this.isScaling = !!o.userData.isScale;\n      this.onMove(raycaster);\n      return true;\n    }\n    return false;\n  }\n\n  // Initially, I used a Vector3(dx, dy, 0) here and applied the world rotation\n  // that can be calculated by the camera with camera.getWorldQuaternion(),\n  // followed by zeroing out the directions that should not be changed based on\n  // the plane or axis selected by the user.\n  // This resulted in a \"weird\" feeling though, as the zeroed axis gets completely lost,\n  // therefore making one of the two remaining axis movements feel slower than the other\n  // even if both are dragged equally on the screen.\n  //\n  // Similar to the Three.js transform controls example, this now uses a ray\n  // casted from the camera origin onto a plane that represents the axes to move\n  // on and sets the position of the object to the intersection point.\n  onMove({ ray }: Raycaster): void {\n    if (this.objectDragDirection === null || !this.project.activeObject) {\n      return;\n    }\n\n    const c = this.project.activeObject.position;\n    const p = this.plane;\n    let altPlane: Plane | null = null;\n\n    // Update the normal and constant (^= position) of the plane\n    // TODO: The origin of the plane has to be negative somehow, otherwise everything is mirrored. Why?\n    switch (this.objectDragDirection) {\n      case ObjectDragDirection.AxisX:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisY:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.AxisZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        altPlane = new Plane(new Vector3(0, 1, 0), -c.y);\n        break;\n      case ObjectDragDirection.PlaneXY:\n        p.set(new Vector3(0, 0, 1), -c.z);\n        break;\n      case ObjectDragDirection.PlaneYZ:\n        p.set(new Vector3(1, 0, 0), -c.x);\n        break;\n      case ObjectDragDirection.PlaneXZ:\n        p.set(new Vector3(0, 1, 0), -c.y);\n        break;\n    }\n\n    // If there is an alternative plane (i.e., for axes),\n    // check which one is farther away from the ray's origin.\n    // This is needed to prevent issues when the camera comes too close to the\n    // plane.\n    if (\n      altPlane &&\n      Math.abs(altPlane.distanceToPoint(ray.origin)) >\n        Math.abs(p.distanceToPoint(ray.origin))\n    ) {\n      p.copy(altPlane);\n    }\n\n    const point = ray.intersectPlane(p, new Vector3());\n    if (!point) {\n      // No intersection\n      return;\n    }\n\n    if (this.isScaling) {\n      // For scaling, we are using the relative movement instead of the position\n      // as no movement at all should leave the scale as is.\n      // I.e., we are adding the distance to the previously recorded intersection point\n      // to the object's scale.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.scale.x = Math.min(\n            Math.max(\n              this.project.activeObject.scale.x + (point.x - this.lastPoint.x),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.scale.y = Math.min(\n            Math.max(\n              this.project.activeObject.scale.y + (point.y - this.lastPoint.y),\n              0.1\n            ),\n            10\n          );\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.scale.z = Math.min(\n            Math.max(\n              this.project.activeObject.scale.z + (point.z - this.lastPoint.z),\n              0.1\n            ),\n            10\n          );\n          break;\n      }\n\n      this.project.events.onScale(this.project.activeObject.scale);\n    } else {\n      point.sub(this.dragOffset);\n\n      // If we are operating on an axis instead of a plane, ensure only the relevant\n      // coordinate is changed.\n      switch (this.objectDragDirection) {\n        case ObjectDragDirection.AxisX:\n          this.project.activeObject.position.x = point.x;\n          break;\n        case ObjectDragDirection.AxisY:\n          this.project.activeObject.position.y = point.y;\n          break;\n        case ObjectDragDirection.AxisZ:\n          this.project.activeObject.position.z = point.z;\n          break;\n        default:\n          // The selected direction is a plane, so we can just copy the\n          // intersection point.\n          this.project.activeObject.position.copy(point);\n      }\n\n      this.project.events.onTranslate(this.project.activeObject.position);\n    }\n\n    this.lastPoint.copy(point);\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { degToRad, radToDeg, roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorObject } from \"./types\";\n\ninterface Props {\n  object: EditorObject;\n  onUpdateName(name: string): void;\n  onUpdatePosition(x: number, y: number, z: number): void;\n  onUpdateRotation(x: number, y: number, z: number): void;\n  onUpdateScale(x: number, y: number, z: number): void;\n  onUpdateAudio(data: ArrayBuffer): void;\n}\n\n// UI component for editing properties specific to objects inside a room\nexport default class ObjectEditor extends React.Component<Props> {\n  onAudioFileSelected: React.ChangeEventHandler<HTMLInputElement> = e => {\n    const { files } = e.currentTarget;\n    if (!files) {\n      return;\n    }\n    const file = files.item(0);\n    if (!file) {\n      return;\n    }\n    console.log(\"Selected file:\", file);\n\n    if (file.size > 5 * 1024 * 1024) {\n      console.log(\"File too big, aborting\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!reader.result) {\n        console.error(\"Failed reading file:\", e);\n        return;\n      }\n\n      this.props.onUpdateAudio(reader.result as ArrayBuffer);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  render(): React.ReactNode {\n    const {\n      object: o,\n      onUpdateName,\n      onUpdatePosition,\n      onUpdateRotation,\n      onUpdateScale\n    } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Object Name</label>\n          <Input\n            type=\"text\"\n            value={o.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Position (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.x.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.y,\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.y.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01),\n                  o.position.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.01}\n              value={o.position.z.toFixed(2)}\n              onChange={e =>\n                onUpdatePosition(\n                  o.position.x,\n                  o.position.y,\n                  roundToPrecision(e.currentTarget.valueAsNumber, 0.01)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Euler-Rotation in Degrees (x, y, z)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.x).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.y,\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.y).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  degToRad(e.currentTarget.valueAsNumber % 360),\n                  o.rotation.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              value={radToDeg(o.rotation.z).toFixed(0)}\n              onChange={e =>\n                onUpdateRotation(\n                  o.rotation.x,\n                  o.rotation.y,\n                  degToRad(e.currentTarget.valueAsNumber % 360)\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Size (width, height, depth)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.x.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  e.currentTarget.valueAsNumber,\n                  o.scale.y,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.y.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  e.currentTarget.valueAsNumber,\n                  o.scale.z\n                )\n              }\n            />\n            <Input\n              type=\"number\"\n              step={0.1}\n              min={0.1}\n              max={10}\n              value={o.scale.z.toFixed(1)}\n              onChange={e =>\n                onUpdateScale(\n                  o.scale.x,\n                  o.scale.y,\n                  e.currentTarget.valueAsNumber\n                )\n              }\n            />\n          </InputGroup>\n        </Group>\n        <Group>\n          <label>Audio source (file)</label>\n          <Input\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={this.onAudioFileSelected}\n          />\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Leon Erath / https://leonerath.de/\n */\n\nimport { ResonanceAudio } from \"resonance-audio\";\nimport { Object3D, Quaternion, Vector3 } from \"three\";\n\n/**\n * Class extends Object3D in order to work with the SceneCanvas.\n * The Idea ist to override the positionChange-Methods and change the ResonanceAudio\n * accordingly.\n */\n\nexport default class ResAudio extends Object3D {\n  audioSource: AudioBufferSourceNode;\n  source: ResonanceAudio.Source;\n  isPlaying: boolean;\n\n  constructor(audioScene: ResonanceAudio, private audioContext: AudioContext) {\n    super();\n    this.audioSource = audioContext.createBufferSource();\n    this.audioSource.loop = true;\n    this.source = audioScene.createSource({\n      position: new Float32Array([0, 1, 3]),\n      forward: new Float32Array([1, 0, 0])\n    });\n    this.audioSource.connect(this.source.input);\n    this.isPlaying = false;\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n\n    this.matrixWorld.decompose(position, quaternion, scale);\n\n    console.log(position.x, position.y, position.z);\n\n    orientation.set(0, 0, 1).applyQuaternion(quaternion);\n\n    this.source.setPosition(position.x, position.y, position.z);\n    this.source.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n  }\n\n  async play(src: string): Promise<void> {\n    if (this.isPlaying === true) {\n      console.warn(\"ResAudio: Audio is already playing.\");\n      return;\n    }\n    const resp = await fetch(src);\n    const data = await resp.arrayBuffer();\n    const buffer = await this.audioContext.decodeAudioData(data);\n\n    this.audioSource.buffer = buffer;\n    this.audioSource.start();\n    this.isPlaying = true;\n  }\n\n  pause(): void {\n    this.audioSource.stop();\n    this.isPlaying = false;\n  }\n\n  stop(): void {\n    this.audioSource.stop();\n    this.isPlaying = false;\n    this.audioSource.buffer = null;\n  }\n}\n","/**\n * @author Leon Erath / https://leonerath.de/\n */\n\nimport { ResonanceAudio } from \"resonance-audio\";\nimport { Object3D, Quaternion, Vector3 } from \"three\";\n\nexport default class Listener extends Object3D {\n  constructor(private audioScene: ResonanceAudio) {\n    super();\n  }\n\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(force);\n\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n\n    this.matrixWorld.decompose(position, quaternion, scale);\n\n    orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n    this.audioScene.setListenerPosition(position.x, position.y, position.z);\n    this.audioScene.setListenerOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z,\n      this.up.x,\n      this.up.y,\n      this.up.z\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nconst AXIS_THRESHOLD = 0.1;\n\nexport default class GamepadListener {\n  listen(): void {\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.addEventListener(\"gamepaddisconnected\", this.onGamepadDisconnected);\n  }\n\n  stop(): void {\n    window.removeEventListener(\"gamepadconnected\", this.onGamepadConnected);\n    window.removeEventListener(\n      \"gamepaddisconnected\",\n      this.onGamepadDisconnected\n    );\n  }\n\n  onGamepadConnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad connected:\", e.gamepad);\n  };\n\n  onGamepadDisconnected = (e: GamepadEvent) => {\n    console.log(\"Gamepad disconnected:\", e.gamepad);\n  };\n\n  getAxis(index: number): number {\n    const gamepads = navigator.getGamepads();\n\n    let value = 0;\n    for (const gamepad of gamepads) {\n      if (!gamepad || gamepad.mapping !== \"standard\") {\n        continue;\n      }\n\n      if (index < 4) {\n        const axis = gamepad.axes[index];\n        if (\n          Math.abs(axis) >= AXIS_THRESHOLD &&\n          Math.abs(axis) > Math.abs(value)\n        ) {\n          value = axis;\n        }\n      } else if (index === 4) {\n        const v1 = gamepad.buttons[6].value;\n        const v2 = gamepad.buttons[7].value;\n        const axis = v2 - v1;\n        if (Math.abs(axis) > Math.abs(value)) {\n          value = axis;\n        }\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @author Niklas Korz\n */\n\nexport default class KeyboardListener {\n  target: HTMLElement;\n  keysPressed = new Set<string>();\n  lastKeyUp = new Map<string, number>();\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  listen(): void {\n    this.target.addEventListener(\"blur\", this.reset);\n    this.target.addEventListener(\"contextmenu\", this.reset);\n    this.target.addEventListener(\"keydown\", this.onKeyDown);\n    this.target.addEventListener(\"keyup\", this.onKeyUp);\n    document.addEventListener(\"click\", this.onClick);\n  }\n\n  stop(): void {\n    this.target.removeEventListener(\"blur\", this.reset);\n    this.target.removeEventListener(\"contextmenu\", this.reset);\n    this.target.removeEventListener(\"keydown\", this.onKeyDown);\n    this.target.removeEventListener(\"keyup\", this.onKeyUp);\n    document.removeEventListener(\"click\", this.onClick);\n    this.reset();\n  }\n\n  isPressed(key: string): boolean {\n    return this.keysPressed.has(key);\n  }\n\n  reset = (): void => {\n    this.keysPressed.clear();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    // Workaround for browsers firing a queued keydown shortly after a keyup\n    // Ignore keydown if the last keyup was triggered +-100ms from now\n    if (Math.abs(e.timeStamp - (this.lastKeyUp.get(e.key) || 0)) >= 100) {\n      this.keysPressed.add(e.key);\n    }\n  };\n\n  onKeyUp = (e: KeyboardEvent): void => {\n    e.preventDefault();\n    this.keysPressed.delete(e.key);\n    this.lastKeyUp.set(e.key, e.timeStamp);\n  };\n\n  onClick = (e: MouseEvent): void => {\n    // Shift + right click forces context menu in firefox\n    if (e.button === 2 && e.shiftKey) {\n      this.reset();\n    }\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport { ResonanceAudio } from \"resonance-audio\";\nimport {\n  AudioListener,\n  BackSide,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PositionalAudio,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer\n} from \"three\";\nimport ResAudio from \"../audio/ResAudio\";\nimport ResListener from \"../audio/ResListener\";\nimport GamepadListener from \"../input/GamepadListener\";\nimport KeyboardListener from \"../input/KeyboardListener\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport VisualControls from \"./VisualControls\";\n\nenum MouseButton {\n  Primary = 0,\n  Middle = 1,\n  Secondary = 2\n}\n\nconst axes = {\n  x: new Vector3(1, 0, 0),\n  y: new Vector3(0, 1, 0),\n  z: new Vector3(0, 0, 1)\n};\n\nexport default class ProjectCanvas {\n  target: HTMLElement | null = null;\n\n  rafHandle = 0;\n  previousTimestamp = 0;\n  audioType = 1;\n  audioContext = new AudioContext();\n  listener = new AudioListener();\n\n  audioScene = new ResonanceAudio(this.audioContext);\n  resListener = new ResListener(this.audioScene);\n\n  controls: VisualControls;\n  camera = new PerspectiveCamera(75, 1, 0.1, 1000);\n\n  renderer = new WebGLRenderer();\n  canvas: HTMLCanvasElement;\n  outlineMesh = new Mesh();\n\n  raycaster = new Raycaster();\n\n  keys = new KeyboardListener(this.renderer.domElement);\n  gamepads = new GamepadListener();\n  isDraggingCamera = false;\n\n  constructor(private project: Project) {\n    this.audioScene.output.connect(this.audioContext.destination);\n\n    this.audioType = project.audioType;\n    this.renderer.autoClear = false;\n    this.renderer.setClearColor(new Color(0x192a56));\n    this.canvas = this.renderer.domElement;\n    this.canvas.tabIndex = -1; // Make element focusable\n    this.canvas.addEventListener(\"click\", this.onClick);\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n    this.canvas.addEventListener(\"wheel\", this.onWheel);\n    this.canvas.addEventListener(\n      \"contextmenu\",\n      e => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      },\n      true\n    );\n\n    // Setup scene\n\n    this.controls = new VisualControls(project);\n\n    // const ph = new PlaneHelper(this.controls.plane, 10, 0x999999);\n    // this.scene.add(ph);\n\n    this.camera.position.z = 3;\n    this.camera.position.y = 3;\n    this.camera.lookAt(new Vector3(0, 0.5, 0));\n\n    const outlineMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      side: BackSide\n    });\n    this.outlineMesh.material = outlineMaterial;\n    this.outlineMesh.scale.multiplyScalar(1.05);\n\n    this.camera.add(this.listener);\n    this.camera.add(this.resListener);\n  }\n\n  attach(target: HTMLElement): void {\n    this.keys.listen();\n    this.gamepads.listen();\n\n    this.target = target;\n    target.appendChild(this.canvas);\n\n    this.resize();\n    window.requestAnimationFrame(this.animate);\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  detach(): void {\n    window.cancelAnimationFrame(this.rafHandle);\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (this.target) {\n      this.target.removeChild(this.canvas);\n      this.target = null;\n    }\n\n    this.keys.stop();\n    this.gamepads.stop();\n  }\n\n  focus(): void {\n    this.canvas.focus();\n  }\n\n  changeProject(project: Project): void {\n    this.project = project;\n    this.controls.project = project;\n    this.selectObject(null);\n  }\n\n  selectObject(o: GameObject | null): void {\n    if (this.project.activeObject) {\n      this.project.activeObject.remove(this.outlineMesh);\n    }\n\n    if (o) {\n      this.outlineMesh.geometry = o.geometry;\n      o.add(this.outlineMesh);\n    }\n\n    this.project.activeObject = o;\n    this.project.events.onSelect(o);\n  }\n\n  async addAudioToActiveMesh(data: ArrayBuffer): Promise<void> {\n    if (!this.project.activeObject) {\n      return;\n    }\n    let audio;\n    if (this.audioType === 0) {\n      const previousAudio = this.project.activeObject.getObjectByName(\n        \"audio\"\n      ) as PositionalAudio;\n      if (previousAudio) {\n        this.project.activeObject.remove(previousAudio);\n        previousAudio.stop();\n      }\n\n      if (this.project.activeObject.audioId) {\n        this.project.audioLibrary.delete(this.project.activeObject.audioId);\n      }\n\n      this.project.activeObject.audioData = data.slice(0);\n      this.project.activeObject.audioId = this.project.audioLibrary.add(\n        this.project.activeObject.audioData\n      );\n\n      const buffer = await this.audioContext.decodeAudioData(data);\n\n      audio = new PositionalAudio(this.listener);\n      audio.name = \"audio\";\n      audio.setBuffer(buffer);\n      audio.setLoop(true);\n      audio.play();\n    } else {\n      audio = new ResAudio(this.audioScene, this.audioContext);\n      audio.play(\"/audio/breakbeat.wav\");\n    }\n\n    this.project.activeObject.add(audio);\n\n    console.log(\"Successfully added new audio to selected mesh\");\n  }\n\n  resize = (): void => {\n    if (!this.target) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = this.target;\n\n    this.camera.aspect = offsetWidth / offsetHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(offsetWidth, offsetHeight);\n  };\n\n  animate: FrameRequestCallback = t => {\n    this.rafHandle = window.requestAnimationFrame(this.animate);\n\n    const dt = (t - this.previousTimestamp) / 1000;\n    this.previousTimestamp = t;\n    this.update(dt);\n\n    this.renderer.clear();\n    this.renderer.render(this.project.activeRoom, this.camera);\n\n    if (this.project.activeObject) {\n      // Draw controls in front of all other objects\n      // https://stackoverflow.com/questions/12666570/how-to-change-the-zorder-of-object-with-threejs/12666937#12666937\n      this.controls.position.copy(this.project.activeObject.position);\n      this.renderer.clearDepth();\n      this.renderer.render(this.controls, this.camera);\n    }\n  };\n\n  update(dt: number): void {\n    if (this.keys.isPressed(\"w\")) {\n      this.camera.translateOnAxis(axes.z, -2 * dt);\n    }\n    if (this.keys.isPressed(\"s\")) {\n      this.camera.translateOnAxis(axes.z, 2 * dt);\n    }\n    if (this.keys.isPressed(\"a\")) {\n      this.camera.translateOnAxis(axes.x, -2 * dt);\n    }\n    if (this.keys.isPressed(\"d\")) {\n      this.camera.translateOnAxis(axes.x, 2 * dt);\n    }\n    if (this.keys.isPressed(\" \")) {\n      this.camera.position.y += 2 * dt;\n    }\n    if (this.keys.isPressed(\"Shift\")) {\n      this.camera.position.y -= 2 * dt;\n    }\n\n    if (this.keys.isPressed(\"ArrowLeft\")) {\n      this.camera.rotateOnWorldAxis(axes.y, dt);\n    }\n    if (this.keys.isPressed(\"ArrowRight\")) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt);\n    }\n    if (this.keys.isPressed(\"ArrowUp\")) {\n      this.camera.rotateOnAxis(axes.x, dt);\n    }\n    if (this.keys.isPressed(\"ArrowDown\")) {\n      this.camera.rotateOnAxis(axes.x, -dt);\n    }\n\n    const gamepadAxes = {\n      x: this.gamepads.getAxis(0),\n      y: this.gamepads.getAxis(1),\n      rX: this.gamepads.getAxis(2),\n      rY: this.gamepads.getAxis(3),\n      b: this.gamepads.getAxis(4)\n    };\n    // console.log(axes);\n    if (gamepadAxes.x) {\n      this.camera.translateOnAxis(axes.x, 2 * dt * gamepadAxes.x);\n    }\n    if (gamepadAxes.y) {\n      this.camera.translateOnAxis(axes.z, 2 * dt * gamepadAxes.y);\n    }\n    if (gamepadAxes.b) {\n      this.camera.translateOnAxis(axes.y, 2 * dt * gamepadAxes.b);\n    }\n    if (gamepadAxes.rX) {\n      this.camera.rotateOnWorldAxis(axes.y, -dt * gamepadAxes.rX);\n    }\n    if (gamepadAxes.rY) {\n      this.camera.rotateOnAxis(axes.x, -dt * gamepadAxes.rY);\n    }\n  }\n\n  checkSceneClick(raycaster: Raycaster): boolean {\n    const intersections = raycaster.intersectObjects(\n      this.project.activeRoom.children\n    );\n    for (const intersection of intersections) {\n      const o = intersection.object;\n      if (o instanceof GameObject) {\n        this.selectObject(o);\n        return true;\n      }\n    }\n\n    this.selectObject(null);\n    return false;\n  }\n\n  updateRaycaster(e: MouseEvent): void {\n    const size = this.renderer.getSize(new Vector2());\n    // Normalize screen coordinates\n    const x = ((e.pageX - this.target!.offsetLeft) / size.x) * 2 - 1;\n    const y = -((e.pageY - this.target!.offsetTop) / size.y) * 2 + 1;\n    // Update raycaster\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n  }\n\n  onClick = (e: MouseEvent) => {\n    /* Nothing here yet */\n  };\n\n  onMouseDown = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary) {\n      this.isDraggingCamera = true;\n      this.canvas.requestPointerLock();\n    }\n\n    if (e.button !== MouseButton.Primary) {\n      return;\n    }\n\n    this.updateRaycaster(e);\n    if (this.controls.onClick(this.raycaster)) {\n      this.canvas.style.cursor = \"grabbing\";\n    } else {\n      this.checkSceneClick(this.raycaster);\n    }\n  };\n\n  onMouseUp = (e: MouseEvent): void => {\n    if (e.button === MouseButton.Secondary && this.isDraggingCamera) {\n      this.isDraggingCamera = false;\n      document.exitPointerLock();\n    }\n    if (\n      e.button === MouseButton.Primary &&\n      this.controls.objectDragDirection !== null\n    ) {\n      this.controls.objectDragDirection = null;\n      if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onMouseMove = (e: MouseEvent): void => {\n    if (this.isDraggingCamera) {\n      if (e.movementX) {\n        this.camera.rotateOnWorldAxis(axes.y, -e.movementX / 100);\n      }\n      if (e.movementY) {\n        this.camera.rotateOnAxis(axes.x, -e.movementY / 100);\n      }\n    } else {\n      this.updateRaycaster(e);\n      if (this.controls.objectDragDirection !== null) {\n        this.controls.onMove(this.raycaster);\n      } else if (this.controls.getControlFromRaycaster(this.raycaster)) {\n        this.canvas.style.cursor = \"grab\";\n      } else {\n        this.canvas.style.cursor = null;\n      }\n    }\n  };\n\n  onWheel = (e: WheelEvent): void => {\n    e.preventDefault();\n    // console.log('onWheel', e.deltaX, e.deltaY, e.deltaZ, e.deltaMode);\n    let delta = e.deltaY;\n    if (e.deltaMode === 0) {\n      // More granular zoom for pixel mode\n      delta /= 15;\n    }\n    this.camera.translateZ(delta / 10);\n  };\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { roundToPrecision } from \"../utils/math\";\nimport { Group, Input, InputGroup } from \"./styled\";\nimport { EditorRoom } from \"./types\";\n\ninterface Props {\n  room: EditorRoom;\n  onUpdateName(name: string): void;\n  onUpdateDimensions(dimensions: RoomDimensions): void;\n}\n\n// UI component for editing properties specific to a room itself\nexport default class RoomEditor extends React.Component<Props> {\n  render(): React.ReactNode {\n    const { room: r, onUpdateName, onUpdateDimensions } = this.props;\n\n    return (\n      <div>\n        <Group>\n          <label>Room Name</label>\n          <Input\n            type=\"text\"\n            value={r.name}\n            onChange={e => onUpdateName(e.currentTarget.value)}\n          />\n        </Group>\n        <Group>\n          <label>Dimensions (width, depth, height)</label>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.width}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  width: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={5}\n              max={50}\n              value={r.dimensions.depth}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  depth: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n            <Input\n              type=\"number\"\n              step={1}\n              min={2}\n              max={10}\n              value={r.dimensions.height}\n              onChange={e =>\n                onUpdateDimensions({\n                  ...r.dimensions,\n                  height: Math.round(e.currentTarget.valueAsNumber)\n                })\n              }\n            />\n          </InputGroup>\n        </Group>\n      </div>\n    );\n  }\n}\n","/**\n * @author Niklas Korz\n */\nimport React from \"react\";\nimport { RoomDimensions } from \"resonance-audio\";\nimport { Euler, Vector3 } from \"three\";\nimport { saveAsZip } from \"../data/export\";\nimport { openZip } from \"../data/import\";\nimport GameObject from \"../project/GameObject\";\nimport Project from \"../project/Project\";\nimport Room from \"../project/Room\";\nimport MenuBar from \"./MenuBar\";\nimport ObjectEditor from \"./ObjectEditor\";\nimport ProjectCanvas from \"./ProjectCanvas\";\nimport RoomEditor from \"./RoomEditor\";\nimport {\n  Container,\n  FocusedLabel,\n  Group,\n  InnerContainer,\n  Main,\n  RoomList,\n  RoomListItem,\n  Sidebar\n} from \"./styled\";\nimport { EditorObject, EditorRoom } from \"./types\";\n\ninterface State {\n  rooms: EditorRoom[];\n  selectedRoomId: number;\n  selectedObject: EditorObject | null;\n}\n\nexport default class Editor extends React.Component<{}, State> {\n  project: Project = new Project();\n  projectCanvas = new ProjectCanvas(this.project);\n\n  state: State = {\n    rooms: this.project.rooms.map(r => ({\n      id: r.id,\n      name: r.name,\n      dimensions: r.dimensions\n    })),\n    selectedRoomId: 0,\n    selectedObject: null\n  };\n  mainRef = React.createRef<HTMLElement>();\n\n  constructor(props: {}) {\n    super(props);\n\n    this.project.events = {\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n  }\n\n  componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.projectCanvas.attach(this.mainRef.current);\n      this.projectCanvas.focus();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.projectCanvas.detach();\n  }\n\n  onSelectObject = (o: GameObject | null) => {\n    if (o) {\n      this.setState({\n        selectedObject: {\n          id: o.id,\n          name: o.name,\n          position: o.position,\n          scale: o.scale,\n          rotation: o.rotation\n        }\n      });\n    } else {\n      this.setState({ selectedObject: null });\n    }\n  };\n\n  onTranslateObject = (p: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: p\n      }\n    }));\n  };\n\n  onScaleObject = (s: Vector3) => {\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        size: {\n          width: s.x,\n          height: s.y,\n          depth: s.z\n        }\n      }\n    }));\n  };\n\n  selectRoom(id: number): void {\n    this.projectCanvas.selectObject(null);\n    this.project.activeRoom = this.project.rooms[id];\n    this.setState({ selectedRoomId: id, selectedObject: null });\n  }\n\n  updateRoomName = (name: string) => {\n    this.project.activeRoom.name = name;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          name\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateRoomDimensions = (dimensions: RoomDimensions) => {\n    this.project.activeRoom.dimensions = dimensions;\n    this.setState(({ rooms, selectedRoomId }) => ({\n      rooms: [\n        ...rooms.slice(0, selectedRoomId),\n        {\n          ...rooms[selectedRoomId],\n          dimensions\n        },\n        ...rooms.slice(selectedRoomId + 1)\n      ]\n    }));\n  };\n\n  updateName = (name: string) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.name = name;\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        name\n      }\n    }));\n  };\n\n  updateScale = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.scale.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        scale: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updatePosition = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.position.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        position: new Vector3(x, y, z)\n      }\n    }));\n  };\n\n  updateRotation = (x: number, y: number, z: number) => {\n    if (this.project.activeObject) {\n      this.project.activeObject.rotation.set(x, y, z);\n    }\n    this.setState(({ selectedObject }) => ({\n      selectedObject: selectedObject && {\n        ...selectedObject,\n        rotation: new Euler(x, y, z)\n      }\n    }));\n  };\n\n  updateAudio = (data: ArrayBuffer) => {\n    this.projectCanvas.addAudioToActiveMesh(data);\n  };\n\n  onAddRoomClick = () => {\n    const room = new Room(this.project.audioLibrary, \"New room\", {\n      width: 10,\n      depth: 10,\n      height: 3\n    });\n    this.project.rooms.push(room);\n    this.project.activeRoom = room;\n    this.projectCanvas.selectObject(room.addCube());\n    this.setState(s => ({\n      rooms: [\n        ...s.rooms,\n        {\n          id: room.id,\n          name: room.name,\n          dimensions: room.dimensions\n        }\n      ],\n      selectedRoomId: s.rooms.length\n    }));\n  };\n\n  onAddCubeClick = () => {\n    this.project.activeRoom.addCube();\n  };\n\n  onImportClick = async () => {\n    this.project = await openZip();\n    this.project.events = {\n      onSelect: this.onSelectObject,\n      onTranslate: this.onTranslateObject,\n      onScale: this.onScaleObject\n    };\n    this.projectCanvas.changeProject(this.project);\n    this.setState({\n      rooms: this.project.rooms.map(r => ({\n        id: r.id,\n        name: r.name,\n        dimensions: r.dimensions\n      })),\n      selectedRoomId: 0,\n      selectedObject: null\n    });\n  };\n\n  onExportClick = () => {\n    saveAsZip(this.project);\n  };\n\n  render(): React.ReactNode {\n    const o = this.state.selectedObject;\n    return (\n      <Container>\n        <MenuBar\n          onImportProject={this.onImportClick}\n          onExportProject={this.onExportClick}\n          onAddObject={this.onAddCubeClick}\n          onAddRoom={this.onAddRoomClick}\n        />\n        <InnerContainer>\n          <Sidebar>\n            <Group>\n              <label>Rooms</label>\n              <RoomList>\n                {this.state.rooms.map((r, i) => (\n                  <RoomListItem\n                    key={r.id}\n                    onClick={() => this.selectRoom(i)}\n                    active={i === this.state.selectedRoomId}\n                  >\n                    {r.name}\n                  </RoomListItem>\n                ))}\n              </RoomList>\n            </Group>\n            {!o && (\n              <RoomEditor\n                room={this.state.rooms[this.state.selectedRoomId]}\n                onUpdateName={this.updateRoomName}\n                onUpdateDimensions={this.updateRoomDimensions}\n              />\n            )}\n            {o && (\n              <ObjectEditor\n                object={o}\n                onUpdateName={this.updateName}\n                onUpdatePosition={this.updatePosition}\n                onUpdateRotation={this.updateRotation}\n                onUpdateScale={this.updateScale}\n                onUpdateAudio={this.updateAudio}\n              />\n            )}\n          </Sidebar>\n          <Main ref={this.mainRef}>\n            <FocusedLabel>Focused</FocusedLabel>\n          </Main>\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Editor from \"./editor/Editor\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst global = window as any;\n// Safari does not yet support the Web Audio API without a prefix\nif (!global.AudioContext && global.webkitAudioContext) {\n  global.AudioContext = global.webkitAudioContext;\n}\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}